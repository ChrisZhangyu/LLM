{"codes": ["\nimport sys\n\ns = sys.stdin.readline().strip()\nt = sys.stdin.readline().strip()\n\nif len(s) != len(t):\n    print(-1)\n    sys.exit(0)\n\nd = {}\n\nfor i in range(len(s)):\n    if s[i] not in d:\n        d[s[i]] = t[i]\n    elif d[s[i]] != t[i]:\n        print(-1)\n        sys.exit(0)\n\nfor i in range(len(s)):\n    if t[i] not in d:\n        d[t[i]] = s[i]\n    elif d[t[i]] != s[i]:\n        print(-1)\n        sys.exit(0)\n\nprint(len(d))\nfor i in d:\n    print(i, d[i])\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import sys\n\ns = sys.stdin.readline().strip()\nt = sys.stdin.readline().strip()\n\nd = {}\nfor i in range(len(s)):\n    if s[i] in d:\n        d[s[i]].append(i)\n    else:\n        d[s[i]] = [i]\n\nfor i in range(len(t)):\n    if t[i] in d:\n        d[t[i]].append(i)\n    else:\n        d[t[i]] = [i]\n\nans = 0\nfor i in d:\n    if len(d[i]) > 1:\n        ans += 1\n        for j in range(len(d[i])):\n            for k in range(j + 1, len(d[i])):\n                if d[i][j] > d[i][k]:\n                    d[i][j], d[i][k] = d[i][k], d[i][j]\n                else:\n                    d[i][j], d[i][k] = d[i][k], d[i][j]\n\nif ans == 0:\n    print(-1)\nelse:\n    for i in d:\n        if len(d[i]) > 1:\n            for j in range(len(d[i])):\n                for k in range(j + 1, len(d[i])):\n                    if d[i][j] > d[i][k]:\n                        d[i][j], d[i][k] = d[i][k], d[i][j]\n                    else:\n                        d[i][j], d[i][k] = d[i][k], d[i][j]\n\n    for i in d:\n        if len(d[i]) > 1:\n            for j in range(len(d[i])):\n                for k in range(j + 1, len(d[i])):\n                    if d[i][j] > d[i][k]:\n                        d[i][j], d[i][k] = d[i][k], d[i][j]\n                    else:\n                        d[i][j], d[i][k", "\ndef main():\n    s = input()\n    t = input()\n    if len(s) != len(t):\n        print(-1)\n    else:\n        count = 0\n        for i in range(len(s)):\n            if s[i] != t[i]:\n                for j in range(i + 1, len(s)):\n                    if s[i] == t[j] and s[j] == t[i]:\n                        count += 1\n                        print(s[i], s[j])\n                        break\n        if count == 0:\n            print(-1)\n        else:\n            print(count)\n\n\nif __name__ == \"__main__\":\n    main()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "#include <iostream>\n#include <string>\n\nusing namespace std;\n\nint main()\n{\n    string s, t;\n    cin >> s >> t;\n    int n = s.size();\n    int cnt = 0;\n    for (int i = 0; i < n; i++)\n    {\n        if (s[i] != t[i])\n        {\n            for (int j = i + 1; j < n; j++)\n            {\n                if (s[i] == t[j] && s[j] == t[i])\n                {\n                    cnt++;\n                    cout << s[i] << \" \" << s[j] << endl;\n                    break;\n                }\n            }\n        }\n    }\n    if (cnt == 0)\n    {\n        cout << -1 << endl;\n    }\n    else\n    {\n        cout << cnt << endl;\n    }\n    return 0;\n}\n\"\"\"", "\nimport collections\nimport itertools\n\ndef main():\n    s = input().strip()\n    t = input().strip()\n\n    if s == t:\n        print(0)\n        return\n\n    d = collections.defaultdict(list)\n    for i in range(len(s)):\n        d[s[i]].append(t[i])\n\n    for k, v in d.items():\n        if len(v) != 2:\n            print(-1)\n            return\n\n    pairs = []\n    for k, v in d.items():\n        pairs.append((k, v[0]))\n        pairs.append((k, v[1]))\n\n    print(len(pairs))\n    for p in pairs:\n        print(p[0], p[1])\n\nif __name__ == '__main__':\n    main()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\nimport sys\n\ndef main():\n    s = sys.stdin.readline().strip()\n    t = sys.stdin.readline().strip()\n\n    if s == t:\n        print(0)\n        return\n\n    d = {}\n    for i in range(len(s)):\n        if s[i] in d:\n            d[s[i]].append(i)\n        else:\n            d[s[i]] = [i]\n\n    res = []\n    for i in range(len(t)):\n        if t[i] not in d:\n            print(-1)\n            return\n\n        if len(d[t[i]]) == 1:\n            res.append((d[t[i]][0], i))\n        else:\n            res.append((d[t[i]][0], d[t[i]][1]))\n            d[t[i]].remove(d[t[i]][0])\n            d[t[i]].remove(d[t[i]][0])\n\n    print(len(res))\n    for i in res:\n        print(i[0] + 1, i[1] + 1)\n\nif __name__ == '__main__':\n    main()", "\nimport re\n\ns = raw_input()\nt = raw_input()\n\nif s == t:\n    print 0\nelse:\n    count = 0\n    for i in range(len(s)):\n        if s[i] != t[i]:\n            count += 1\n            print s[i], t[i]\n    if count % 2 != 0:\n        print -1\n    else:\n        print count / 2\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\ndef checkio(s, t):\n    if len(s) != len(t):\n        return -1\n\n    d = {}\n    for i in range(len(s)):\n        if s[i] not in d:\n            d[s[i]] = t[i]\n        else:\n            if d[s[i]] != t[i]:\n                return -1\n\n    return len(d)\n\n\nif __name__ == '__main__':\n    assert checkio('helloworld', 'ehoolwlroz') == 3, \"hello\"\n    assert checkio('hastalavistababy', 'hastalavistababy') == 0, \"hello\"\n    assert checkio('merrychristmas', 'christmasmerry') == -1, \"hello\"\n    print(\"Coding complete? Click 'Check' to review your tests and earn cool rewards!\")"], "rewards": [0.8125, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "train rewards": [0.5625, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "time": [28.66993546485901, 58.22745227813721, 87.85522675514221, 117.53017520904541, 132.56538939476013, 162.17285752296448, 179.28575682640076, 208.74370694160461, 223.93756222724915], "sample times": 9}