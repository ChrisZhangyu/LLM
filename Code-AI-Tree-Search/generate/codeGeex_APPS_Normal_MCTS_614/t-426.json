{"codes": ["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```", "import sys\n\nn, k = map(int, sys.stdin.readline().split())\ns = sys.stdin.readline().strip()\n\ns = list(s)\n\nfor i in range(len(s)):\n    if s[i] == '0':\n        k -= 1\n    else:\n        break\n\nfor i in range(len(s) - 1, 0, -1):\n    if s[i] != '0':\n        s[i] = '0'\n        k -= 1\n        break\n\nfor i in range(len(s) - 1, 0, -1):\n    if s[i] == '0' and k > 0:\n        s[i] = '1'\n        k -= 1\n\nfor i in range(len(s) - 1, 0, -1):\n    if s[i] == '0' and k > 0:\n        s[i] = '1'\n        k -= 1\n\nfor i in range(len(s) - 1, 0, -1):\n    if s[i] == '0' and k > 0:\n        s[i] = '1'\n        k -= 1\n\nfor i in range(len(s) - 1, 0, -1):\n    if s[i] == '0' and k > 0:\n        s[i] = '1'\n        k -= 1\n\nfor i in range(len(s) - 1, 0, -1):\n    if s[i] == '0' and k > 0:\n        s[i] = '1'\n        k -= 1\n\nfor i in range(len(s) - 1, 0, -1):\n    if s[i] == '0' and k > 0:\n        s[i] = '1'\n        k -= 1\n\nfor i in range(len(s) - 1, 0, -1):\n    if s[i] == '0' and k > 0:\n        s[i] = '1'\n        k -= 1\n\nfor i in range(len(s) - 1, 0, -1):\n    if s[i] == '0' and k > 0:\n        s[i] = '1'\n        k -= 1\n\nfor i in range(len(s) - 1, 0, -1):\n    if s[i] == '0' and k > 0:\n        s[i] = '1'\n        k -= 1\n\nfor i in range(len(s) - 1,", "\nimport sys\n\nn, k = map(int, sys.stdin.readline().split())\ns = sys.stdin.readline().strip()\ns = list(s)\n\nfor i in range(len(s)):\n    if s[i] == '0':\n        k -= 1\n    else:\n        break\n\nfor i in range(len(s)-1, 0, -1):\n    if s[i] != '0':\n        s[i] = '0'\n        k -= 1\n        break\n\nfor i in range(len(s)-1, 0, -1):\n    if s[i] == '0':\n        s[i] = '9'\n        k -= 1\n    else:\n        break\n\nif k > 0:\n    for i in range(len(s)):\n        if s[i] != '9':\n            s[i] = str(int(s[i]) + 1)\n            k -= 1\n            break\n\nfor i in range(len(s)):\n    if s[i] == '0':\n        s[i] = '9'\n        k -= 1\n    else:\n        break\n\nif k > 0:\n    for i in range(len(s)):\n        if s[i] != '9':\n            s[i] = str(int(s[i]) + 1)\n            k -= 1\n            break\n\nfor i in range(len(s)):\n    if s[i] == '0':\n        s[i] = '9'\n        k -= 1\n    else:\n        break\n\nif k > 0:\n    for i in range(len(s)):\n        if s[i] != '9':\n            s[i] = str(int(s[i]) + 1)\n            k -= 1\n            break\n\nfor i in range(len(s)):\n    if s[i] == '0':\n        s[i] = '9'\n        k -= 1\n    else:\n        break\n\nif k > 0:\n    for i in range(len(s)):\n        if s[i] != '9':\n            s[i] = str(int(s[i]) + 1)\n            k -= 1\n            break\n\nfor i in range(len(s)):\n    if s[i] == '0':\n        s[i] = '9'\n        k -= 1\n    else:\n        break\n\nif k > 0:\n    for i in range(len(s)):\n        if s[i] != '9':\n            s[i] = str", "#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n    int n,k;\n    cin>>n>>k;\n    string s;\n    cin>>s;\n    for(int i=0;i<n;i++)\n    {\n        if(s[i]!='0')\n        {\n            s[i]='0';\n            break;\n        }\n    }\n    for(int i=0;i<k;i++)\n    {\n        for(int j=0;j<n;j++)\n        {\n            if(s[j]!='0')\n            {\n                s[j]='9';\n                break;\n            }\n        }\n    }\n    for(int i=0;i<n;i++)\n    {\n        cout<<s[i];\n    }\n    return 0;\n}", "\ndef main():\n    n, k = map(int, input().split())\n    s = list(map(int, input()))\n    for i in range(n):\n        if s[i] == 0:\n            k -= 1\n        else:\n            break\n    if k < 0:\n        print(0)\n    else:\n        for i in range(n):\n            if s[i] == 0:\n                s[i] = 1\n                k -= 1\n                if k < 0:\n                    break\n        for i in range(n - 1, -1, -1):\n            if s[i] == 0:\n                s[i] = 1\n                k -= 1\n                if k < 0:\n                    break\n        for i in range(n - 1, -1, -1):\n            if s[i] == 0:\n                s[i] = 1\n                k -= 1\n                if k < 0:\n                    break\n        for i in range(n - 1, -1, -1):\n            if s[i] == 0:\n                s[i] = 1\n                k -= 1\n                if k < 0:\n                    break\n        for i in range(n - 1, -1, -1):\n            if s[i] == 0:\n                s[i] = 1\n                k -= 1\n                if k < 0:\n                    break\n        for i in range(n - 1, -1, -1):\n            if s[i] == 0:\n                s[i] = 1\n                k -= 1\n                if k < 0:\n                    break\n        for i in range(n - 1, -1, -1):\n            if s[i] == 0:\n                s[i] = 1\n                k -= 1\n                if k < 0:\n                    break\n        for i in range(n - 1, -1, -1):\n            if s[i] == 0:\n                s[i] = 1\n                k -= 1\n                if k < 0:\n                    break\n        for i in range(n - 1, -1, -1):\n            if s[i] == 0:\n                s[i] = 1\n                k -= 1\n                if k < 0:\n                    break\n        for i in range(n - 1, -1, -1):\n            if s[i] == 0:\n                s[i] = 1\n                k -= 1\n                if k < 0:\n                ", "\n\ndef main():\n    n, k = map(int, input().split())\n    s = list(map(int, input()))\n    for i in range(n):\n        if s[i] == 0:\n            k -= 1\n        else:\n            break\n    for i in range(n-1, -1, -1):\n        if s[i] == 9:\n            k -= 1\n        else:\n            break\n    if k < 0:\n        for i in range(n-1, -1, -1):\n            if s[i] != 0:\n                s[i] -= 1\n                for j in range(i-1, -1, -1):\n                    s[j] = 9\n                break\n    else:\n        for i in range(n-1, -1, -1):\n            if s[i] != 9:\n                s[i] += 1\n                for j in range(i-1, -1, -1):\n                    s[j] = 0\n                break\n    for i in range(n-1, -1, -1):\n        if s[i] == 0:\n            k -= 1\n        else:\n            break\n    if k < 0:\n        for i in range(n-1, -1, -1):\n            if s[i] != 0:\n                s[i] -= 1\n                for j in range(i-1, -1, -1):\n                    s[j] = 9\n                break\n    else:\n        for i in range(n-1, -1, -1):\n            if s[i] != 9:\n                s[i] += 1\n                for j in range(i-1, -1, -1):\n                    s[j] = 0\n                break\n    for i in range(n-1, -1, -1):\n        if s[i] == 0:\n            k -= 1\n        else:\n            break\n    if k < 0:\n        for i in range(n-1, -1, -1):\n            if s[i] != 0:\n                s[i] -= 1\n                for j in range(i-1, -1, -1):\n                    s[j] = 9\n                break\n    else:\n        for i in range(n-1, -1, -1):\n            if s[i] != 9:\n                s[i] += 1\n                for j in range(i-1, -1, -1):\n                    s[j] = 0\n                break\n    for i in", "\ndef getLeadingZeroes(s):\n    return len(s) - len(s.rstrip('0'))\n\ndef getLeadingZeroes(s):\n    return len(s) - len(s.lstrip('0'))\n\ndef getLeadingZeroes(s):\n    return len(s) - len(s.lstrip('0'))\n\ndef getLeadingZeroes(s):\n    return len(s) - len(s.lstrip('0'))\n\ndef getLeadingZeroes(s):\n    return len(s) - len(s.lstrip('0'))\n\ndef getLeadingZeroes(s):\n    return len(s) - len(s.lstrip('0'))\n\ndef getLeadingZeroes(s):\n    return len(s) - len(s.lstrip('0'))\n\ndef getLeadingZeroes(s):\n    return len(s) - len(s.lstrip('0'))\n\ndef getLeadingZeroes(s):\n    return len(s) - len(s.lstrip('0'))\n\ndef getLeadingZeroes(s):\n    return len(s) - len(s.lstrip('0'))", "\n\n-----Input-----\n\nThe first line contains two integers $n$ and $k$ \u2014 the number of digits in the decimal representation of $S$ and the maximum allowed number of changed digits.\n\nThe second line contains the integer $S$. It's guaranteed that $S$ has exactly $n$ digits and doesn't contain any leading zeroes.\n\n\n-----Output-----\n\nOutput the minimal possible value of $S$ which Ania can end with. Note that the resulting integer should also have $n$ digits.\n\n\n-----Examples-----\nInput\n5 3\n51528\n\nOutput\n10028\n\nInput\n3 2\n102\n\nOutput\n100\n\nInput\n1 1\n1\n\nOutput\n0\n\n\n\n-----Note-----\n\nA number has leading zeroes if it consists of at least two digits and its first digit is $0$. For example, numbers $00$, $00069$ and $0101$ have leading zeroes, while $0$, $3000$ and $1010$ don't have leading zeroes.\nUse Standard Input format", "import math\nn,k=map(int,input().split())\ns=input()\ns=s[::-1]\nfor i in range(k):\n    if s[i]!='0':\n        s=s[:i]+'0'+s[i+1:]\n        break\nfor i in range(len(s)-1,-1,-1):\n    if s[i]!='0':\n        s=s[:i]+'1'+s[i+1:]\n        break\ns=s[::-1]\nprint(s)"], "rewards": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.12], "train rewards": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.44], "time": [3.843752861022949, 37.90820050239563, 71.75170874595642, 84.65403032302856, 118.2265408039093, 151.94691824913025, 168.5819764137268, 185.08207058906555, 193.94065189361572], "sample times": 9}