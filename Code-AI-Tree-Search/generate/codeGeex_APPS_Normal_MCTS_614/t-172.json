{"codes": ["\nimport sys\n\nn = int(sys.stdin.readline().strip())\na = list(map(int, sys.stdin.readline().strip().split()))\nb = list(map(int, sys.stdin.readline().strip().split()))\n\ncount = 0\nfor i in range(1, 6):\n    count += abs(a.count(i) - b.count(i))\n\nif count % 2 != 0:\n    print(-1)\nelse:\n    print(count // 2)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import sys\n\nn = int(sys.stdin.readline().strip())\na = list(map(int, sys.stdin.readline().strip().split()))\nb = list(map(int, sys.stdin.readline().strip().split()))\n\ncount = 0\n\nfor i in range(1, 6):\n    count += abs(a.count(i) - b.count(i))\n\nif count % 2 != 0:\n    print(-1)\nelse:\n    print(count // 2)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\ndef min_exchanges(a, b):\n    n = len(a)\n    if n != len(b):\n        return -1\n\n    count = [0] * 6\n    for i in range(n):\n        count[a[i] - 1] += 1\n        count[b[i] - 1] += 1\n\n    for i in range(1, 6):\n        count[i] += count[i - 1]\n\n    res = 0\n    for i in range(n):\n        if a[i] != b[i]:\n            res += abs(count[a[i] - 1] - count[b[i] - 1])\n            count[a[i] - 1] -= 1\n            count[b[i] - 1] -= 1\n            count[a[i] - 1] += 1\n            count[b[i] - 1] += 1\n\n    return res\n\nprint(min_exchanges([5, 4, 4, 4], [5, 5, 4, 5]))\nprint(min_exchanges([1, 1, 1, 1, 1, 1], [5, 5, 5, 5, 5, 5]))\nprint(min_exchanges([3, 2, 5, 5, 2, 3, 3, 3, 2], [4, 1, 4, 1, 1, 2, 4, 4, 1]))", "def min_exchanges(a, b):\n    n = len(a)\n    if n != len(b):\n        return -1\n    if n == 0:\n        return 0\n    if n == 1:\n        if a[0] == b[0]:\n            return 0\n        else:\n            return 1\n    if n == 2:\n        if a[0] == b[0] and a[1] == b[1]:\n            return 0\n        elif a[0] == b[0] and a[1] != b[1]:\n            return 1\n        elif a[0] != b[0] and a[1] == b[1]:\n            return 1\n        elif a[0] != b[0] and a[1] != b[1]:\n            return 2\n    if n == 3:\n        if a[0] == b[0] and a[1] == b[1] and a[2] == b[2]:\n            return 0\n        elif a[0] == b[0] and a[1] == b[1] and a[2] != b[2]:\n            return 1\n        elif a[0] == b[0] and a[1] != b[1] and a[2] == b[2]:\n            return 1\n        elif a[0] == b[0] and a[1] != b[1] and a[2] != b[2]:\n            return 2\n        elif a[0] != b[0] and a[1] == b[1] and a[2] == b[2]:\n            return 1\n        elif a[0] != b[0] and a[1] == b[1] and a[2] != b[2]:\n            return 2\n        elif a[0] != b[0] and a[1] != b[1] and a[2] == b[2]:\n            ", "\ndef getInput():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    return n, a, b\n\n\ndef check(n, a, b):\n    for i in range(1, 6):\n        if a.count(i) != b.count(i):\n            return False\n    return True\n\n\ndef solve(n, a, b):\n    for i in range(1, 6):\n        if a.count(i) != b.count(i):\n            break\n    else:\n        return 0\n\n    ans = 0\n    for i in range(1, 6):\n        while a.count(i) != b.count(i):\n            a[a.index(i)], b[b.index(i)] = b[b.index(i)], a[a.index(i)]\n            ans += 1\n    return ans\n\n\nn, a, b = getInput()\nprint(solve(n, a, b))"], "rewards": [0.07317073170731707, 0.0, 0.07317073170731707, 0.0, 0.0, 0.0], "train rewards": [0.425, 0.0, 0.425, 0.0, 0.0, 0.0], "time": [25.908149003982544, 52.91599893569946, 80.19199299812317, 102.4880039691925, 130.31900119781494, 147.86068439483643], "sample times": 6}