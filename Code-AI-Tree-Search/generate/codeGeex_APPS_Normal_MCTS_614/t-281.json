{"codes": ["\nimport math\n\na, b = map(int, input().split())\n\nprint(int(math.log10(math.factorial(b)) - math.log10(math.factorial(a))))", "import math\na,b=map(int,input().split())\nprint(int(math.log10(b)/math.log10(a))%10)", "12\n\"\"\"\n\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\n\na = int(input())\nb = int(input())\nprint(factorial(b) // factorial(a) % 10)", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```", "1\n\"\"\"", "\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\na = int(input())\nb = int(input())\n\nans = 0\nfor i in range(a, b + 1):\n    ans += factorial(i) // factorial(i - a)\n\nprint(ans % 10)", "import math\n\na, b = map(int, input().split())\n\nprint(int(math.log10(math.factorial(b)) - math.log10(math.factorial(a))) % 10)", "10\n\"\"\"\n\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\n\na = int(input())\nb = int(input())\nans = 0\nfor i in range(a, b + 1):\n    ans += factorial(i) // factorial(i - a)\nprint(ans % 10)"], "rewards": [0.0, 0.03125, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "train rewards": [0.0, 0.0967741935483871, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "time": [4.226477146148682, 17.725502729415894, 23.944575309753418, 28.782314777374268, 34.51236271858215, 46.4470694065094, 51.94784998893738, 68.4298734664917], "sample times": 8}