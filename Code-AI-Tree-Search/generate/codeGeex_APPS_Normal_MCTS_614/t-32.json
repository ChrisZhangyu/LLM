{"codes": ["\nimport sys\n\nn = int(sys.stdin.readline().strip())\n\ndirs = []\n\nfor i in range(n):\n    line = sys.stdin.readline().strip().split()\n    dirs.append([int(line[0]), line[1]])\n\n\ndef is_valid(dirs):\n    n = len(dirs)\n    if n == 0:\n        return True\n\n    if dirs[0][1] == \"North\" and dirs[0][0] < 0:\n        return False\n\n    if dirs[0][1] == \"South\" and dirs[0][0] > 0:\n        return False\n\n    for i in range(1, n):\n        if dirs[i - 1][1] == \"North\" and dirs[i][1] == \"South\":\n            return False\n\n        if dirs[i - 1][1] == \"South\" and dirs[i][1] == \"North\":\n            return False\n\n        if dirs[i - 1][1] == \"West\" and dirs[i][1] == \"East\":\n            return False\n\n        if dirs[i - 1][", "import sys\n\nn = int(sys.stdin.readline().strip())\ndirections = []\nfor i in range(n):\n    line = sys.stdin.readline().strip().split()\n    directions.append([int(line[0]), line[1]])\n\n\ndef check_direction(direction):\n    if direction == \"North\":\n        return 1\n    elif direction == \"South\":\n        return -1\n    elif direction == \"East\":\n        return 1\n    elif direction == \"West\":\n        return -1\n    else:\n        return 0\n\n\ndef check_direction_change(direction):\n    if direction == \"North\":\n        return 1\n    elif direction == \"South\":\n        return -1\n    elif direction == \"East\":\n        return -1\n    elif direction == \"West\":\n        return 1\n    else:\n        return 0\n\n\ndirection = 1\nfor i in range(n):\n    if direction == 1:\n        if directions[i][1] == \"North\":\n            direction = 1\n        elif directions[i][1] == \"South\":\n            direction = -1\n        elif directions[i][1] == \"East\":\n            direction =", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "#include <iostream>\n#include <string>\nusing namespace std;\nint main()\n{\n    int n;\n    cin >> n;\n    bool flag = true;\n    for (int i = 0; i < n; i++)\n    {\n        int t;\n        string dir;\n        cin >> t >> dir;\n        if (dir == \"South\")\n        {\n            if (flag)\n            {\n                flag = false;\n            }\n            else\n            {\n                flag = true;\n            }\n        }\n        else if (dir == \"North\")\n        {\n            if (flag)\n            {\n                flag = true;\n            }\n            else\n            {\n                flag = false;\n            }\n        }\n        else if (dir == \"East\")\n        {\n            if (flag)\n            {\n                flag = false;\n            }\n            else\n            {\n                flag = true;\n            }\n        }\n        else if (dir == \"West\")\n        {\n            if (flag)\n            {\n                flag = true;\n            }\n            else\n            {\n                flag = false;\n            }\n        }\n    }\n    if (flag)\n    {\n", "\ndef main():\n    n = int(input())\n    arr = []\n    for i in range(n):\n        arr.append(list(map(int, input().split())))\n    for i in range(n):\n        if arr[i][1] == \"North\" and arr[i][0] > 0:\n            arr[i][0] = -arr[i][0]\n        elif arr[i][1] == \"South\" and arr[i][0] < 0:\n            arr[i][0] = -arr[i][0]\n        elif arr[i][1] == \"West\" and arr[i][0] > 0:\n            arr[i][0] = -arr[i][0]\n        elif arr[i][1] == \"East\" and arr[i][0] < 0:\n            arr[i][0] = -arr[i][0]\n    for i in range(n):\n        if arr[i][1] == \"North\" and arr[i][0] > 0:\n            arr[i][0] = -arr[i][0]\n        elif arr[i][1] == \"South\" and arr[i][0] < 0:\n           ", "\ndef check_journey(journey):\n    n = len(journey)\n    for i in range(n):\n        if journey[i][1] == \"North\":\n            if journey[i][0] < 0:\n                return \"NO\"\n        elif journey[i][1] == \"South\":\n            if journey[i][0] > 0:\n                return \"NO\"\n        elif journey[i][1] == \"West\":\n            if journey[i][0] < 0:\n                return \"NO\"\n        elif journey[i][1] == \"East\":\n            if journey[i][0] > 0:\n                return \"NO\"\n    return \"YES\"\n\nif __name__ == \"__main__\":\n    n = int(input())\n    journey = []\n    for i in range(n):\n        journey.append(list(map(int, input().split())))\n    print(check_journey(journey))", "\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        t, d = map(int, input().split())\n        if d == 1:\n            if t > 40000:\n                print(\"NO\")\n                return\n        elif d == 2:\n            if t > 40000:\n                print(\"NO\")\n                return\n        elif d == 3:\n            if t > 40000:\n                print(\"NO\")\n                return\n        elif d == 4:\n            if t > 40000:\n                print(\"NO\")\n                return\n        elif d == 5:\n            if t > 40000:\n                print(\"NO\")\n                return\n        elif d == 6:\n            if t > 40000:\n                print(\"NO\")\n                return\n        elif d == 7:\n            if t > 40000:\n                print(\"NO\")\n                return\n        elif d == 8:\n            if t > 40000:\n                print(\"NO\")\n                return\n        elif d == 9:\n            if t > 40000", "import math\n\nn = int(input())\n\nfor i in range(n):\n    t, d = map(int, input().split())\n    if d == 1:\n        if t > 40000:\n            print(\"NO\")\n            break\n    elif d == 2:\n        if t > 40000:\n            print(\"NO\")\n            break\n    elif d == 3:\n        if t > 40000:\n            print(\"NO\")\n            break\n    elif d == 4:\n        if t > 40000:\n            print(\"NO\")\n            break\n    elif d == 5:\n        if t > 40000:\n            print(\"NO\")\n            break\n    elif d == 6:\n        if t > 40000:\n            print(\"NO\")\n            break\n    elif d == 7:\n        if t > 40000:\n            print(\"NO\")\n            break\n    elif d == 8:\n        if t > 40000:\n            print(\"NO\")\n            break\n    elif d == 9:\n        if t > 40000:\n            "], "rewards": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "train rewards": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "time": [15.563745737075806, 32.846205711364746, 50.12923192977905, 67.51772975921631, 84.56236672401428, 101.53429365158081, 118.9088454246521, 136.08093404769897], "sample times": 8}