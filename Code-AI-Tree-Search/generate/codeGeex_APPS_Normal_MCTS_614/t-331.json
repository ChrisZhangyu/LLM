{"codes": ["\nimport sys\n\nn, m, k = map(int, sys.stdin.readline().split())\nhouses = list(map(int, sys.stdin.readline().split()))\n\nhouses[m - 1] = 0\n\nfor i in range(len(houses)):\n    if houses[i] == 0:\n        houses[i] = 1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", "#include <iostream>\n#include <algorithm>\nusing namespace std;\nint main()\n{\n    int n,m,k;\n    cin>>n>>m>>k;\n    int a[n];\n    for(int i=0;i<n;i++)\n    {\n        cin>>a[i];\n    }\n    int ans=0;\n    for(int i=0;i<n;i++)\n    {\n        if(a[i]==0)\n        {\n            continue;\n        }\n        else\n        {\n            if(k>=a[i])\n            {\n                k-=a[i];\n                ans+=abs(m-i);\n            }\n            else\n            {\n                break;\n            }\n        }\n    }\n    cout<<ans<<endl;\n    return 0;\n}\n```", "import sys\n\nn, m, k = map(int, sys.stdin.readline().split())\nhouses = list(map(int, sys.stdin.readline().split()))\n\nhouses[m - 1] = 0\n\nfor i in range(n):\n    if houses[i] == 0:\n        houses[i] = 1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\ndef main():\n    n, m, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    min_dist = 0\n    for i in range(n):\n        if a[i] == 0:\n            a[i] = 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n# Problem: https://uva.onlinejudge.org/index.php?option=com_onlinejudge&Itemid=8&category=13&page=show_problem&problem=101\n# Total points: 100\n\nimport sys\n\n\ndef main():\n    n, m, k = [int(x) for x in input().split()]\n    houses = [int(x) for x in input().split()]\n    houses[m - 1] = 0\n    min_distance = 1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", "import math\nn,m,k=map(int,input().split())\na=list(map(int,input().split()))\nd=[]\nfor i in range(n):\n    if a[i]==0:\n        d.append(math.inf)\n    else:\n        d.append(10*(i-m)+a[i])\nfor i in range(n):\n    for j in range(i+1,n):\n        if d[i]+d[j]<d[m]:\n            d[m]=d[i]+d[j]\nfor i in range(n):\n    if d[i]<=k:\n        print(d[i])\n    else:\n        print(d[m])\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\nimport math\n\nn, m, k = [int(x) for x in input().split()]\n\nhouses = [int(x) for x in input().split()]\n\nhouses[m - 1] = 0\n\nmin_dist = math.inf\n\nfor i in range(n):\n    if houses[i] != 0 and k >= houses[i]:\n        min_dist = min(min_dist, abs(m - i - 1) * 10 + abs(m - i) * 10)\n        k -= houses[i]\n\nprint(min_dist)"], "rewards": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2413793103448276], "train rewards": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.10344827586206896], "time": [16.704555988311768, 29.415201663970947, 45.701178550720215, 62.12395763397217, 78.93160462379456, 95.31159353256226, 112.08732986450195, 128.55674481391907], "sample times": 8}