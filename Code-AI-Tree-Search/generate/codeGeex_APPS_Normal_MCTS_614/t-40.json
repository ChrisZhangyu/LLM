{"codes": ["\nimport sys\n\nn = int(sys.stdin.readline().strip())\n\na = [int(x) for x in sys.stdin.readline().strip().split()]\nb = [int(x) for x in sys.stdin.readline().strip().split()]\n\nfor i in range(n):\n    if a[i] > b[i]:\n        print(\"maybe\")\n        break\nelse:\n    print(\"unrated\")", "import sys\n\nn = int(sys.stdin.readline().strip())\na = [int(x) for x in sys.stdin.readline().strip().split()]\nb = [int(x) for x in sys.stdin.readline().strip().split()]\n\nfor i in range(n):\n    if a[i] > b[i]:\n        print(\"maybe\")\n        break\nelse:\n    print(\"unrated\")", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "class Solution {\npublic:\n    string isRated(vector<vector<int>>& a) {\n        int n=a.size();\n        vector<int> b(n,0);\n        for(int i=0;i<n;i++){\n            b[i]=a[i][1]-a[i][0];\n        }\n        sort(b.begin(),b.end());\n        for(int i=0;i<n;i++){\n            if(b[i]!=b[0]){\n                return \"maybe\";\n            }\n        }\n        if(b[n-1]==0){\n            return \"unrated\";\n        }\n        return \"rated\";\n    }\n};\n```", "\ndef main():\n    n = int(input())\n    arr = []\n    for i in range(n):\n        arr.append(list(map(int, input().split())))\n    arr.sort(key=lambda x: x[0])\n    for i in range(n):\n        if arr[i][0] != arr[i][1]:\n            print(\"rated\")\n            break\n    else:\n        print(\"unrated\")\n\n\nif __name__ == \"__main__\":\n    main()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"], "rewards": [0.2727272727272727, 0.2727272727272727, 0.0, 0.0, 0.0], "train rewards": [0.24242424242424243, 0.24242424242424243, 0.0, 0.0, 0.0], "time": [16.99161648750305, 35.776129722595215, 54.62808156013489, 65.94785475730896, 84.13460350036621], "sample times": 5}