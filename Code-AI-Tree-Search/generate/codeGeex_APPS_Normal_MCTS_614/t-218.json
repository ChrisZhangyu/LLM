{"codes": ["\nimport sys\n\nn, p, q = map(int, sys.stdin.readline().split())\ns = sys.stdin.readline().strip()\n\nif len(s) % p != 0 and len(s) % q != 0:\n    print(-1)\n    sys.exit(0)\n\nif len(s) % p == 0 and len(s) % q == 0:\n    print(2)\n    print(s[:p])\n    print(s[p:])\n    sys.exit(0)\n\nif len(s) % p == 0:\n    print(2)\n    print(s[:p])\n    print(s[p:])\n    sys.exit(0)\n\nif len(s) % q == 0:\n    print(2)\n    print(s[:q])\n    print(s[q:])\n    sys.exit(0)", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "#include <iostream>\n#include <string>\n\nusing namespace std;\n\nint main()\n{\n    int n, p, q;\n    cin >> n >> p >> q;\n    string s;\n    cin >> s;\n    int k = 0;\n    for (int i = 0; i < n; i += p)\n    {\n        if (i + p <= n)\n        {\n            k++;\n            cout << s.substr(i, p) << endl;\n        }\n        if (i + q <= n)\n        {\n            k++;\n            cout << s.substr(i, q) << endl;\n        }\n    }\n    cout << k << endl;\n    return 0;\n}\n\n\"\"\"", "import sys\n\nn, p, q = map(int, sys.stdin.readline().split())\ns = sys.stdin.readline().strip()\n\nif len(s) % p != 0 and len(s) % q != 0:\n    print(-1)\n    sys.exit(0)\n\nif len(s) % p == 0 and len(s) % q == 0:\n    print(2)\n    print(s[:p])\n    print(s[p:])\n    sys.exit(0)\n\nif len(s) % p == 0:\n    print(2)\n    print(s[:p])\n    print(s[p:])\n    sys.exit(0)\n\nif len(s) % q == 0:\n    print(2)\n    print(s[:q])\n    print(s[q:])\n    sys.exit(0)", "\ndef main():\n    n, p, q = map(int, input().split())\n    s = input()\n    k = 0\n    for i in range(0, len(s), p):\n        if len(s[i:i + p]) == p:\n            k += 1\n            print(s[i:i + p])\n    for i in range(0, len(s), q):\n        if len(s[i:i + q]) == q:\n            k += 1\n            print(s[i:i + q])\n    if k == 0:\n        print(-1)\n    else:\n        print(k)\n\n\nif __name__ == '__main__':\n    main()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\n\ndef main():\n    n, p, q = map(int, input().split())\n    s = input()\n\n    if p == q:\n        print(1)\n        print(s)\n        return\n\n    if n < p or n < q:\n        print(-1)\n        return\n\n    if n == p:\n        print(1)\n        print(s[:p])\n        return\n\n    if n == q:\n        print(1)\n        print(s[:q])\n        return\n\n    if n == p + q - 1:\n        print(2)\n        print(s[:p])\n        print(s[p:])\n        return\n\n    if n == p + q - 2:\n        print(2)\n        print(s[:p])\n        print(s[p + 1:])\n        return\n\n    if n == p + q - 3:\n        print(2)\n        print(s[:p])\n        print(s[p + 2:])\n        return\n\n    if n == p + q - 4:\n        print(2)\n        print(s[:p])\n        print(s[p + 3:])\n        return\n\n    if n == p + q - 5:\n        print(2)\n        print(s[:p])\n        print(s[p + 4:])\n        return\n\n    if n == p + q - 6:\n        print(2)\n        print(s[:p])\n        print(s[p + 5:])\n        return\n\n    if n == p + q - 7:\n        print(2)\n        print(s[:p])\n        print(s[p + 6:])\n        return\n\n    if n == p + q - 8:\n        print(2)\n        print(s[:p])\n        print(s[p + 7:])\n        return\n\n    if n == p + q - 9:\n        print(2)\n        print(s[:p])\n        print(s[p + 8:])\n        return\n\n    if n == p + q - 10:\n        print(2)\n        print(s[:p])\n        print(s[p + 9:])\n        return\n\n    if n == p + q - 11:\n        print(2)\n        print(s[:p])\n        print(s[p + 10:])\n        return\n\n    if n == p + q - 12:\n        print(2)\n        print(s[:p])\n        print(s"], "rewards": [0.5833333333333334, 0.0, 0.0, 0.5833333333333334, 0.0, 0.0], "train rewards": [0.3611111111111111, 0.0, 0.0, 0.3611111111111111, 0.0, 0.0], "time": [12.335981130599976, 44.99441647529602, 58.2518789768219, 71.75603032112122, 104.62562370300293, 138.00482726097107], "sample times": 6}