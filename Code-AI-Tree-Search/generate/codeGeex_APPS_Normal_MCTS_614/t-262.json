{"codes": ["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import sys\n\nn = int(sys.stdin.readline().strip())\n\ngrid = []\n\nfor i in range(n):\n    grid.append(list(map(int, sys.stdin.readline().strip().split())))\n\nfor i in range(n):\n    for j in range(n):\n        if grid[i][j] == 0:\n            grid[i][j] = 1\n            break\n\nfor i in range(n):\n    for j in range(n):\n        if grid[i][j] == 0:\n            grid[i][j] = 1\n            break\n\nfor i in range(n):\n    for j in range(n):\n        if grid[i][j] == 0:\n            grid[i][", "\nimport sys\n\nn = int(sys.stdin.readline().strip())\n\ngrid = []\n\nfor i in range(n):\n    grid.append(list(map(int, sys.stdin.readline().strip().split())))\n\nfor i in range(n):\n    for j in range(n):\n        if grid[i][j] == 0:\n            break\n    else:\n        continue\n    break\n\nfor i in range(n):\n    for j in range(n):\n        if grid[j][i] == 0:\n            break\n    else:\n        continue\n    break\n\nfor i in range(n):\n    for j in range(n):\n        if grid[i][j] == 0:\n            break\n    else:", "#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n    int n;\n    cin>>n;\n    int a[n+1][n+1];\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=1;j<=n;j++)\n        {\n            cin>>a[i][j];\n        }\n    }\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=1;j<=n;j++)\n        {\n            cout<<a[i][j]<<\" \";\n        }\n        cout<<endl;\n    }\n    for(int i=1;i<=n;i++)\n    {\n", "\ndef magic_square():\n    n = int(input())\n    grid = []\n    for i in range(n):\n        grid.append(list(map(int, input().split())))\n    for i in range(n):\n        if 0 in grid[i]:\n            break\n    else:\n        print(-1)\n        return\n    for i in range(n):\n        if sum(grid[i]) != sum(grid[j][i] for j in range(n)):\n            print(-1)\n            return\n    for i in range(n):\n        if sum(grid[j][i] for j in range(n)) != sum(grid[i][j] for j in range(n)):\n            print(-1)\n            return\n    for i in range(n):", "import math\n\nn = int(input())\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\n\nfor i in range(n):\n    for j in range(n):\n        if a[i][j] == 0:\n            a[i][j] = 1\n            for k in range(n):\n                a[i][k] += a[i][j]\n                a[k][j] += a[i][j]\n            a[i][i] += a[i][j]\n            a[i][n - i + 1] += a[i][j]\n\nfor i in range(n):\n    for j in range(n):\n        if a[i][j] == ", "\n\ndef magic_square():\n    n = int(input())\n    a = []\n    for i in range(n):\n        a.append(list(map(int, input().split())))\n    for i in range(n):\n        for j in range(n):\n            if a[i][j] == 0:\n                x = int(input())\n                a[i][j] = x\n    for i in range(n):\n        if sum(a[i]) != sum([a[j][i] for j in range(n)]):\n            return -1\n        if sum(a[i]) != sum([a[i][j] for j in range(n)]):\n            return -1\n        if sum(a[i]) != sum([a[j][n -"], "rewards": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "train rewards": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "time": [7.119155645370483, 19.01382827758789, 30.935484409332275, 43.07222390174866, 54.757089614868164, 66.48081541061401, 78.14342904090881], "sample times": 7}