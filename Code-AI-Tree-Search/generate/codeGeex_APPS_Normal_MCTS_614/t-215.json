{"codes": ["\nimport sys\n\nn = int(sys.stdin.readline().strip())\ns = sys.stdin.readline().strip()\n\ncount = 0\n\nfor i in range(n):\n    if s[i].islower():\n        count += 1\n\nprint(count)", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import sys\n\nn = int(sys.stdin.readline().strip())\ns = sys.stdin.readline().strip()\n\ndef is_pretty(s):\n    for i in range(len(s) - 1):\n        for j in range(i + 1, len(s)):\n            if s[i].islower() and s[j].isupper() and s[i] == s[j].lower():\n                return False\n            if s[i].isupper() and s[j].islower() and s[i].lower() == s[j]:\n                return False\n\n    for i in range(len(s) - 1):\n        for j in range(i + 1, len(s)):\n            if s[i].islower() and s[j].isupper() and s[i] == s[j].lower():\n                return False\n            if s[i].isupper() and s[j].islower() and s[i].lower() == s[j]:\n                return False\n\n    for i in range(len(s) - 1):\n        for j in range(i + 1, len(s)):\n            if s[i].islower() and s[j].isupper() and s[i] == s[j].lower():\n                return False\n            if s[i].isupper() and s[j].islower() and s[i].lower() == s[j]:\n                return False\n\n    for i in range(len(s) - 1):\n        for j in range(i + 1, len(s)):\n            if s[i].islower() and s[j].isupper() and s[i] == s[j].lower():\n                return False\n            if s[i].isupper() and s[j].islower() and s[i].lower() == s[j]:\n                return False\n\n    for i in range(len(s) - 1):\n        for j in range(i + 1, len(s)):\n            if s[i].islower() and s[j].isupper() and s[i] == s[j].lower():\n                return False\n            if s[i].isupper() and s[j].islower() and s[i].lower() == s[j]:\n                return False\n\n    for i in range(len(s) - 1):\n        for j in range(i + 1, len(s", "\ndef is_pretty(s):\n    for i in range(len(s) - 1):\n        if s[i] == s[i + 1]:\n            return False\n    for i in range(len(s) - 2):\n        if s[i].islower() and s[i + 2].isupper():\n            return False\n    return True\n\n\ndef main():\n    n = int(input())\n    s = input()\n    count = 0\n    for i in range(n - 2):\n        if is_pretty(s[i:i + 3]):\n            count += 1\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "#include <iostream>\n#include <string>\nusing namespace std;\nint main()\n{\n    int n;\n    cin >> n;\n    string s;\n    cin >> s;\n    int ans = 0;\n    for (int i = 0; i < n; i++)\n    {\n        int cnt = 0;\n        for (int j = i; j < n; j++)\n        {\n            if (s[j] >= 'a' && s[j] <= 'z')\n            {\n                cnt++;\n            }\n            else\n            {\n                break;\n            }\n        }\n        for (int j = i; j < n; j++)\n        {\n            if (s[j] >= 'A' && s[j] <= 'Z')\n            {\n                cnt++;\n            }\n            else\n            {\n                break;\n            }\n        }\n        ans = max(ans, cnt);\n    }\n    cout << ans << endl;\n    return 0;\n}\n\n\n\n\n\n\n\n\n\n\n```", "\ndef pretty_set(s):\n    count = 0\n    for i in range(len(s) - 1):\n        if s[i].islower() and s[i + 1].isupper():\n            count += 1\n    return count\n\nprint(pretty_set(input()))"], "rewards": [0.16666666666666666, 0.0, 0.0, 0.0, 0.0, 0.05555555555555555], "train rewards": [0.3333333333333333, 0.0, 0.0, 0.0, 0.0, 0.1388888888888889], "time": [8.062379360198975, 38.898728132247925, 69.91914820671082, 100.9700608253479, 116.13497519493103, 124.93007826805115], "sample times": 6}