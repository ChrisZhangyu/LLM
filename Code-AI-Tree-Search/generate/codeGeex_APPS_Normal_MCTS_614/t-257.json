{"codes": ["\nimport math\n\nn, k = map(int, input().split())\n\nx = []\ny = []\nc = []\n\nfor i in range(n):\n    xi, yi, ci = map(int, input().split())\n    x.append(xi)\n    y.append(yi)\n    c.append(ci)\n\nx = sorted(x)\ny = sorted(y)\nc = sorted(c)\n\n\ndef calc_time(x, y, c, xi, yi, ci):\n    return c * math.sqrt(math.pow(x - xi, 2) + math.pow(y - yi, 2))\n\n\nans = 0\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        for l in range(j + 1, n):\n            ans = max(ans, calc_time(x[i], y[i], c[i], x[j], y[j], c[j]) + calc_time(x[j], y[j], c[j], x[l], y[l], c[l]))\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        ans = max(ans, calc_time(x[i], y[i], c[i], x[j], y[j], c[j]))\n\nfor i in range(n):\n    ans = max(ans, calc_time(x[i], y[i], c[i], x[i], y[i], c[i]))\n\nprint(ans)", "import math\n\nn, k = map(int, input().split())\nx, y, c = [], [], []\n\nfor i in range(n):\n    x.append(int(input()))\n    y.append(int(input()))\n    c.append(int(input()))\n\nx.sort()\ny.sort()\nc.sort()\n\nans = 0\n\nfor i in range(k):\n    ans += c[i] * math.sqrt((x[i] - x[k - 1]) ** 2 + (y[i] - y[k - 1]) ** 2)\n\nfor i in range(k, n):\n    ans += c[i] * math.sqrt((x[i] - x[k - 1]) ** 2 + (y[i] - y[k - 1]) ** 2)\n\nprint(ans / k)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "#include <iostream>\n#include <cmath>\n\nusing namespace std;\n\nint main()\n{\n    int n, k;\n    cin >> n >> k;\n    double x[n + 1], y[n + 1], c[n + 1];\n    for (int i = 1; i <= n; i++)\n    {\n        cin >> x[i] >> y[i] >> c[i];\n    }\n    double ans = 0;\n    for (int i = 1; i <= n; i++)\n    {\n        double temp = 0;\n        for (int j = 1; j <= n; j++)\n        {\n            if (i == j)\n            {\n                continue;\n            }\n            temp = max(temp, sqrt((x[i] - x[j]) * (x[i] - x[j]) + (y[i] - y[j]) * (y[i] - y[j])));\n        }\n        ans = max(ans, c[i] * temp);\n    }\n    cout << ans << endl;\n    return 0;\n}\n\n\"\"\"", "\n\"\"\"", "\n\"\"\"\n\n\ndef main():\n    n, k = map(int, input().split())\n    x = []\n    y = []\n    c = []\n    for i in range(n):\n        x.append(int(input()))\n        y.append(int(input()))\n        c.append(int(input()))\n    x = sorted(x)\n    y = sorted(y)\n    c = sorted(c)\n    # print(x)\n    # print(y)\n    ans = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            if x[i] == x[j] and y[i] == y[j]:\n                c[i] = 0\n                c[j] = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            if x[i] == x[j] and y[i] == y[j]:\n                c[i] = 0\n                c[j] = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            if x[i] == x[j] and y[i] == y[j]:\n                c[i] = 0\n                c[j] = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            if x[i] == x[j] and y[i] == y[j]:\n                c[i] = 0\n                c[j] = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            if x[i] == x[j] and y[i] == y[j]:\n                c[i] = 0\n                c[j] = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            if x[i] == x[j] and y[i] == y[j]:\n                c[i] = 0\n                c[j] = 0\n    for i in range(n"], "rewards": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "train rewards": [0.030303030303030304, 0.0, 0.0, 0.0, 0.0, 0.0], "time": [26.59387183189392, 57.759509801864624, 85.42058563232422, 106.99792075157166, 124.79065918922424, 152.38269686698914], "sample times": 6}