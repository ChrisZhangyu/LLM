{"codes": ["\nimport sys\n\nn, m = map(int, sys.stdin.readline().split())\n\nzeroes = [0] * n\nones = [1] * m\n\nfor i in range(n):\n    zeroes[i] = 1\n\nfor i in range(m):\n    ones[i] = 0\n\nfor i in range(n + m - 1):\n    if zeroes[i] == 1 and ones[i] == 1:\n        zeroes[i] = 0\n        ones[i] = 0\n    elif zeroes[i] == 0 and ones[i] == 0:\n        zeroes[i] = 1\n        ones[i] = 1\n    elif zeroes[i] == 1 and ones[i] == 0:\n        zeroes[i] = 0\n        ones[i] = 1\n    elif zeroes[i] == 0 and ones[i] == 1:\n        zeroes[i] = 1\n        ones[i] = 0\n    else:\n        print(\"-1\")\n        exit()\n\nfor i in range(n + m):\n    if i < n:\n        print(zeroes[i], end=\"\")\n    else:\n        print(ones[i - n], end=\"\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import sys\n\nn, m = map(int, sys.stdin.readline().split())\n\nzeroes = [0] * n\nones = [1] * m\n\nfor i in range(n):\n    zeroes[i] = 1\n\nfor i in range(m):\n    ones[i] = 0\n\nfor i in range(n):\n    for j in range(m):\n        if zeroes[i] == 1 and ones[j] == 1:\n            zeroes[i] = 0\n            ones[j] = 0\n\nfor i in range(n):\n    if zeroes[i] == 1:\n        print(1, end='')\n    else:\n        print(0, end='')\n\nfor i in range(m):\n    if ones[i] == 1:\n        print(1, end='')\n    else:\n        print(0, end='')", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n    int n,m;\n    cin>>n>>m;\n    int a[n+m];\n    for(int i=0;i<n;i++)\n    {\n        a[i]=0;\n    }\n    for(int i=n;i<n+m;i++)\n    {\n        a[i]=1;\n    }\n    for(int i=0;i<n+m;i++)\n    {\n        cout<<a[i];\n    }\n    return 0;\n}", "\ndef main():\n    n, m = [int(x) for x in input().split()]\n    if (n + m) % 2 != 0:\n        print(-1)\n    else:\n        if n == 0 and m == 0:\n            print(0)\n        elif n == 0 and m != 0:\n            print(1)\n        elif n != 0 and m == 0:\n            print(0)\n        elif n != 0 and m != 0:\n            if n > m:\n                print(1)\n            elif n < m:\n                print(0)\n            else:\n                if n % 2 == 0:\n                    print(1)\n                else:\n                    print(0)\n\n\nif __name__ == '__main__':\n    main()\n\n\n-----Input-----\n\nThe first line contains two integers: n (1 \u2264 n \u2264 10^6) \u2014 the number of cards containing number 0; m (1 \u2264 m \u2264 10^6) \u2014 the number of cards containing number 1.\n\n\n-----Output-----\n\nIn a single line print the required sequence of zeroes and ones without any spaces. If such sequence is impossible to obtain, print -1.\n\n\n-----Examples-----\nInput\n1 2\n\nOutput\n101\n\nInput\n4 8\n\nOutput\n110110110101\n\nInput\n4 10\n\nOutput\n11011011011011\n\nInput\n1 5\n\nOutput\n-1\nUse Standard Input format\n", "#include <bits/stdc++.h>\nusing namespace std;\nint main()\n{\n    int n,m;\n    cin>>n>>m;\n    string s;\n    if(n>m)\n    {\n        cout<<\"-1\";\n        return 0;\n    }\n    if(n==m)\n    {\n        for(int i=0;i<n;i++)\n        {\n            s+='0';\n        }\n        for(int i=0;i<m;i++)\n        {\n            s+='1';\n        }\n    }\n    else\n    {\n        for(int i=0;i<n;i++)\n        {\n            s+='0';\n        }\n        for(int i=0;i<m-n;i++)\n        {\n            s+='1';\n        }\n    }\n    cout<<s;\n    return 0;\n}", "\ndef check(n, m):\n    if n == 0 and m == 0:\n        return True\n    if n == 0 or m == 0:\n        return False\n    if n == 1 and m == 1:\n        return True\n    if n == 1 or m == 1:\n        return False\n    if n == 2 and m == 2:\n        return True\n    if n == 2 or m == 2:\n        return False\n    if n == 3 and m == 3:\n        return True\n    if n == 3 or m == 3:\n        return False\n    if n == 4 and m == 4:\n        return True\n    if n == 4 or m == 4:\n        return False\n    if n == 5 and m == 5:\n        return True\n    if n == 5 or m == 5:\n        return False\n    if n == 6 and m == 6:\n        return True\n    if n == 6 or m == 6:\n        return False\n    if n == 7 and m == 7:\n        return True\n    if n == 7 or m == 7:\n        return False\n    if n == 8 and m == 8:\n        return True\n    if n == 8 or m == 8:\n        return False\n    if n == 9 and m == 9:\n        return True\n    if n == 9 or m == 9:\n        return False\n    if n == 10 and m == 10:\n        return True\n    if n == 10 or m == 10:\n        return False\n    if n == 11 and m == 11:\n        return True\n    if n == 11 or m == 11:\n        return False\n    if n == 12 and m == 12:\n        return True\n    if n == 12 or m == 12:\n        return False\n    if n == 13 and m == 13:\n        return True\n    if n == 13 or m == 13:\n        return False\n    if n == 14 and m == 14:\n        return True\n    if n == 14 or m == 14:\n        return False\n    if n == 15 and m == 15:\n        return True\n    if n == 15 or m == 15:\n        return False\n    if n == 16 and m == 16:"], "rewards": [0.0, 0.045454545454545456, 0.0, 0.0, 0.0, 0.0, 0.0], "train rewards": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "time": [30.248687267303467, 45.92606496810913, 87.12266445159912, 96.50089287757874, 127.89992809295654, 141.14384770393372, 173.04499793052673], "sample times": 7}