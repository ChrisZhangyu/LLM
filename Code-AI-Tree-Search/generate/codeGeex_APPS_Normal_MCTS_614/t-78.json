{"codes": ["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "class Solution {\npublic:\n    int countArrangement(int n, int k) {\n        int mod = 1e9+7;\n        vector<vector<int>> dp(n+1, vector<int>(k+", "```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int mod=1000000007;\nint n,t;\nstruct song{\n\tint t,g;", "\nimport sys\n\nn, t = map(int, sys.stdin.readline().split())\nsongs = []\nfor i in range(n):\n    songs.append(list(map(int, sys.stdin.", "\ndef read_input():\n    n, T = map(int, input().split())\n    songs = []\n    for i in range(n):\n        songs.append(list(map(int, input().split())))\n", "\ndef get_input():\n    n, T = map(int, input().split())\n    songs = []\n    for i in range(n):\n        songs.append(list(map(int, input().split())))\n", "class Solution:\n    def numberOfWays(self, n: int, t: int) -> int:\n        mod = 1000000007\n        songs = []\n        for i in range(n):", "\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int mod=1000000007;\nconst int maxn=15;\nint n,t,", "\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int mod=1000000007;\nconst int maxn=15;\nint n,t"], "rewards": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "train rewards": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "time": [3.276013135910034, 8.554591417312622, 14.107256889343262, 19.6752986907959, 24.870963096618652, 30.118314504623413, 35.92053842544556, 41.4324586391449, 46.83835577964783], "sample times": 9}