{"codes": ["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import sys\n\nn, a, b = map(int, sys.stdin.readline().split())\ns = sys.stdin.readline().strip()\n\nans = 0\nfor i in range(n):\n    if s[i] == '*':\n        continue\n    if s[i] == 'A' and s[i + 1] == 'A':\n        continue\n    if s[i] == 'B' and s[i + 1] == 'B':\n        continue\n    ans += 1\n\nprint(ans)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n\tint n,a,b;\n\tcin>>n>>a>>b;\n\tstring s;\n\tcin>>s;\n\tint ans=0;\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tif(s[i]=='*')\n\t\t{\n\t\t\tans++;\n\t\t}\n\t}\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tif(s[i]=='*')\n\t\t{\n\t\t\tfor(int j=i+1;j<n;j++)\n\t\t\t{\n\t\t\t\tif(s[j]=='*')\n\t\t\t\t{\n\t\t\t\t\tans++;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tif(s[i]=='*')\n\t\t{\n\t\t\tfor(int j=i+1;j<n;j++)\n\t\t\t{\n\t\t\t\tif(s[j]=='*')\n\t\t\t\t{\n\t\t\t\t\tans++;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tif(s[i]=='*')\n\t\t{\n\t\t\tfor(int j=i+1;j<n;j++)\n\t\t\t{\n\t\t\t\tif(s[j]=='*')", "\ndef solution(n, a, b, seats):\n    \"\"\"\n    :type n: int\n    :type a: int\n    :type b: int\n    :type seats: list[str]\n    :rtype: int\n    \"\"\"\n    count = 0\n    for i in range(len(seats)):\n        if seats[i] == '*':\n            count += 1\n        else:\n            count = 0\n        if count == a or count == b:\n            return count\n    return count\n\n\nif __name__ == '__main__':\n    fptr = open(os.environ['OUTPUT_PATH'], 'w')\n\n    n = int(input())\n\n    a = int(input())\n\n    b = int(input())\n\n    seats = input()\n\n    result = solution(n, a, b, seats)\n\n    fptr.write(str(result) + '\\n')\n\n    fptr.close()", "\nimport math\nimport os\nimport random\nimport re\nimport sys\n\n\n\nif __name__ == '__main__':\n    n, a, b = map(int, input().split())\n    s = input()\n    count = 0\n    for i in range(n):\n        if s[i] == '*':\n            count += 1\n    if count == a + b:\n        print(0)\n    else:\n        print(a + b - count)", "import math\nimport os\nimport random\nimport re\nimport sys\n\n\n\nif __name__ == '__main__':\n    nm = input().split()\n\n    n = int(nm[0])\n\n    m = int(nm[1])\n\n    k = int(nm[2])\n\n    arr = [0] * n\n\n    for i in range(n):\n        arr[i] = '*'\n\n    for i in range(m):\n        arr[i] = 'A'\n\n    for i in range(k):\n        arr[i+m] = 'B'\n\n    count = 0\n\n    for i in range(n-1):\n        if arr[i] == arr[i+1]:\n            count += 1\n\n    print(n-count)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\ndef check(s):\n    for i in range(len(s) - 1):\n        if s[i] == 'A' and s[i + 1] == 'A':\n            return False\n        if s[i] == 'B' and s[i + 1] == 'B':\n            return False\n    return True\n\nn, a, b = map(int, input().split())\ns = input()\nans = 0\nfor i in range(n - a - b + 1):\n    if check(s[i:i + a + b]):\n        ans = max(ans, a + b)\n    s = s[1:]\nprint(ans)", "\ndef count(s):\n    count = 0\n    for i in range(len(s)):\n        if s[i] == '*':\n            count += 1\n    return count\n\nn, a, b = [int(x) for x in input().split()]\ns = input()\nans = 0\nfor i in range(n):\n    if s[i] == '*':\n        ans = max(ans, count(s[i+1:i+a+b+1]))\nprint(ans)"], "rewards": [0.0, 0.24, 0.0, 0.0, 0.0, 0.0, 0.56, 0.0], "train rewards": [0.0, 0.375, 0.0, 0.0, 0.0, 0.0, 0.5833333333333334, 0.0], "time": [5.221256256103516, 30.458243131637573, 55.29894042015076, 69.33139371871948, 78.07232618331909, 102.90293288230896, 122.2076621055603, 131.34191989898682], "sample times": 8}