{"codes": ["\nimport sys\n\nn, m = map(int, sys.stdin.readline().split())\na = list(map(int, sys.stdin.readline().split()))\n\nans = 0\nfor i in range(m):\n    l, r = map(int, sys.stdin.readline().split())\n    s = sum(a[l - 1:r])\n    ans += s * (r - l + 1)\n\nprint(ans)", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n    int n,m;\n    cin>>n>>m;\n    int a[n+1];\n    for(int i=1;i<=n;i++)\n    {\n        cin>>a[i];\n    }\n    int ans=0;\n    for(int i=0;i<m;i++)\n    {\n        int l,r;\n        cin>>l>>r;\n        int sum=0;\n        for(int j=l;j<=r;j++)\n        {\n            sum+=a[j];\n        }\n        ans=max(ans,sum);\n    }\n    cout<<ans", "class Solution(object):\n    def maxHappy(self, n, m, a, l, r):\n        \"\"\"\n        :type n: int\n        :type m: int\n        :type a: List[int]\n        :type l: List[int]\n        :type r: List[int]\n        :rtype: int\n        \"\"\"", "\n#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n    int n,m;\n    cin>>n>>m;\n    int a[n+1];\n    for(int i=1;i<=n;i++)\n    {\n        cin>>a[i];\n    }\n    int ans=0;\n    for(int i=0;i<m;i++)\n    {\n        int l,r;\n        cin>>l>>r;\n        int sum=0;\n        for(int j=l;j<=r;j++)\n        {\n            sum+=a[j];\n        }\n        ans=max(ans,sum);\n    }\n    cout<<", "#include <iostream>\n#include <vector>\nusing namespace std;\nint main()\n{\n    int n, m;\n    cin >> n >> m;\n    vector<int> a(n);\n    for (int i = 0; i < n; i++)\n    {\n        cin >> a[i];\n    }\n    vector<vector<int>> b(m);\n    for (int i = 0; i < m; i++)\n    {\n        int l, r;\n        cin >> l >> r;\n        b[i].push_back(l);\n        b[i].push_back(r);\n    }\n    int ans = 0;\n    for (int i = 0; i <", "class Solution:\n    def maxHappiness(self, n, m, a):\n        \"\"\"\n        :type n: int\n        :type m: int\n        :type a: List[int]\n        :rtype: int\n        \"\"\"\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n```", "\n\ndef max_happiness(flowers, subarrays):\n    max_happiness = 0\n    for subarray in subarrays:\n        happiness = 0\n        for i in range(subarray[0], subarray[1] + 1):\n            happiness += flowers[i]\n        max_happiness = max(max_happiness, happiness)\n    return max_happiness\n\n\nif __name__ == '__main__':\n    n, m = map(int, input().split())\n    flowers = list(map(int, input().split()))\n    subarrays = []\n    for _ in range(m):\n        subarrays.append(list(map(int"], "rewards": [0.045454545454545456, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "train rewards": [0.09523809523809523, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "time": [11.659823894500732, 23.291130542755127, 34.40737557411194, 41.53824329376221, 52.9267795085907, 64.0585069656372, 71.8493959903717, 83.18460726737976], "sample times": 8}