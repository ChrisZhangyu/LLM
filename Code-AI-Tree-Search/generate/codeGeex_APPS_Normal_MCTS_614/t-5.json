{"codes": ["\nimport sys\n\nn, pos, l, r = [int(x) for x in sys.stdin.readline().split()]\n\ndef min_sec(n, pos, l, r):\n    if l == 1 and r == n:\n        return 0\n    elif l == 1:\n        return r - pos\n    elif r == n:\n        return pos - l + 1\n    else:\n        return min(pos - l + 1, r - pos)\n\nprint(min_sec(n, pos, l, r))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import sys\n\nn, pos, l, r = map(int, sys.stdin.readline().split())\n\ndef min_secs(n, pos, l, r):\n    if l == r:\n        return 0\n    elif l > r:\n        return 0\n    elif l == r - 1:\n        return 1\n    elif l == r - 2:\n        return 2\n    elif l == r - 3:\n        return 3\n    elif l == r - 4:\n        return 4\n    elif l == r - 5:\n        return 5\n    elif l == r - 6:\n        return 6\n    elif l == r - 7:\n        return 7\n    elif l == r - 8:\n        return 8\n    elif l == r - 9:\n        return 9\n    elif l == r - 10:\n        return 10\n    elif l == r - 11:\n        return 11\n    elif l == r - 12:\n        return 12\n    elif l == r - 13:\n        return 13\n    elif l == r - 14:\n        return 14\n    elif l == r - 15:\n        return 15\n    elif l == r - 16:\n        return 16\n    elif l == r - 17:\n        return 17\n    elif l == r - 18:\n        return 18\n    elif l == r - 19:\n        return 19\n    elif l == r - 20:\n        return 20\n    elif l == r - 21:\n        return 21\n    elif l == r - 22:\n        return 22\n    elif l == r - 23:\n        return", "#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\nint main()\n{\n    int n, pos, l, r;\n    cin >> n >> pos >> l >> r;\n    vector<int> v(n);\n    for (int i = 0; i < n; i++)\n    {\n        cin >> v[i];\n    }\n    if (l == r)\n    {\n        cout << 0 << endl;\n        return 0;\n    }\n    if (l > r)\n    {\n        cout << 0 << endl;\n        return 0;\n    }\n    if (l == 1 && r == n)\n    {\n        cout << 0 << endl;\n        return 0;\n    }\n    if (l == 1 && r == n - 1)\n    {\n        cout << 1 << endl;\n        return 0;\n    }\n    if (l == 2 && r == n - 1)\n    {\n        cout << 1 << endl;\n        return 0;\n    }\n    if (l == 1 && r == n - 2)\n    {\n        cout << 2 << endl;\n        return 0;\n    }\n    if (l == 2 && r == n - 2)\n    {\n        cout << 2 << endl;\n        return 0;\n    }\n    if (l == 1 && r == n - 3)\n    {\n        cout << 3 << endl;\n        return 0;\n    }\n    if (l == 2 && r == n - 3)\n    {\n        cout << 3 << endl;\n        return 0;\n    }\n    if (l == 3 && r == n - 3)\n    {", "\ndef main():\n    n, pos, l, r = [int(x) for x in input().split()]\n\n    if l == r:\n        print(0)\n        return\n\n    if l > r:\n        l, r = r, l\n\n    if pos == l:\n        print(0)\n        return\n\n    if pos == r:\n        print(0)\n        return\n\n    if pos == l - 1:\n        print(1)\n        return\n\n    if pos == r + 1:\n        print(1)\n        return\n\n    if pos == l - 2:\n        print(2)\n        return\n\n    if pos == r + 2:\n        print(2)\n        return\n\n    if pos == l - 3:\n        print(3)\n        return\n\n    if pos == r + 3:\n        print(3)\n        return\n\n    if pos == l - 4:\n        print(4)\n        return\n\n    if pos == r + 4:\n        print(4)\n        return\n\n    if pos == l - 5:\n        print(5)\n        return\n\n    if pos == r + 5:\n        print(5)\n        return\n\n    if pos == l - 6:\n        print(6)\n        return\n\n    if pos == r + 6:\n        print(6)\n        return\n\n    if pos == l - 7:\n        print(7)\n        return\n\n    if pos == r + 7:\n        print(7)\n        return"], "rewards": [0.09565217391304348, 0.0, 0.0, 0.0, 0.0], "train rewards": [0.05263157894736842, 0.0, 0.0, 0.0, 0.0], "time": [24.668620347976685, 49.845174074172974, 74.70187449455261, 100.2861123085022, 121.97293257713318], "sample times": 5}