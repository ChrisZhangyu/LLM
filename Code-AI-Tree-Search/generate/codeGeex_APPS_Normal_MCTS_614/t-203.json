{"codes": ["\nimport sys\n\nn = int(sys.stdin.readline().strip())\n\ndepublicans = sys.stdin.readline().strip()\n\nremocrats = sys.stdin.readline().strip()\n\nif depublicans.count('D') > remocrats.count('D'):\n    print 'D'\nelif remocrats.count('D') > depublicans.count('D'):\n    print 'R'", "import sys\n\nn = int(sys.stdin.readline().strip())\ndeps = sys.stdin.readline().strip()\n\ndeps = list(deps)\n\nfor i in range(n):\n    if deps[i] == 'D':\n        deps[i] = 1\n    else:\n        deps[i] = 0\n\nfor i in range(n):\n    if deps[i] == 1:\n        for j in range(i+1, n):\n            if deps[j] == 1:\n                deps[j] = 0\n\nfor i in range(n):\n    if deps[i] == 0:\n        for j in range(i+1, n):\n            if deps[j] == 1:\n                deps[j] = 0\n\nfor i in range(n):\n    if deps[i] == 1:\n        for j in range(i+1, n):\n            if deps[j] == 1:\n                deps[j] = 0\n\nfor i in range(n):\n    if deps[i] == 1:\n        for j in range(i+1, n):\n            if deps[j] == 1:\n                deps[j] = 0\n\nfor i in range(n):\n    if deps[i] == 1:\n        for j in range(i+1, n):\n            if deps[j] == 1:\n                deps[j]", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <cmath>\n#include <cstdlib>\n#include <cctype>\n#include <set>\n#include <map>\n#include <vector>\n#include <stack>\n#include <queue>\n#include <string>\n#include <ctime>\n#include <cassert>\n#include <climits>\n#include <cfloat>\n#include <cstddef>\n#include <cstring>\n#include <cwchar>\n#include <cwctype>\nusing namespace std;\n\nint main()\n{\n    int n;\n    cin >> n;\n    string s;\n    cin >> s;\n    for (int i = 0; i < n; i++)\n    {\n        if (s[i] == 'D')\n        {\n            s[i] = 'R';\n        }\n        else\n        {\n            s[i] = 'D';\n        }\n    }\n    cout << s << endl;\n    return 0;\n}", "\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <cmath>\n#include <cstdlib>\n#include <string>\n#include <cctype>\n#include <vector>\n#include <stack>\n#include <queue>\n#include <deque>\n#include <set>\n#include <map>\n#include <utility>\n#include <ctime>\n#include <cassert>\n#include <climits>\n#include <ciso646>\n#include <cstddef>\n#include <cerrno>\n#include <cwchar>\n#include <cwctype>\n#include <cstring>\n#include <cinttypes>\n#include <ciso646>\n#include <cstddef>\n#include <cerrno>\n#include <cwchar>\n#include <cwctype>\n#include <cstring>\n#include <cinttypes>\n#include <ciso646>\n#include <cstddef>\n#include <cerrno>\n#include <cwchar>\n#include <cwctype>\n#include <cstring>\n#include <cinttypes>\n#include <ciso646>\n#include <cstddef>\n#include <cerrno>\n#include <cwchar>\n#include <cwctype>\n#include <cstring>\n#include <cinttypes>\n#include <ciso6", "#!/usr/bin/python\n\nimport sys\n\nn = int(sys.stdin.readline())\n\ndepublicans = sys.stdin.readline()\n\nremocrats = sys.stdin.readline()", "\n\nimport sys\n\nn = int(sys.stdin.readline().strip())\ndeps = sys.stdin.readline().strip()\n\ndeps = list(deps)\n\ndeps = deps[::-1]\n\nfor i in range(n):\n    if deps[i] == \"D\":\n        deps[i] = \"R\"\n    else:\n        deps[i] = \"D\"\n\nprint(\"\".join(deps))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"], "rewards": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "train rewards": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "time": [12.331058740615845, 33.04900789260864, 53.69313645362854, 69.79290413856506, 90.10492873191833, 98.27556991577148, 118.48178172111511], "sample times": 7}