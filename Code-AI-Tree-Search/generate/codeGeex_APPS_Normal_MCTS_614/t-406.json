{"codes": ["\n#include <iostream>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nint main()\n{\n    int n;\n    cin >> n;\n    vector<int> sticks;\n    for (int i = 0; i < n; i++)\n    {\n        int stick;\n        cin >> stick;\n        sticks.push_back(stick);\n    }\n    sort(sticks.begin(), sticks.end());\n    int max_area = 0;\n    for (int i = 0; i < n - 3; i++)\n    {\n        for (int j = i + 1; j < n - 2; j++)\n        {\n            for (int k = j + 1; k < n - 1; k++)\n            {\n                for (int l = k + 1; l < n; l++)\n                {\n                    if (sticks[i] <= sticks[j] && sticks[j] <= sticks[k] && sticks[k] <= sticks[l])\n                    {\n                        max_area = max(max_area, sticks[i] * sticks[j] * sticks[k] * sticks[l]);\n                    }\n                }\n            }\n        }\n    }\n    cout << max_area << endl;\n    return 0;\n}", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```", "#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n    int n;\n    cin>>n;\n    int a[n];\n    for(int i=0;i<n;i++)\n    {\n        cin>>a[i];\n    }\n    sort(a,a+n);\n    int ans=0;\n    for(int i=0;i<n-3;i++)\n    {\n        for(int j=i+1;j<n-2;j++)\n        {\n            for(int k=j+1;k<n-1;k++)\n            {\n                for(int l=k+1;l<n;l++)\n                {\n                    if(a[i]<=a[j]&&a[j]<=a[k]&&a[k]<=a[l])\n                    {\n                        ans=max(ans,a[i]*a[j]*a[k]*a[l]);\n                    }\n                }\n            }\n        }\n    }\n    cout<<ans;\n    return 0;\n}", "import sys\n\nn = int(sys.stdin.readline().strip())\nsticks = [int(x) for x in sys.stdin.readline().strip().split()]\nsticks.sort()\n\ndef get_area(sticks):\n    area = 0\n    for i in range(len(sticks) - 1):\n        for j in range(i + 1, len(sticks)):\n            if sticks[i] <= sticks[j]:\n                area = max(area, sticks[i] * sticks[j])\n            else:\n                area = max(area, sticks[j] * sticks[i])\n    return area\n\nmax_area = 0\nfor i in range(len(sticks) - 1):\n    for j in range(i + 1, len(sticks)):\n        if sticks[i] <= sticks[j]:\n            sticks[i], sticks[j] = sticks[j], sticks[i]\n            max_area = max(max_area, get_area(sticks))\n            sticks[i], sticks[j] = sticks[j], sticks[i]\n        else:\n            sticks[i], sticks[j] = sticks[j], sticks[i]\n            max_area = max(max_area, get_area(sticks))\n            sticks[i], sticks[j] = sticks[j], sticks[i]\n\nprint(max_area)", "\nimport sys\n\nn = int(sys.stdin.readline().strip())\nsticks = [int(x) for x in sys.stdin.readline().strip().split()]\n\nsticks.sort(reverse=True)\n\nmax_area = 0\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        for k in range(j + 1, n):\n            for l in range(k + 1, n):\n                area = sticks[i] * sticks[j] * sticks[k] * sticks[l]\n                if area > max_area:\n                    max_area = area\n\nprint(max_area)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "#include <bits/stdc++.h>\nusing namespace std;\nint main()\n{\n    int n;\n    cin >> n;\n    int a[n];\n    for (int i = 0; i < n; i++)\n    {\n        cin >> a[i];\n    }\n    sort(a, a + n);\n    int ans = 0;\n    for (int i = 0; i < n - 3; i++)\n    {\n        for (int j = i + 1; j < n - 2; j++)\n        {\n            for (int k = j + 1; k < n - 1; k++)\n            {\n                for (int l = k + 1; l < n; l++)\n                {\n                    if (a[i] <= a[j] && a[j] <= a[k] && a[k] <= a[l])\n                    {\n                        ans = max(ans, a[i] * a[j] * a[k] * a[l]);\n                    }\n                }\n            }\n        }\n    }\n    cout << ans << endl;\n    return 0;\n}\n\"\"\"", "\n\nimport sys\n\nn = int(sys.stdin.readline().strip())\n\nsticks = list(map(int, sys.stdin.readline().strip().split()))\n\nsticks.sort()\n\ndp = [0] * (n + 1)\n\nfor i in range(1, n + 1):\n    dp[i] = dp[i - 1] + sticks[i - 1]\n\nfor i in range(1, n + 1):\n    for j in range(i + 1, n + 1):\n        if sticks[j - 1] > sticks[i - 1]:\n            dp[j] = max(dp[j], dp[i] + sticks[j - 1] - sticks[i - 1])\n\nprint(dp[n])\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"], "rewards": [0.0, 0.0, 0.0, 0.038461538461538464, 0.0, 0.0, 0.0], "train rewards": [0.0, 0.0, 0.0, 0.0, 0.11538461538461539, 0.0, 0.0], "time": [17.96869158744812, 21.91115403175354, 38.224586486816406, 63.09604597091675, 97.17251920700073, 116.59730100631714, 141.23639273643494], "sample times": 7}