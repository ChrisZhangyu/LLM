{"codes": ["\nimport sys\n\nn, f = map(int, sys.stdin.readline().split())\nk, l = [], []\nfor i in range(n):\n    k.append(int(sys.stdin.readline().split()[0]))\n    l.append(int(sys.stdin.readline().split()[0]))\n\ndp = [[0 for i in range(f + 1)] for j in range(n + 1)]\n\nfor i in range(1, n + 1):\n    for j in range(1, f + 1):\n        if j == 1:\n            dp[i][j] = k[i - 1]\n        else:\n            dp[i][j] = max(dp[i - 1][j - 1] + k[i - 1], dp[i - 1][j])\n\nfor i in range(n - 1, -1, -1):\n    for j in range(1, f + 1):\n        if j == 1:\n            dp[i][j] = l[i]\n        else:\n            dp[i][j] = max(dp[i + 1][j - ", "import sys\n\nn, f = map(int, sys.stdin.readline().split())\nk, l = [], []\nfor i in range(n):\n    k.append(int(sys.stdin.readline().split()[0]))\n    l.append(int(sys.stdin.readline().split()[0]))\n\ndp = [[0 for i in range(f + 1)] for j in range(n + 1)]\n\nfor i in range(1, n + 1):\n    for j in range(1, f + 1):\n        if j == 1:\n            dp[i][j] = k[i - 1]\n        else:\n            dp[i][j] = max(dp[i - 1][j], dp[i - 1][j - 1] + k[i - 1] * 2)\n\nprint(dp[n][f])", "#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n    int n,f;\n    cin>>n>>f;\n    int a[n+1],b[n+1];\n    for(int i=1;i<=n;i++)\n    {\n        cin>>a[i]>>b[i];\n    }\n    int ans=0;\n    for(int i=1;i<=f;i++)\n    {\n        ans+=a[i]*2;\n    }\n    for(int i=f+1;i<=n;i++)\n    {\n        ans+=a[i];\n    }\n    cout<<ans;\n    return 0;\n}\n```", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\ndef main():\n    n, f = map(int, input().split())\n    k, l = [], []\n    for i in range(n):\n        x, y = map(int, input().split())\n        k.append(x)\n        l.append(y)\n\n    for i in range(f):\n        k[i] *= 2\n\n    ans = 0\n    for i in range(n):\n        ans += min(k[i], l[i])\n\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n\n\"\"\"\n\n\ndef main():\n    n, f = map(int, input().split())\n    k, l = [], []\n    for i in range(n):\n        x, y = map(int, input().split())\n        k.append(x)\n        l.append(y)\n\n    for i in range(f):\n        k[i] *= 2\n\n    ans = 0\n    for i in range(n):\n        ans += min(k[i], l[i])\n\n    print(ans)\n\n\nif __name__ == \"__main__\":\n    main", "#include <bits/stdc++.h>\nusing namespace std;\n\nint main()\n{\n    int n, f;\n    cin >> n >> f;\n    int k[n], l[n];\n    for (int i = 0; i < n; i++)\n    {\n        cin >> k[i] >> l[i];\n    }\n    int ans = 0;\n    for (int i = 0; i < f; i++)\n    {\n        ans += k[i] * 2;\n    }\n    for (int i = f; i < n; i++)\n    {\n        ans += k[i];\n    }\n    cout << ans << endl;\n    return 0;\n}\n```", "import math\n\nn, f = map(int, input().split())\nk = []\nl = []\nfor i in range(n):\n    k.append(list(map(int, input().split())))\n\nfor i in range(n):\n    l.append(k[i][1])\n\nfor i in range(f):\n    k[i][0] = k[i][0] * 2\n    l[i] = l[i] * 2\n\nans = 0\nfor i in range(f):\n    ans += k[i][0]\n\nfor i in range(f, n):\n    ans += min(k[i][0], l[i])\n\nprint(ans)"], "rewards": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2978723404255319], "train rewards": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2608695652173913], "time": [16.238097667694092, 33.76058650016785, 46.03705453872681, 63.20213437080383, 80.33089256286621, 92.09913086891174, 109.49172616004944], "sample times": 7}