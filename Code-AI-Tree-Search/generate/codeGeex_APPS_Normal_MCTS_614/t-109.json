{"codes": ["\nimport math\n\nn, m, r, k = list(map(int, input().split()))\n\n\ndef f(n, m, r, k):\n    if n < r or m < r:\n        return 0\n    if k == 0:\n        return 0\n    if r == 1:\n        return n * m\n    if n == r or m == r:\n        return (n - r + 1) * (m - r + 1) * r * r\n    if n == r + 1 or m == r + 1:\n        return (n - r) * (m - r) * r * r\n    if n == r + 2 or m == r + 2:\n        return (n - r - 1) * (m - r - 1) * r * r\n    if n == r + 3 or m == r + 3:\n        return (n - r - 2) * (m - r - 2) * r * r\n    if n == r + 4 or m == r + 4:\n        return (n - r - 3) * (m - r - 3) * r * r\n    if n == r + 5 or m == r + 5:\n        return (n - r - 4) * (m - r - 4) * r * r\n    if n == r + 6 or m == r + 6:\n        return (n - r - 5) * (m - r - 5) * r * r\n    if n == r + 7 or m == r + 7:\n        return (n - r - 6) * (m - r - 6) * r * r\n    if n == r + 8", "import sys\n\nn, m, r, k = map(int, sys.stdin.readline().split(' '))\n\ndef f(x, y):\n    return (x + r - 1) * (y + r - 1)\n\ndef g(x, y):\n    return (x + r - 1) * (y + r - 1) - f(x, y)\n\ndef h(x, y):\n    return (x + r - 1) * (y + r - 1) - f(x, y) + k\n\nans = 0\nfor i in range(n - r + 1):\n    for j in range(m - r + 1):\n        ans = max(ans, h(i, j))\nprint(ans / (n - r + 1) / (m - r + 1))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#include<queue>\n#include<stack>\n#include<set>\n#include<map>\n#include<vector>\n#include<ctime>\n#include<cstdlib>\n#include<bitset>\n#include<utility>\n#include<sstream>\n#include<cassert>\n#include<climits>\n#include<complex>\n#include<string>\n#include<cctype>\n#include<ciso646>\n#include<cmath>\n#include<cerrno>\n#include<csetjmp>\n#include<csignal>\n#include<cstdarg>\n#include<cstddef>\n#include<cstdlib>\n#include<cwchar>\n#include<cwctype>\n#include<exception>\n#include<initializer_list>\n#include<limits>\n#include<new>\n#include<type_traits>\n#include<unordered_map>\n#include<unordered_set>\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef double db;\ntypedef long double ldb;\ntypedef vector<int> vi;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\ntypedef pair<db, db> pdd;\ntypedef pair<ldb, ldb> pld;\ntypedef vector<pii> vii;\ntypedef vector<vi> vvi;\ntypedef", "import math\n\nn, m, r, k = map(int, input().split())\n\ndef f(n, m, r, k):\n    if n < r or m < r:\n        return 0\n    if k == 0:\n        return 0\n    if r == 1:\n        return n * m\n    if n == r or m == r:\n        return (n - r + 1) * (m - r + 1) * r * r\n    if k == 1:\n        return (n - r + 1) * (m - r + 1) * r\n    if k == 2:\n        return (n - r + 1) * (m - r + 1) * r * 2\n    if k == 3:\n        return (n - r + 1) * (m - r + 1) * r * 3\n    if k == 4:\n        return (n - r + 1) * (m - r + 1) * r * 4\n    if k == 5:\n        return (n - r + 1) * (m - r + 1) * r * 5\n    if k == 6:\n        return (n - r + 1) * (m - r + 1) * r * 6\n    if k == 7:\n        return (n - r + 1) * (m - r + 1) * r * 7\n    if k == 8:\n        return (n - r + 1) * (m - r + 1) * r * 8\n    if k == 9:\n        return (n - r + 1) * (m - r + 1) * r * 9", "\ndef fishes(n, m, r, k):\n    if r > min(n, m):\n        return 0\n    if k > min(n * m, 100000):\n        return 0\n    if k == 0:\n        return 0\n    if r == 1:\n        return k * 1.0 / min(n * m, 100000)\n    if r == n or r == m:\n        return k * 1.0 / min(n * m, 100000)\n    if n == 1 or m == 1:\n        return k * 1.0 / min(n * m, 100000)\n    if n == 1 and m == 1:\n        return k * 1.0 / min(n * m, 100000)\n    if n == 1 and m == 2:\n        return k * 1.0 / min(n * m, 100000)\n    if n == 1 and m == 3:\n        return k * 1.0 / min(n * m, 100000)\n    if n == 2 and m == 1:\n        return k * 1.0 / min(n * m, 100000)\n    if n == 2 and m == 2:\n        return k * 1.0 / min(n * m, 100000)\n    if n == 2 and m == 3:\n        return k * 1.0 / min(n * m, 100000)\n    if n == 3 and m == 1:", "import random\n\nn, m, r, k = map(int, input().split())\n\n\ndef fishes(n, m, r, k):\n    fishes = []\n    for i in range(k):\n        x, y = random.randint(0, n - 1), random.randint(0, m - 1)\n        while (x, y) in fishes:\n            x, y = random.randint(0, n - 1), random.randint(0, m - 1)\n        fishes.append((x, y))\n    return fishes\n\n\nfishes = fishes(n, m, r, k)\nprint(len(fishes) / ((n - r + 1) * (m - r + 1)))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\nimport sys\n\nn, m, r, k = [int(x) for x in sys.stdin.readline().split()]\n\ndef f(n, m, r, k):\n    if n < r or m < r:\n        return 0\n    if k == 0:\n        return 0\n    if r == 1:\n        return n * m\n    if n == r or m == r:\n        return (n - r + 1) * (m - r + 1) * r ** 2\n    if n == r + 1 or m == r + 1:\n        return (n - r) * (m - r) * r ** 2\n    if n == r + 2 or m == r + 2:\n        return (n - r - 1) * (m - r - 1) * r ** 2\n    if n == r + 3 or m == r + 3:\n        return (n - r - 2) * (m - r - 2) * r ** 2\n    if n == r + 4 or m == r + 4:\n        return (n - r - 3) * (m - r - 3) * r ** 2\n    if n == r + 5 or m == r + 5:\n        return (n - r - 4) * (m - r - 4) * r ** 2\n    if n == r + 6 or m == r + 6:\n        return (n - r - 5) * (m - r - 5) * r ** 2\n    if n == r + 7 or m == r + 7:\n        return (n - r - 6) * (m - r - "], "rewards": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "train rewards": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "time": [23.100709199905396, 47.1217098236084, 80.8246533870697, 104.56094670295715, 128.16937899589539, 152.43161845207214, 176.03792095184326, 209.20974731445312], "sample times": 8}