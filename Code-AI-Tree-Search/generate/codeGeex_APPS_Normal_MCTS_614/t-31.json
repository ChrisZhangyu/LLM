{"codes": ["\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nll gcd(ll a,ll b)\n{\n    if(b==0)\n    {\n        return a;\n    }\n    else\n    {\n        return gcd(b,a%b);\n    }\n}\nint main()\n{\n    ll n,k;\n    cin>>n>>k;\n    ll a=1,b=1;\n    for(ll i=1;i<=k;i++)\n    {\n        a=a*2%1000003;\n    }\n    for(ll i=1;i<=n;i++)\n    {\n        b=b*2%1000003;\n    }\n    ll g=gcd(a,b);\n    a/=g;\n    b/=g;\n    cout<<a<<\" \"<<b;\n    return 0;\n}\n```", "import fractions\n\nn, k = map(int, input().split())\n\nans = fractions.Fraction(1, 1)\n\nfor i in range(2, n + 1):\n    ans *= fractions.Fraction(n - i + 1, i)\n\nprint((ans * k).numerator, (ans * k).denominator % 1000003)", "\nimport fractions\n\nn, k = map(int, input().split())\n\nans = fractions.Fraction(1, 1)\n\nfor i in range(1, n + 1):\n    ans *= fractions.Fraction(n - i + 1, n)\n\nprint((ans * k).numerator, (ans * k).denominator)\n\n\"\"\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst ll mod=1000003;\nll gcd(ll a,ll b)\n{\n    if(b==0)\n    {\n        return a;\n    }\n    return gcd(b,a%b);\n}\nint main()\n{\n    ll n,k;\n    cin>>n>>k;\n    ll a=1,b=1;\n    for(ll i=1;i<=k;i++)\n    {\n        a=(a*2)%mod;\n        b=(b*2)%mod;\n    }\n    ll g=gcd(a,b);\n    a/=g;\n    b/=g;\n    cout<<a<<\" \"<<b<<endl;\n    return 0;\n}\n```", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import math\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef main():\n    n, k = map(int, input().split())\n    if n == 1:\n        print(1, 1)\n    else:\n        a = math.factorial(n)\n        b = math.factorial(n) // (math.factorial(n - k) * math.factorial(k))\n        print(a % 1000003, lcm(a, 1000003) % 1000003)\n\n\nif __name__ == '__main__':\n    main()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\nimport math\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\ndef lcm(a, b):\n    return (a * b) / gcd(a, b)\n\ndef main():\n    n, k = map(int, input().split())\n    if n == 1:\n        print(1, 1)\n        return\n    if k == 2:\n        print(1, 2)\n        return\n    if k == 1:\n        print(1, 1)\n        return\n    if k == 3:\n        print(1, 4)\n        return\n    if k == 4:\n        print(1, 8)\n        return\n    if k == 5:\n        print(1, 16)\n        return\n    if k == 6:\n        print(1, 32)\n        return\n    if k == 7:\n        print(1, 64)\n        return\n    if k == 8:\n        print(1, 128)\n        return\n    if k == 9:\n        print(1, 256)\n        return\n    if k == 10:\n        print(1, 512)\n        return\n    if k == 11:\n        print(1, 1024)\n        return\n    if k == 12:\n        print(1, 2048)\n        return\n    if k == 13:\n        print(1, 4096)\n        return\n    if k == 14:\n        print(1, 8192)\n        return\n    if k == 15", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n# Problem: https://yukicoder.me/problems/no/100\nimport sys\nfrom fractions import gcd\n\ndef main():\n    n, k = map(int, sys.stdin.readline().rstrip().split())\n    if n == 1:\n        print(1, 1)\n    else:\n        if k == 2:\n            print(1, 1)\n        else:\n            a = 1\n            b = 1\n            for i in range(2, k + 1):\n                a *= n\n                a %= 1000003\n                b *= i\n                b %= 1000003\n            g = gcd(a, b)\n            a //= g\n            b //= g\n            print(a, b)\n\n\nif __name__ == \"__main__\":\n    main()\n\n\n\n\n\n\n\n```"], "rewards": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "train rewards": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "time": [18.4425687789917, 25.81998038291931, 58.64950776100159, 73.74717974662781, 97.46255350112915, 120.7113709449768, 144.34174180030823, 159.15366768836975], "sample times": 8}