{"codes": ["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import sys\n\nn, k = map(int, sys.stdin.readline().split())\na = list(map(int, sys.stdin.readline().split()))\n\ne = 0\ns = 0\n\nfor i in range(n):\n    if a[i] == 1:\n        e += 1\n    else:\n        s += 1\n\nfor i in range(1, n, k):\n    if a[i] == 1:\n        e -= 1\n    else:\n        s -= 1\n\nprint(abs(e - s))", "\nimport sys\n\nn, k = map(int, sys.stdin.readline().split())\n\ntabs = list(map(int, sys.stdin.readline().split()))\n\ntest_tabs = 0\nsocial_tabs = 0\n\nfor i in range(n):\n    if tabs[i] == 1:\n        test_tabs += 1\n    else:\n        social_tabs += 1\n\nfor i in range(0, n, k):\n    if tabs[i] == 1:\n        test_tabs -= 1\n    else:\n        social_tabs -= 1\n\nprint(abs(test_tabs - social_tabs))", "#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n    int n,k;\n    cin>>n>>k;\n    int a[n];\n    for(int i=0;i<n;i++)\n    {\n        cin>>a[i];\n    }\n    int e=0,s=0;\n    for(int i=0;i<n;i++)\n    {\n        if(a[i]==1)\n        {\n            e++;\n        }\n        else\n        {\n            s++;\n        }\n    }\n    for(int i=0;i<n;i++)\n    {\n        if((i+1)%k==0)\n        {\n            if(a[i]==1)\n            {\n                e--;\n            }\n            else\n            {\n                s--;\n            }\n        }\n    }\n    cout<<abs(e-s);\n    return 0;\n}", "\ndef main():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    e = 0\n    s = 0\n    for i in range(n):\n        if a[i] == 1:\n            e += 1\n        else:\n            s += 1\n    for i in range(1, n, k):\n        if a[i] == 1:\n            e -= 1\n        else:\n            s -= 1\n    print(abs(e - s))\n\n\nif __name__ == '__main__':\n    main()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"], "rewards": [0.0, 0.18604651162790697, 0.18604651162790697, 0.0, 0.0], "train rewards": [0.0, 0.3333333333333333, 0.23809523809523808, 0.0, 0.0], "time": [7.6844117641448975, 29.431793928146362, 43.449532985687256, 59.148507833480835, 80.6549015045166], "sample times": 5}