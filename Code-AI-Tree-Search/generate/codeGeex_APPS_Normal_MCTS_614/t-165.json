{"codes": ["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n# https://github.com/terryyin/leetcode\n# Time:  O(1)\n\n\nclass Solution(object):\n    def countMeals(self, breakfast, dinner, supper):\n        \"\"\"\n        :type breakfast: int\n        :type dinner: int\n        :type supper: int\n        :rtype: int\n        \"\"\"\n        return min(breakfast, dinner, supper)\n\n\nif __name__ == '__main__':\n    print(Solution().countMeals(3, 2, 1))\n    print(Solution().countMeals(1, 0, 0))\n    print(Solution().countMeals(1, 1, 1))\n    print(Solution().countMeals(1000000000000000000, 0, 1000000000000000000))", "import sys\n\nb, d, s = map(int, sys.stdin.readline().split())\n\nif b + d + s == 0:\n    print(0)\nelif b == 0:\n    print(d + s)\nelif d == 0:\n    print(b + s)\nelif s == 0:\n    print(b + d)\nelse:\n    print(min(b, d, s))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\nimport sys\n\nb, d, s = map(int, sys.stdin.readline().split())\n\nif b + d + s == 0:\n    print(0)\nelif b == 0:\n    print(d + s)\nelif d == 0:\n    print(b + s)\nelif s == 0:\n    print(b + d)\nelse:\n    print(min(b, d, s))", "\ndef main():\n    b, d, s = map(int, input().split())\n    if b + d + s == 0:\n        print(0)\n    elif b == 0 and d == 0 and s == 0:\n        print(0)\n    elif b == 0 and d == 0 and s != 0:\n        print(s)\n    elif b == 0 and d != 0 and s == 0:\n        print(d)\n    elif b == 0 and d != 0 and s != 0:\n        print(min(d, s))\n    elif b != 0 and d == 0 and s == 0:\n        print(b)\n    elif b != 0 and d == 0 and s != 0:\n        print(min(b, s))\n    elif b != 0 and d != 0 and s == 0:\n        print(min(b, d))\n    elif b != 0 and d != 0 and s != 0:\n        print(min(min(b, d), s))\n\n\nif __name__ == '__main__':\n    main()", "import math\n\nb, d, s = list(map(int, input().split()))\n\nif b == 0 and d == 0 and s == 0:\n    print(0)\nelif b == 0 and d == 0 and s != 0:\n    print(s)\nelif b == 0 and d != 0 and s == 0:\n    print(d)\nelif b == 0 and d != 0 and s != 0:\n    print(min(d, s))\nelif b != 0 and d == 0 and s == 0:\n    print(b)\nelif b != 0 and d == 0 and s != 0:\n    print(min(b, s))\nelif b != 0 and d != 0 and s == 0:\n    print(min(b, d))\nelif b != 0 and d != 0 and s != 0:\n    print(min(math.ceil(b/2), math.ceil(d/2), math.ceil(s/2)))", "#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n\tlong long b,d,s;\n\tcin>>b>>d>>s;\n\tif(b+d+s==0)\n\t{\n\t\tcout<<0;\n\t\treturn 0;\n\t}\n\tif(b==0)\n\t{\n\t\tcout<<d+s;\n\t\treturn 0;\n\t}\n\tif(d==0)\n\t{\n\t\tcout<<b+s;\n\t\treturn 0;\n\t}\n\tif(s==0)\n\t{\n\t\tcout<<b+d;\n\t\treturn 0;\n\t}\n\tif(b==d)\n\t{\n\t\tcout<<s;\n\t\treturn 0;\n\t}\n\tif(b==s)\n\t{\n\t\tcout<<d;\n\t\treturn 0;\n\t}\n\tif(d==s)\n\t{\n\t\tcout<<b;\n\t\treturn 0;\n\t}\n\tcout<<min(b,min(d,s));\n\treturn 0;\n}\n```"], "rewards": [0.0, 0.0, 0.07142857142857142, 0.07142857142857142, 0.0, 0.11904761904761904, 0.0], "train rewards": [0.0, 0.0, 0.024390243902439025, 0.024390243902439025, 0.0, 0.07317073170731707, 0.0], "time": [22.012669801712036, 37.75127840042114, 58.11383032798767, 78.5179922580719, 98.96652936935425, 118.92324995994568, 136.40894865989685], "sample times": 7}