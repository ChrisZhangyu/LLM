{"codes": ["\nimport sys\n\nn = int(sys.stdin.readline().strip())\n\nnumbers = []\n\nfor i in range(n):\n    numbers.append(sys.stdin.readline().strip())\n\nfor i in range(n):\n    for j in range(len(numbers[i])):\n        if numbers[i][j] == 'a':\n            numbers[i] = numbers[i][:j] + '1' + numbers[i][j + 1:]\n        elif numbers[i][j] == 'b':\n            numbers[i] = numbers[i][:j] + '0' + numbers[i][j + 1:]\n        elif numbers[i][j] == 'c':\n            numbers[i] = numbers[i][:j] + '2' + numbers[i][j + 1:]\n        elif numbers[i][j] == 'd':\n            numbers[i] = numbers[i][:j] + '3' + numbers[i][j + 1:]\n        elif numbers[i][j] == 'e':\n            numbers[i] = numbers[i][:j] + '4' + numbers[i][j + 1:]\n        elif numbers[i][j] == 'f':\n            numbers[i] = numbers[i][:j] + '5' + numbers[i][j + 1:]\n        elif numbers[i][j] == 'g':\n            numbers[i] = numbers[i][:j] + '6' + numbers[i][j + 1:]\n        elif numbers[i][j] == 'h':\n            numbers[i] =", "import sys\n\nn = int(sys.stdin.readline().strip())\n\nnumbers = []\n\nfor i in range(n):\n    numbers.append(sys.stdin.readline().strip())\n\nfor i in range(n):\n    for j in range(len(numbers[i])):\n        if numbers[i][j] == 'a':\n            numbers[i] = numbers[i][:j] + '1' + numbers[i][j+1:]\n        elif numbers[i][j] == 'b':\n            numbers[i] = numbers[i][:j] + '0' + numbers[i][j+1:]\n        elif numbers[i][j] == 'c':\n            numbers[i] = numbers[i][:j] + '2' + numbers[i][j+1:]\n        elif numbers[i][j] == 'd':\n            numbers[i] = numbers[i][:j] + '3' + numbers[i][j+1:]\n        elif numbers[i][j] == 'e':\n            numbers[i] = numbers[i][:j] + '4' + numbers[i][j+1:]\n        elif numbers[i][j] == 'f':\n            numbers[i] = numbers[i][:j] + '5' + numbers[i][j+1:]\n        elif numbers[i][j] == 'g':\n            numbers[i] = numbers[i][:j] + '6' + numbers[i][j+1:]\n        elif numbers[i][j] == 'h':\n            numbers[i] = numbers[i][:j] +", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nint main()\n{\n    int n;\n    cin >> n;\n    vector<string> v;\n    for (int i = 0; i < n; i++)\n    {\n        string s;\n        cin >> s;\n        v.push_back(s);\n    }\n    int sum = 0;\n    for (int i = 0; i < n; i++)\n    {\n        string s = v[i];\n        for (int j = 0; j < s.size(); j++)\n        {\n            if (s[j] == 'a')\n            {\n                s[j] = '1';\n            }\n            else if (s[j] == 'b')\n            {\n                s[j] = '0';\n            }\n            else if (s[j] == 'c')\n            {\n                s[j] = '2';\n            }\n            else if (s[j] == 'd')\n            {\n                s[j] = '3';\n            }\n            else if (s[j] == 'e')\n            {\n                s[j] = '4';\n            }\n            else if (s[j] == 'f')\n            {\n                s[j] = '5';\n            }\n            else if (s[j] == 'g')\n            {\n                s[j] = '6';\n            }\n            else if (s[j] == 'h')\n            {\n                s[j] = '7';\n            }\n            else if (s[j", "\ndef read_input():\n    n = int(input())\n    petya_numbers = []\n    for i in range(n):\n        petya_numbers.append(input())\n    return petya_numbers\n\n\ndef restore_petya_numbers(petya_numbers):\n    restored_petya_numbers = []\n    for petya_number in petya_numbers:\n        restored_petya_number = ''\n        for digit in petya_number:\n            if digit == 'a':\n                restored_petya_number += '1'\n            elif digit == 'b':\n                restored_petya_number += '0'\n            elif digit == 'c':\n                restored_petya_number += '2'\n            elif digit == 'd':\n                restored_petya_number += '3'\n            elif digit == 'e':\n                restored_petya_number += '4'\n            elif digit == 'f':\n                restored_petya_number += '5'\n            elif digit == 'g':\n                restored_petya_number += '6'\n            elif digit == 'h':\n                restored_petya_number += '7'\n            elif digit == 'i':\n                restored_petya_number += '8'\n            elif digit == 'j':\n                restored_petya_number += '9'\n        restored_petya_numbers.append(int(restored_petya_number))\n    return restored_petya_numbers\n\n\ndef calculate_sum(restored_petya", "import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    numbers = []\n    for i in range(n):\n        numbers.append(sys.stdin.readline().strip())\n    numbers = [list(map(int, list(x))) for x in numbers]\n    numbers = [list(map(str, list(x))) for x in numbers]\n    for i in range(len(numbers)):\n        for j in range(len(numbers[i])):\n            if numbers[i][j] == '0':\n                numbers[i][j] = 'a'\n            elif numbers[i][j] == '1':\n                numbers[i][j] = 'b'\n            elif numbers[i][j] == '2':\n                numbers[i][j] = 'c'\n            elif numbers[i][j] == '3':\n                numbers[i][j] = 'd'\n            elif numbers[i][j] == '4':\n                numbers[i][j] = 'e'\n            elif numbers[i][j] == '5':\n                numbers[i][j] = 'f'\n            elif numbers[i][j] == '6':\n                numbers[i][j] = 'g'\n            elif numbers[i][j] == '7':\n                numbers[i][j] = 'h'\n            elif numbers[i][j] == '8':\n                numbers[i][j] = 'i'\n            elif numbers[i][j] == '9':\n                numbers[i][j] = 'j'\n    numbers = [''.join(x) for", "\ndef get_num(s):\n    num = 0\n    for i in range(len(s)):\n        num += (ord(s[i]) - ord('a') + 1) * 10 ** (len(s) - i - 1)\n    return num\n\n\nn = int(input())\nans = 0\nfor i in range(n):\n    s = input()\n    ans += get_num(s)\nprint(ans)", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n# https://www.luogu.org/problemnew/show/P4702\n\nimport sys\n\ndef get_min_sum(s):\n    s = s.replace('a', '1')\n    s = s.replace('b', '0')\n    s = s.replace('c', '2')\n    s = s.replace('d', '3')\n    s = s.replace('e', '4')\n    s = s.replace('f', '5')\n    s = s.replace('g', '6')\n    s = s.replace('h', '7')\n    s = s.replace('i', '8')\n    s = s.replace('j', '9')\n    return int(s)\n\nif __name__ == '__main__':\n    n = int(sys.stdin.readline().strip())\n    ans = 0\n    for i in range(n):\n        s = sys.stdin.readline().strip()\n        ans += get_min_sum(s)\n    print(ans)"], "rewards": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.11538461538461539, 0.0], "train rewards": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.038461538461538464, 0.0], "time": [21.34169316291809, 43.870572090148926, 66.13172030448914, 88.73272776603699, 111.02195048332214, 133.1691973209381, 146.61746668815613, 163.1557903289795], "sample times": 8}