{"codes": ["\nimport sys\n\nm, k = map(int, sys.stdin.readline().split())\nn = 1\nwhile True:\n    if bin(n).count(\"1\") == m and bin(n).count(\"0\") == k:\n        print(n)\n        break\n    n += 1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import sys\n\nm, k = map(int, sys.stdin.readline().split())\nn = 1\n\nwhile True:\n    if '1' * k in str(n + 1) and '1' * k in str(n + 2) and '1' * k in str(n + 3) and '1' * k in str(n + 4):\n        m -= 1\n        if m == 0:\n            break\n    n += 1\n\nprint(n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "def f(m, k):\n    if k == 0:\n        return 1\n    if k == 1:\n        return 2\n    if k == 2:\n        return 5\n    if k == 3:\n        return 9\n    if k == 4:\n        return 16\n    if k == 5:\n        return 25\n    if k == 6:\n        return 36\n    if k == 7:\n        return 49\n    if k == 8:\n        return 64\n    if k == 9:\n        return 81\n    if k == 10:\n        return 100\n    if k == 11:\n        return 121\n    if k == 12:\n        return 144\n    if k == 13:\n        return 169\n    if k == 14:\n        return 196\n    if k == 15:\n        return 225\n    if k == 16:\n        return 256\n    if k == 17:\n        return 289\n    if k == 18:\n        return 324\n    if k == 19:\n        return 361\n    if k == 20:\n        return 400\n    if k == 21:\n        return 441\n    if k == 22:\n        return 484\n    if k == 23:\n        return 529\n    if k == 24:\n        return 576\n    if k == 25:\n        return 625\n    if k == 26:\n        return 676\n    if k == 27:\n        return 729\n    if k == 28:\n        return 784\n    if k == 29:\n        return 841\n    if k == 30:\n        return 900\n    if k == 31:\n        return 961\n    if k == 32:\n        return 1024\n    if k == 33:\n        return 1089\n    if k == 34:\n        return 1156\n    if k == 35:\n        return 1225\n    if k == 36:\n        return 1296\n    if k == 37:\n        return 1369\n    if k == 38:\n        return 1444\n    if k == 39:\n        return 1521\n    if k == 40:\n        return 1600\n    if k == 41:\n        return 1681\n    if k == 42:\n        return 1764\n    if k == 43:\n        return 1849\n    if k == 44:\n        return 1936\n    if k == 45:\n        return 2025\n    if k == 46:\n        return 2116\n    if k == 47:\n        return ", "\ndef f(m, k):\n    if k == 0:\n        return 1\n    if k == 1:\n        return 2\n    if k == 2:\n        return 5\n    if k == 3:\n        return 9\n    if k == 4:\n        return 16\n    if k == 5:\n        return 25\n    if k == 6:\n        return 36\n    if k == 7:\n        return 49\n    if k == 8:\n        return 64\n    if k == 9:\n        return 81\n    if k == 10:\n        return 100\n    if k == 11:\n        return 121\n    if k == 12:\n        return 144\n    if k == 13:\n        return 169\n    if k == 14:\n        return 196\n    if k == 15:\n        return 225\n    if k == 16:\n        return 256\n    if k == 17:\n        return 289\n    if k == 18:\n        return 324\n    if k == 19:\n        return 361\n    if k == 20:\n        return 400\n    if k == 21:\n        return 441\n    if k == 22:\n        return 484\n    if k == 23:\n        return 529\n    if k == 24:\n        return 576\n    if k == 25:\n        return 625\n    if k == 26:\n        return 676\n    if k == 27:\n        return 729\n    if k == 28:\n        return 784\n    if k == 29:\n        return 841\n    if k == 30:\n        return 900\n    if k == 31:\n        return 961\n    if k == 32:\n        return 1024\n    if k == 33:\n        return 1089\n    if k == 34:\n        return 1156\n    if k == 35:\n        return 1225\n    if k == 36:\n        return 1296\n    if k == 37:\n        return 1369\n    if k == 38:\n        return 1444\n    if k == 39:\n        return 1521\n    if k == 40:\n        return 1600\n    if k == 41:\n        return 1681\n    if k == 42:\n        return 1764\n    if k == 43:\n        return 1849\n    if k == 44:\n        return 1936\n    if k == 45:\n        return 2025\n    if k == 46:\n        return 2116\n    if k == 47:\n        return", "import math\nimport sys\n\nm, k = map(int, sys.stdin.readline().split())\nn = int(math.pow(2, k))\n\nwhile True:\n    if bin(n).count('1') == m and bin(n).count('0') == k:\n        print(n)\n        break\n    else:\n        n += 1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "def find_n(m, k):\n    if m == 0:\n        return 1\n    if k == 1:\n        return 2\n    if k == 2:\n        return 4\n    if k == 3:\n        return 6\n    if k == 4:\n        return 10\n    if k == 5:\n        return 15\n    if k == 6:\n        return 21\n    if k == 7:\n        return 28\n    if k == 8:\n        return 36\n    if k == 9:\n        return 45\n    if k == 10:\n        return 55\n    if k == 11:\n        return 66\n    if k == 12:\n        return 78\n    if k == 13:\n        return 91\n    if k == 14:\n        return 105\n    if k == 15:\n        return 120\n    if k == 16:\n        return 136\n    if k == 17:\n        return 153\n    if k == 18:\n        return 171\n    if k == 19:\n        return 190\n    if k == 20:\n        return 210\n    if k == 21:\n        return 231\n    if k == 22:\n        return 253\n    if k == 23:\n        return 276\n    if k == 24:\n        return 300\n    if k == 25:\n        return 325\n    if k == 26:\n        return 351\n    if k == 27:\n        return 378\n    if k == 28:\n        return 406\n    if k == 29:\n        return 435\n    if k == 30:\n        return 465\n    if k == 31:\n        return 496\n    if k == 32:\n        return 528\n    if k == 33:\n        return 561\n    if k == 34:\n        return 595\n    if k == 35:\n        return 630\n    if k == 36:\n        return 666\n    if k == 37:\n        return 703\n    if k == 38:\n        return 741\n    if k == 39:\n        return 780\n    if k == 40:\n        return 820\n    if k == 41:\n        return 861\n    if k == 42:\n        return 903\n    if k == 43:\n        return 946\n    if k == 44:\n        return 990\n    if k == 45:\n        return 1035\n    if k == 46:\n        return 1081\n    if k == 47:\n        return 1128\n    if k == 48:\n        ", "\ndef find(m, k):\n    if k == 1:\n        return 2 ** (k - 1)\n    if k == 2:\n        return 3\n    if k == 3:\n        return 7\n    if k == 4:\n        return 15\n    if k == 5:\n        return 31\n    if k == 6:\n        return 63\n    if k == 7:\n        return 127\n    if k == 8:\n        return 255\n    if k == 9:\n        return 511\n    if k == 10:\n        return 1023\n    if k == 11:\n        return 2047\n    if k == 12:\n        return 4095\n    if k == 13:\n        return 8191\n    if k == 14:\n        return 16383\n    if k == 15:\n        return 32767\n    if k == 16:\n        return 65535\n    if k == 17:\n        return 131071\n    if k == 18:\n        return 262143\n    if k == 19:\n        return 524287\n    if k == 20:\n        return 1048575\n    if k == 21:\n        return 2097151\n    if k == 22:\n        return 4194303\n    if k == 23:\n        return 8388607\n    if k == 24:\n        return 16777215\n    if k == 25:\n        return 33554431\n    if k == 26:\n        return 67108863\n    if k == 27:\n        return 134217727\n    if k == 28:\n        return 268435455\n    if k == 29:\n        return 536870911\n    if k == 30:\n        return 1073741823\n    if k == 31:\n        return 2147483647\n    if k == 32:\n        return 4294967295\n    if k == 33:\n        return 8589934591\n    if k == 34:\n        return 17179869183\n    if k == 35:\n        return 34359738367\n    if k == 36:\n        return 68719476735\n    if k == 37:\n        return 137438953471\n    if k == 38:\n        return 274877906943\n    if k == 39:\n        return 5497558", "def get_binary(n):\n    return bin(n)[2:]\n\n\ndef get_count(n, k):\n    count = 0\n    for i in range(n + 1):\n        if get_binary(i).count(\"1\") == k:\n            count += 1\n    return count\n\n\nm, k = list(map(int, input().split()))\nprint(get_count(2 ** k - 1, k) - get_count(2 ** (k - 1) - 1, k) + m)\n\n\"\"\"\n\n\ndef get_binary(n):\n    return bin(n)[2:]\n\n\ndef get_count(n, k):\n    count = 0\n    for i in range(n + 1):\n        if get_binary(i).count(\"1\") == k:\n            count += 1\n    return count\n\n\nm, k = list(map(int, input().split()))\nprint(get_count(2 ** k - 1, k) - get_count(2 ** (k - 1) - 1, k) + m)\n\n\"\"\"\n\n\ndef get_binary(n):\n    return bin(n)[2:]\n\n\ndef get_count(n, k):\n    count = 0\n    for i in range(n + 1):\n        if get_binary(i).count(\"1\") == k:\n            count += 1\n    return count\n\n\nm, k = list(map(int, input().split()))\nprint(get_count(2 ** k - 1, k) - get_count(2 ** (k - 1) - 1, k) + m)", "\n\ndef main():\n    m, k = [int(x) for x in input().split()]\n    n = 1\n    while True:\n        if bin(n).count(\"1\") == m and bin(n).count(\"1\") >= k:\n            print(n)\n            break\n        n += 1\n\n\nif __name__ == \"__main__\":\n    main()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"], "rewards": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "train rewards": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "time": [39.625314712524414, 89.75116491317749, 139.5819971561432, 180.28368997573853, 220.79216408729553, 261.21977257728577, 311.44225549697876, 352.2832908630371, 374.4658863544464, 424.45189142227173], "sample times": 10}