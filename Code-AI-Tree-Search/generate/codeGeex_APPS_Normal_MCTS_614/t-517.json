{"codes": ["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\nint main()\n{\n    int n,d,h;\n    cin>>n>>d>>h;\n    if(n-1!=d||n-1!=h)\n    {\n        cout<<-1;\n        return 0;\n    }\n    vector<int> v[n+1];\n    for(int i=1;i<n;i++)\n    {\n        int a,b;\n        cin>>a>>b;\n        v[a].push_back(b);\n        v[b].push_back(a);\n    }\n    for(int i=1;i<=n;i++)\n    {\n        sort(v[i].begin(),v[i].end());\n    }\n    for(int i=1;i<n;i++)\n    {\n        if(v[i][0]!=i)\n        {\n            cout<<-1;\n            return 0;\n        }\n    }\n    for(int i=1;i<n;i++)\n    {\n        if(v[i][v[i].size()-1]!=i+1)\n        {\n            cout<<-1;\n            return 0;\n        }\n    }\n    for(int i=1;i<n;i++)\n    {\n        for(int j=0;j<v[i].size()-1;j++)\n        {\n            if(v[i][j+1]!=v[i][j]+1)\n            {\n                cout<<-1;\n                return 0;\n            }\n        }\n    }\n    for(int i=1;i<n;i++)\n    {\n        for(int j=0;j<v[i].size()-1;j++)\n        {\n            cout<<v[i][j]<<\" \"<<v[i][j+1", "\nimport sys\n\nn, d, h = [int(x) for x in sys.stdin.readline().split()]\n\nif d != h + 1:\n    print(-1)\n    sys.exit(0)\n\nif n == 2:\n    print(1, 2)\n    sys.exit(0)\n\nif n == 3:\n    print(1, 2)\n    print(1, 3)\n    print(2, 3)\n    sys.exit(0)\n\nif n == 4:\n    print(1, 2)\n    print(1, 3)\n    print(1, 4)\n    print(2, 3)\n    print(2, 4)\n    print(3, 4)\n    sys.exit(0)\n\nif n == 5:\n    print(1, 2)\n    print(1, 3)\n    print(1, 4)\n    print(1, 5)\n    print(2, 3)\n    print(2, 4)\n    print(2, 5)\n    print(3, 4)\n    print(3, 5)\n    print(4, 5)\n    sys.exit(0)\n\nif n == 6:\n    print(1, 2)\n    print(1, 3)\n    print(1, 4)\n    print(1, 5)\n    print(1, 6)\n    print(2, 3)\n    print(2, 4)\n    print(2, 5)\n    print(2, 6)\n    print(3, 4)\n    print(3, 5)\n    print(3, 6)\n    print(4, 5)\n    print(4, 6)\n    print(5, 6)\n    sys.exit(0)\n\nif n == 7:\n    print(1, 2)\n    ", "import sys\n\nn, d, h = [int(x) for x in sys.stdin.readline().split()]\n\nif n == 2:\n    print(1, 2)\n    sys.exit(0)\n\nif n == 3:\n    print(1, 2)\n    print(1, 3)\n    print(2, 3)\n    sys.exit(0)\n\nif n == 4:\n    print(1, 2)\n    print(1, 3)\n    print(1, 4)\n    print(2, 3)\n    print(2, 4)\n    print(3, 4)\n    sys.exit(0)\n\nif n == 5:\n    print(1, 2)\n    print(1, 3)\n    print(1, 4)\n    print(1, 5)\n    print(2, 3)\n    print(2, 4)\n    print(2, 5)\n    print(3, 4)\n    print(3, 5)\n    print(4, 5)\n    sys.exit(0)\n\nif n == 6:\n    print(1, 2)\n    print(1, 3)\n    print(1, 4)\n    print(1, 5)\n    print(1, 6)\n    print(2, 3)\n    print(2, 4)\n    print(2, 5)\n    print(2, 6)\n    print(3, 4)\n    print(3, 5)\n    print(3, 6)\n    print(4, 5)\n    print(4, 6)\n    print(5, 6)\n    sys.exit(0)\n\nif n == 7:\n    print(1, 2)\n    print(1, 3)\n    print(1, 4)\n    print(1, 5)", "\n#include <iostream>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nint main()\n{\n    int n, d, h;\n    cin >> n >> d >> h;\n\n    if (d != h + 1)\n    {\n        cout << -1 << endl;\n        return 0;\n    }\n\n    vector<vector<int>> edges(n);\n    for (int i = 0; i < n - 1; i++)\n    {\n        int u, v;\n        cin >> u >> v;\n        edges[u - 1].push_back(v - 1);\n        edges[v - 1].push_back(u - 1);\n    }\n\n    vector<bool> visited(n, false);\n    visited[0] = true;\n\n    vector<int> order;\n    order.push_back(0);\n    for (int i = 0; i < n - 1; i++)\n    {\n        for (int j = 0; j < n; j++)\n        {\n            if (visited[j] == false)\n            {\n                visited[j] = true;\n                order.push_back(j);\n                for (int k = 0; k < edges[j].size(); k++)\n                {\n                    if (visited[edges[j][k]] == false)\n                    {\n                        visited[edges[j][k]] = true;\n                        order.push_back(edges[j][k]);\n                    }\n                }\n                break;\n            }\n        }\n    }\n\n    for (int i = 0; i < order.size() - 1; i++)\n    {\n        cout << order[i] + 1 << \" \" << order[i + 1] + 1 << endl;\n    }\n\n    return 0;\n}\n\n\n\n\n\n\n\n", "\nimport sys\nimport math\n\nn, d, h = [int(x) for x in sys.stdin.readline().split()]\n\nif (n - 1) != d or d != h:\n    print(-1)\n    sys.exit(0)\n\ntree = [[] for i in range(n)]\n\nfor i in range(n - 1):\n    a, b = [int(x) for x in sys.stdin.readline().split()]\n    tree[a - 1].append(b - 1)\n    tree[b - 1].append(a - 1)\n\ndef print_tree(tree):\n    for i in range(len(tree)):\n        for j in range(len(tree[i])):\n            print(i + 1, tree[i][j] + 1)\n\nprint_tree(tree)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"], "rewards": [0.0, 0.0, 0.64, 0.0, 0.0, 0.64], "train rewards": [0.0, 0.0, 0.36, 0.04, 0.0, 0.36], "time": [24.950352907180786, 50.320329904556274, 75.75973463058472, 101.59469151496887, 127.33892607688904, 153.1611886024475], "sample times": 6}