{"codes": ["\nclass Solution:\n    def maxCandies(self, n, a, b, p, q):\n        \"\"\"\n        :type n: int\n        :type a: int\n        :type b: int\n        :type p: int\n        :type q: int\n        :rtype: int\n        \"\"\"\n        return (n // a + n // b) * min(p, q)\n\n\"\"\"\n\n\nclass Solution:\n    def maxCandies(self, n, a, b, p, q):\n        \"\"\"\n        :type n: int\n        :type a: int\n        :type b: int\n        :type p: int\n        :type q: int\n        :rtype: int\n        \"\"\"\n        return (n // a + n // b) * min(p, q)\n\n\"\"\"\n\n\nclass Solution:\n    def maxCandies(self, n, a, b, p, q):\n        \"\"\"\n        :type n: int\n        :type a: int\n        :type b: int\n        :type p: int\n        :type q: int\n        :rtype: int\n        \"\"\"\n        return (n // a + n // b) * min(p, q)\n\n\"\"\"\n\n\nclass Solution:\n    def maxCandies(self, n, a, b, p, q):\n        \"\"\"\n        :type n: int\n        :type a: int\n        :type b: int\n        :type p: int\n        :type q: int\n        :rtype: int\n        \"\"\"\n        return (n // a + n // b) * min(p, q)", "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int a = sc.nextInt();\n        int b = sc.nextInt();\n        int p = sc.nextInt();\n        int q = sc.nextInt();\n        long res = 0;\n        for (int i = 1; i <= n; i++) {\n            if (i % a == 0) {\n                res += p;\n            }\n            if (i % b == 0) {\n                res += q;\n            }\n        }\n        System.out.println(res);\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\"\"\"", "class Solution:\n    def maxCandies(self, n, a, b, p, q):\n        \"\"\"\n        :type n: int\n        :type a: int\n        :type b: int\n        :type p: int\n        :type q: int\n        :rtype: int\n        \"\"\"\n        red = [i for i in range(1, n + 1) if i % a == 0]\n        blue = [i for i in range(1, n + 1) if i % b == 0]\n        return sum(p * len(red) + q * len(blue))\n\n\nclass Solution:\n    def maxCandies(self, n, a, b, p, q):\n        \"\"\"\n        :type n: int\n        :type a: int\n        :type b: int\n        :type p: int\n        :type q: int\n        :rtype: int\n        \"\"\"\n        red = [i for i in range(1, n + 1) if i % a == 0]\n        blue = [i for i in range(1, n + 1) if i % b == 0]\n        return sum(p * len(red) + q * len(blue))\n\n\nclass Solution:\n    def maxCandies(self, n, a, b, p, q):\n        \"\"\"\n        :type n: int\n        :type a: int\n        :type b: int\n        :type p: int\n        :type q: int\n        :rtype: int\n        \"\"\"\n        red = [i for i in range(1, n + 1) if i % a == 0]\n        blue = [i for i in range(1, n + 1) if i % b == 0]\n        return sum(p * len(red) + q * len(blue))\n\n\nclass Solution:\n    def maxCandies(self, n, a, b, p, q):\n        \"\"\"\n        :type n: int\n        :type a: int\n        :type b: int\n        :type p: int\n        :type q: int\n        :rtype: int\n        \"\"\"\n        red = [i for i in range(1, n + 1) if i % a == 0]\n        blue = [i for i in range(1, n + 1) if i % b == 0]\n        return sum(p * len(red) + q * len(blue))", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\nimport sys\n\nn, a, b, p, q = map(int, sys.stdin.readline().split())\nans = 0\n\nfor i in range(1, n + 1):\n    if i % a == 0:\n        ans += p\n    elif i % b == 0:\n        ans += q\n\nprint(ans)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\"\"\"", "import sys\n\nn, a, b, p, q = map(int, sys.stdin.readline().split())\nans = 0\nfor i in range(1, n + 1):\n    if i % a == 0 and i % b == 0:\n        ans += p\n    elif i % a == 0:\n        ans += q\n    elif i % b == 0:\n        ans += p\nprint(ans)\n\"\"\"\n\n\nclass Solution:\n    def solve(self, n, a, b, p, q):\n        ans = 0\n        for i in range(1, n + 1):\n            if i % a == 0 and i % b == 0:\n                ans += p\n            elif i % a == 0:\n                ans += q\n            elif i % b == 0:\n                ans += p\n        return ans", "import math\nimport os\nimport random\nimport re\nimport sys\n\n\n\nif __name__ == '__main__':\n    n, a, b, p, q = map(int, input().split())\n    r = 0\n    b = 0\n    for i in range(1, n + 1):\n        if i % a == 0:\n            r += p\n        if i % b == 0:\n            b += q\n    print(r + b)\n\n\n\n\n\n\n\n\n\n```", "class Solution {\npublic:\n    long long maxCandies(int n, int a, int b, int p, int q) {\n        long long red=0,blue=0;\n        for(int i=1;i<=n;i++){\n            if(i%a==0)red++;\n            if(i%b==0)blue++;\n        }\n        return (long long)red*p+(long long)blue*q;\n    }\n};\n```", "\nclass Solution {\npublic:\n    long long getMaximumChocolates(int n, int a, int b, int p, int q) {\n        vector<long long> red(n+1,0);\n        vector<long long> blue(n+1,0);\n        for(int i=1;i<=n;i++){\n            if(i%a==0){\n                red[i]=p;\n            }\n            if(i%b==0){\n                blue[i]=q;\n            }\n        }\n        long long ans=0;\n        for(int i=1;i<=n;i++){\n            ans+=max(red[i],blue[i]);\n        }\n        return ans;\n    }\n};\n```"], "rewards": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "train rewards": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "time": [20.35246229171753, 34.761035680770874, 65.55177545547485, 101.10515356063843, 135.43659496307373, 149.40056848526, 158.4526584148407, 166.33242440223694, 177.81899428367615], "sample times": 9}