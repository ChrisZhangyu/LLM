{"codes": ["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    s = sys.stdin.readline().strip()\n\n    max_word_outside = 0\n    num_words_inside = 0\n\n    for i in range(n):\n        if s[i] == '(':\n            j = i + 1\n            while s[j] != ')':\n                j += 1\n            max_word_outside = max(max_word_outside, j - i - 1)\n        elif s[i] == '_':\n            j = i + 1\n            while s[j] != '_':\n                j += 1\n            max_word_outside = max(max_word_outside, j - i - 1)\n\n    for i in range(n):\n        if s[i] == '(':\n            j = i + 1\n            while s[j] != ')':\n                j += 1\n            num_words_inside += 1\n        elif s[i] == '_':\n            j = i + 1\n            while s[j] != '_':\n                j += 1\n            num_words_inside +=", "def checkio(data):\n    data = data.replace('_', ' ')\n    data = data.replace('(', ' ( ')\n    data = data.replace(')', ' ) ')\n    data = data.split(' ')\n    data = [x for x in data if x != '']\n    data = [x for x in data if x != '(']\n    data = [x for x in data if x != ')']\n    data = [x for x in data if x != ',']\n    data = [x for x in data if x != '.']\n    data = [x for x in data if x != ';']\n    data = [x for x in data if x != ':']\n    data = [x for x in data if x != '!']\n    data = [x for x in data if x != '?']\n    data = [x for x in data if x != \"'\"]\n    data = [x for x in data if x != '\"']\n    data = [x for x in data if x != '-']\n    data = [x for x in data if x != '1']\n    data = [x for x in data if x != '2']\n    data = [x for x in data if x != '3']", "\ndef main():\n    n = int(raw_input())\n    s = raw_input().strip()\n    max_len = 0\n    count = 0\n    for i in range(n):\n        if s[i] == '(':\n            count += 1\n        elif s[i] == ')':\n            count -= 1\n        elif s[i] == '_' and count == 0:\n            max_len = max(max_len, i - j)\n            j = i + 1\n    max_len = max(max_len, n - j)\n    print max_len, count\n\nif __name__ == '__main__':\n    main()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import re\ns = raw_input()\np = re.compile(r'[a-zA-Z0-9_]*\\([a-zA-Z0-9_]*\\)[a-zA-Z0-9_]*|[a-zA-Z0-9_]*\\([a-zA-Z0-9_]*\\)[a-zA-Z0-9_]*|[a-zA-Z0-9_]*\\([a-zA-Z0-9_]*\\)[a-zA-Z0-9_]*|[a-zA-Z0-9_]*\\([a-zA-Z0-9_]*\\)[a-zA-Z0-9_]*|[a-zA-Z0-9_]*\\([a-zA-Z0-9_]*\\)[a-zA-Z0-9_]*|[a-zA-Z0-9_]*\\([a-zA-Z0-9_]*\\)[a-zA-Z0-9_]*|[a-zA-Z0-9_]*\\([a-zA-Z0-", "\nimport re\n\nn = int(input())\ns = input()\n\n\ndef is_word(s):\n    return s[0] == '_' and s[-1] == '_'\n\n\ndef get_word_length(s):\n    return len(s) - 2\n\n\ndef get_word_count(s):\n    return s.count('(') - s.count(')')\n\n\ndef get_longest_word(s):\n    return max(filter(is_word, s.split('_')), key=get_word_length)\n\n\ndef get_inside_word_count(s):\n    return sum(map(get_word_count, re.findall(r'\\((.*?)\\)', s)))\n\n\nprint(get_longest_word(s))\nprint(get_inside_word_count(s))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "def get_max_word_length(string):\n    max_word_length = 0\n    words_inside_parentheses = 0\n    words_outside_parentheses = 0\n    \n    for i in range(len(string)):\n        if string[i] == '(':\n            words_inside_parentheses += 1\n        elif string[i] == ')':\n            words_inside_parentheses -= 1\n        elif string[i] == '_':\n            if words_inside_parentheses == 0:\n                words_outside_parentheses += 1\n        else:\n            if words_inside_parentheses == 0:\n                if len(string[i:]) > max_word_length:\n                    max_word_length = len(string[i:])\n    \n    return max_word_length, words_inside_parentheses, words_outside_parentheses\n\nstring = input()\nmax_word_length, words_inside_parentheses, words_outside_parentheses = get_max_word_length(string)\nprint(max_word_length, words_inside_parentheses, words_outside_parentheses", "\ndef get_max_word_length(s):\n    max_word_length = 0\n    words_inside_parentheses = 0\n    words_outside_parentheses = 0\n    \n    for i in range(len(s)):\n        if s[i] == '(':\n            words_inside_parentheses += 1\n        elif s[i] == ')':\n            words_inside_parentheses -= 1\n        elif s[i] == '_':\n            if words_inside_parentheses == 0:\n                words_outside_parentheses += 1\n                max_word_length = max(max_word_length, len(s[i-1:i]))\n    return max_word_length, words_inside_parentheses, words_outside_parentheses\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\n\ndef main():\n    n = int(input())\n    s = input()\n    l = 0\n    c = 0\n    for i in range(n):\n        if s[i] == '(':\n            c += 1\n        elif s[i] == ')':\n            c -= 1\n        elif s[i] == '_':\n            if c == 0:\n                if l < len(s[i + 1:i + l + 1]):\n                    l = len(s[i + 1:i + l + 1])\n        else:\n            if c == 0:\n                if l < len(s[i:i + l + 1]):\n                    l = len(s[i:i + l + 1])\n    print(l, c)\n\n\nif __name__ == '__main__':\n    main()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "def count_words(s):\n    \"\"\"\n    >>> count_words(\"_Hello_Vasya(and_Petya)__bye_(and_OK)\")\n    (5, 4)\n    >>> count_words(\"_a_(_b___c)__de_f(g_)__h__i(j_k_l)m__\")\n    (2, 6)\n    >>> count_words(\"(LoooonG)__shOrt__(LoooonG)\")\n    (5, 2)\n    >>> count_words(\"(___)\")\n    (0, 0)\n    \"\"\"\n    words_outside = 0\n    words_inside = 0\n    word = \"\"\n    for c in s:\n        if c == \"_\":\n            if word:\n                words_outside = max(words_outside, len(word))\n                word = \"\"\n        elif c == \"(\":\n            if word:\n                words_outside = max(words_outside, len(word))\n                word = \"\"\n            words_inside += 1\n        elif c == \")\":\n            if word:\n                words_outside = max(words_outside, len(word))\n                word = \"\"\n            words"], "rewards": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "train rewards": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "time": [18.88479971885681, 36.052435636520386, 53.215365409851074, 70.46526098251343, 87.8111925125122, 104.9372169971466, 122.228342294693, 139.50711631774902, 156.44065356254578, 173.40874433517456], "sample times": 10}