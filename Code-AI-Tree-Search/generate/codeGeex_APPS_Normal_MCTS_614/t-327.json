{"codes": ["\nclass Solution(object):\n    def maxCandies(self, n, k, candies):\n        \"\"\"\n        :type n: int\n        :type k: int\n        :type candies: List[int]\n        :rtype: int\n        \"\"\"", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import sys\n\nn, k = map(int, sys.stdin.readline().split())\ncandies = list(map(int, sys.stdin.readline().split()))\ncandies = sorted(candies, reverse=True)\nprint(candies[0] ^ candies[1] ^ candies[2] ^ candies[3] ^ candies[4] ^ candies[5])", "class Solution(object):\n    def maxCandies(self, n, k, candies):\n        \"\"\"\n        :type n: int\n        :type k: int\n        :type candies: List[int]\n        :rtype: int\n        \"\"\"", "\nimport math\nimport os\nimport random\nimport re\nimport sys\n\ndef maxXorSum(n, k):\n    return n^(n-k)\n\nif __name__ == '__main__':\n    fptr = open(os.environ['OUTPUT_PATH'], 'w')\n\n    nk = input().split()\n\n    n = int(nk[0])\n\n    k = int(nk[1])\n\n    result = maxXorSum(n, k)\n\n    fptr.write(str(result) + '\\n')\n\n    fptr.close()", "\ndef maxXorSum(n, k):\n    if k == 0:\n        return 0\n    elif k == 1:\n        return n\n    elif k == 2:\n        return n - 1\n    elif k == 3:\n        return n - 2\n    elif k == 4:\n        return n - 3\n    elif k == 5:\n        return n - 4\n    elif k == 6:\n        return n - 5\n    elif k == 7:\n        return n - 6\n    elif k == 8:\n        return n - 7\n    elif k == 9:\n        return n - 8\n    elif k == 10:\n        return n - 9\n    elif k == 11:\n        return n - 10\n    elif k == 12:\n        return n - 11\n    elif k == 13:\n        return n - 12\n    elif k == 14:\n        return n - 13\n    elif k == 15:\n        return n - 14\n    elif k == 16:\n        return n - 15\n    elif k == 17:\n        return n - 16\n    elif k == 18:\n        return n - 17\n    elif k == 19:\n        return n - 18\n    elif k == 20:\n        return n - 19\n    elif k == 21:\n        return n - 20\n    elif k == 22:\n        return n - 21\n    elif k == 23:\n        return n - 22\n    elif k == 24:\n        return n - 23\n    elif k == 25:\n        return n - 24\n    elif k == 26:\n        return n - 25\n    elif k == 27:\n        return n - 26\n    elif k == 28:\n        return n - 27\n    elif k == 29:\n        return n - 28\n    elif k == 30:\n        return n - 29", "\nimport sys\n\nn, k = [int(x) for x in sys.stdin.readline().split()]\ncandies = [int(x) for x in sys.stdin.readline().split()]\ncandies.sort(reverse=True)\nprint(candies[0] ^ candies[1] ^ candies[2] ^ candies[3] ^ candies[4] ^ candies[5])", "class Solution:\n    def maxCandies(self, n, k):\n        \"\"\"\n        :type n: int\n        :type k: int\n        :rtype: int\n        \"\"\"\n        candies = [i for i in range(1, n + 1)]\n        xor_sum = 0\n        for i in range(0, len(candies), k):\n            xor_sum = xor_sum ^ sum(candies[i:i + k])\n        return xor_sum"], "rewards": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "train rewards": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "time": [10.1646089553833, 40.413371324539185, 47.160868406295776, 57.37255072593689, 68.85944509506226, 97.10758805274963, 104.75850534439087, 113.17273020744324], "sample times": 8}