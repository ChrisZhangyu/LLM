{"codes": ["\nimport sys\n\nn = int(sys.stdin.readline().strip())\ns = sys.stdin.readline().strip()\nx, y = map(int, sys.stdin.readline().strip().split(' '))\n\ndef check(s, x, y):\n    for i in range(len(s)):\n        if s[i] == 'U':\n            y += 1\n        elif s[i] == 'D':\n            y -= 1\n        elif s[i] == 'L':\n            x -= 1\n        elif s[i] == 'R':\n            x += 1\n        if x == x and y == y:\n            return True\n    return False\n\nif check(s, x, y):\n    print(0)\nelse:\n    print(-1)", "import sys\n\nn = int(sys.stdin.readline().strip())\ns = sys.stdin.readline().strip()\nx, y = map(int, sys.stdin.readline().strip().split(' '))\n\ndef check(s):\n    x, y = 0, 0\n    for i in s:\n        if i == 'U':\n            y += 1\n        elif i == 'D':\n            y -= 1\n        elif i == 'L':\n            x -= 1\n        elif i == 'R':\n            x += 1\n    if x == 0 and y == 0:\n        return True\n    else:\n        return False\n\nif check(s):\n    print(0)\nelse:\n    for i in range(n):\n        if s[i] == 'U':\n            s = s[:i] + 'D' + s[i + 1:]\n        elif s[i] == 'D':\n            s = s[:i] + 'U' + s[i + 1:]\n", "def main():\n    n = int(input())\n    s = input()\n    x, y = map(int, input().split())\n    if x == 0 and y == 0:\n        print(0)\n    else:\n        for i in range(n):\n            if s[i] == 'U':\n                y += 1\n            elif s[i] == 'D':\n                y -= 1\n            elif s[i] == 'L':\n                x -= 1\n            elif s[i] == 'R':\n                x += 1\n            if x == 0 and y == 0:\n                print(i + 1)\n                break\n        else:\n            print(-1)\n\n\nif __name__ == '__main__':\n    main()", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\ndef main():\n    n = int(input())\n    s = input()\n    x, y = map(int, input().split())\n\n    if x == 0 and y == 0:\n        print(0)\n        return\n\n    for i in range(n):\n        if s[i] == 'U':\n            y += 1\n        elif s[i] == 'D':\n            y -= 1\n        elif s[i] == 'L':\n            x -= 1\n        elif s[i] == 'R':\n            x += 1\n\n        if x == 0 and y == 0:\n            print(i + 1)\n            return\n\n    print(-1)\n\n\nif __name__ == '__main__':\n    main()", "def get_min_changed_subsegment_length(sequence, x, y):\n    if x == 0 and y == 0:\n        return 0\n    if x < 0 or y < 0:\n        return -1\n    if x == 0:\n        return -1\n    if y == 0:\n        return -1\n    if len(sequence) == 0:\n        return -1\n    if len(sequence) == 1:\n        if sequence[0] == 'U':\n            if y == 1:\n                return 1\n            else:\n                return -1\n        elif sequence[0] == 'D':\n            if y == -1:\n                return 1\n            else:\n                return -1\n        elif sequence[0] == 'L':\n            if x == -1:\n                return 1\n            else:\n                return -1\n        elif sequence[0] == 'R':\n            if x == 1:\n                return 1\n            else:\n                return -1\n        else:\n            ", "\ndef get_min_changed_subsegment_length(sequence, x, y):\n    if x == 0 and y == 0:\n        return 0\n    if x < 0 or y < 0:\n        return -1\n    if x == 0:\n        return -1\n    if y == 0:\n        return -1\n    if len(sequence) == 0:\n        return -1\n    if len(sequence) == 1:\n        if sequence[0] == 'U':\n            if y == 1:\n                return 1\n            else:\n                return -1\n        elif sequence[0] == 'D':\n            if y == -1:\n                return 1\n            else:\n                return -1\n        elif sequence[0] == 'L':\n            if x == -1:\n                return 1\n            else:\n                return -1\n        elif sequence[0] == 'R':\n            if x == 1:\n                return 1\n            else:\n                return -1\n        else:\n"], "rewards": [0.03508771929824561, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "train rewards": [0.07142857142857142, 0.017857142857142856, 0.0, 0.0, 0.0, 0.0, 0.0], "time": [17.226667642593384, 32.696702003479004, 48.19967770576477, 63.60901641845703, 78.84097862243652, 94.01955270767212, 109.36934638023376], "sample times": 7}