{"codes": ["\nimport sys\n\nx, y, l, r = [int(i) for i in sys.stdin.readline().split()]\n\nans = 0\n\nwhile l <= r:\n    n = l\n    a = 0\n    b = 0\n    while n != 0:\n        if n % x == 0:\n            a += 1\n            n = n / x\n        else:\n            n = n - y\n            b += 1\n            n = n / y\n    if a == 0 or b == 0:\n        l += 1\n        continue\n    if a == b:\n        ans = max(ans, a)\n        l += 1\n    else:\n        l += 1\n        r += 1\n\nprint ans\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import sys\n\nx, y, l, r = [int(i) for i in sys.stdin.readline().split()]\n\n\ndef is_unlucky(x, y, n):\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n % x == 0:\n        return is_unlucky(x, y, n // x)\n    if n % y == 0:\n        return is_unlucky(x, y, n // y)\n    return False\n\n\ndef get_unlucky_years(x, y, l, r):\n    unlucky_years = []\n    for i in range(l, r + 1):\n        if is_unlucky(x, y, i):\n            unlucky_years.append(i)\n    return unlucky_years\n\n\nunlucky_years = get_unlucky_years(x, y, l, r)\nif len(unlucky_years) == 0:\n    print(0)\nelse:\n    max_len = 0\n    for i in range(len(unlucky_years)):\n        for j in range(i + 1, len(unlucky_years)):\n            if unlucky_years[j] - unlucky_years[i] - 1 > max_len:\n                max_len = unlucky_years[j] - unlucky_years[i] - 1\n    print(max_len)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "#include <iostream>\n#include <cmath>\nusing namespace std;\nint main()\n{\n    long long x, y, l, r;\n    cin >> x >> y >> l >> r;\n    long long ans = 0;\n    for (long long i = l; i <= r; i++)\n    {\n        long long a = i;\n        long long b = 0;\n        while (a != 0)\n        {\n            b++;\n            a = a / x;\n        }\n        long long c = i;\n        long long d = 0;\n        while (c != 0)\n        {\n            d++;\n            c = c / y;\n        }\n        if (b == d)\n        {\n            ans = max(ans, b);\n        }\n    }\n    cout << ans;\n    return 0;\n}\n\"\"\"", "import math\n\nx, y, l, r = [int(i) for i in input().split()]\n\ndef is_unlucky(x, y, n):\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 2:\n        return False\n    if n == 3:\n        return False\n    if n == 4:\n        return False\n    if n == 5:\n        return False\n    if n == 6:\n        return False\n    if n == 7:\n        return False\n    if n == 8:\n        return False\n    if n == 9:\n        return False\n    if n == 10:\n        return False\n    if n == 11:\n        return False\n    if n == 12:\n        return False\n    if n == 13:\n        return False\n    if n == 14:\n        return False\n    if n == 15:\n        return False\n    if n == 16:\n        return False\n    if n == 17:\n        return False\n    if n == 18:\n        return False\n    if n == 19:\n        return False\n    if n == 20:\n        return False\n    if n == 21:\n        return False\n    if n == 22:\n        return False\n    if n == 23:\n        return False\n    if n == 24:\n        return False\n    if n == 25:\n        return False\n    if n == 26:\n        return False\n    if n == 27:\n        return False\n    if n == 28:\n        return False\n    if n == 29:\n        return False\n    if n == 30:\n        return False\n    if n == 31:\n        return False\n    if n == 32:\n        return False\n    if n == 33:\n        return False\n    if n == 34:\n        return False\n    if n == 35:\n        return False\n    if n == 36:\n        return False\n    if n == 37:\n        return False\n    if n == 38:\n        return False\n    if n == 39", "\n#!/usr/bin/env python3\n\nimport sys\n\nx, y, l, r = map(int, sys.stdin.readline().split())\n\n\ndef is_unlucky(n):\n    if n % x == 0 or n % y == 0:\n        return True\n    else:\n        return False\n\n\ndef get_unlucky_years(l, r):\n    unlucky_years = []\n    for i in range(l, r + 1):\n        if is_unlucky(i):\n            unlucky_years.append(i)\n    return unlucky_years\n\n\nunlucky_years = get_unlucky_years(l, r)\n\nif len(unlucky_years) == 0:\n    print(0)\nelif len(unlucky_years) == r - l + 1:\n    print(r - l + 1)\nelse:\n    max_len = 0\n    for i in range(len(unlucky_years) - 1):\n        if unlucky_years[i + 1] - unlucky_years[i] - 1 > max_len:\n            max_len = unlucky_years[i + 1] - unlucky_years[i] - 1\n    print(max_len)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\nimport math\n\nx = int(input())\ny = int(input())\nl = int(input())\nr = int(input())\n\nans = 0\n\nfor i in range(l, r + 1):\n    if math.log(i, x) % 1 == 0 and math.log(i, y) % 1 == 0:\n        ans += 1\n    else:\n        ans = 0\n\n    if ans > 0:\n        print(ans)", "#!/usr/bin/env python3\n\nimport sys\n\nx, y, l, r = map(int, sys.stdin.readline().split())\n\n\ndef is_unlucky(n):\n    if n % x == 0 or n % y == 0:\n        return True\n    else:\n        return False\n\n\ndef get_unlucky_years(l, r):\n    unlucky_years = []\n    for i in range(l, r + 1):\n        if is_unlucky(i):\n            unlucky_years.append(i)\n    return unlucky_years\n\n\nunlucky_years = get_unlucky_years(l, r)\nif len(unlucky_years) == 0:\n    print(0)\nelse:\n    max_len = 0\n    for i in range(len(unlucky_years)):\n        for j in range(i + 1, len(unlucky_years)):\n            if unlucky_years[j] - unlucky_years[i] - 1 > max_len:\n                max_len = unlucky_years[j] - unlucky_years[i] - 1\n    print(max_len)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"], "rewards": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "train rewards": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "time": [30.162433624267578, 61.806440353393555, 102.17513942718506, 116.25112962722778, 147.5610945224762, 179.1401777267456, 197.32866311073303, 228.94559717178345], "sample times": 8}