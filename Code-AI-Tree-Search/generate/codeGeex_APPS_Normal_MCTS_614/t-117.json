{"codes": ["\nimport sys\n\nn, m = map(int, sys.stdin.readline().split())\na = []\nb = []\nc = []\nd = []\ne = []\nf = []\nfor i in range(n):\n    a.append(int(sys.stdin.readline().split()[0]))\n    b.append(int(sys.stdin.readline().split()[0]))\n    c.append(int(sys.stdin.readline().split()[0]))\nfor i in range(m):\n    d.append(int(sys.stdin.readline().split()[0]))\n    e.append(int(sys.stdin.readline().split()[0]))\n    f.append(int(sys.stdin.readline().split()[0]))\n\ndef check(x, y):\n    for i in range(n):\n        if x >= a[i] and x <= b[i] and y >= c[i] and y <= c[i] + 1:\n            return True\n    for i in range(m):\n        if x >= d[i] and x <= d[i] + 1 and y >= e[i] and y <= e[i] + 1:\n            return True\n    return False\n\nans = 0\nfor i in range(-1000000000, 1000000000):\n    for j in range(-1000000000, 1000000000):\n        if check(i, j):\n            ans += 1\nprint(ans)", "import sys\n\nn, m = map(int, sys.stdin.readline().split())\na = []\nb = []\nc = []\nd = []\ne = []\nf = []\nfor i in range(n):\n    a.append(int(sys.stdin.readline().split()[0]))\n    b.append(int(sys.stdin.readline().split()[0]))\n    c.append(int(sys.stdin.readline().split()[0]))\nfor i in range(m):\n    d.append(int(sys.stdin.readline().split()[0]))\n    e.append(int(sys.stdin.readline().split()[0]))\n    f.append(int(sys.stdin.readline().split()[0]))\n\n\ndef check(x, y):\n    for i in range(n):\n        if x >= a[i] and x <= b[i] and y >= c[i] and y <= c[i] + 1:\n            return True\n    for i in range(m):\n        if x >= d[i] and x <= d[i] + 1 and y >= e[i] and y <= f[i]:\n            return True\n    return False\n\n\narea = 0\nfor i in range(-10 ** 9, 10 ** 9 + 1):\n    for j in range(-10 ** 9, 10 ** 9 + 1):\n        if check(i, j):\n            area += 1\nprint(\"INF\" if area == 0 else area)", "#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n    int n,m;\n    cin>>n>>m;\n    long long ans=0;\n    for(int i=1;i<=n;i++)\n    {\n        int a,b,c;\n        cin>>a>>b>>c;\n        for(int j=1;j<=m;j++)\n        {\n            int d,e,f;\n            cin>>d>>e>>f;\n            if(a==d&&b==e&&c==f)\n            {\n                cout<<\"INF\"<<endl;\n                return 0;\n            }\n            if(a==d&&b==e)\n            {\n                if(c<f)\n                {\n                    ans+=f-c;\n                }\n                else\n                {\n                    ans+=c-f;\n                }\n            }\n            else if(a==d)\n            {\n                if(b<e)\n                {\n                    ans+=e-b;\n                }\n                else\n                {\n                    ans+=b-e;\n                }\n            }\n            else if(b==e)\n            {\n                if(a<d)\n                {\n                    ans+=d-a;\n                }\n                else\n                {\n                    ans+=a-d;\n                }\n            }\n        }\n    }\n    cout<<ans<<endl;\n    return 0;\n}\n```", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import math\n\nn, m = map(int, input().split())\na, b, c = [], [], []\nd, e, f = [], [], []\nfor i in range(n):\n    a.append(int(input().split()[0]))\n    b.append(int(input().split()[1]))\n    c.append(int(input().split()[2]))\nfor i in range(m):\n    d.append(int(input().split()[0]))\n    e.append(int(input().split()[1]))\n    f.append(int(input().split()[2]))\n\n\ndef check(x, y):\n    for i in range(n):\n        if x >= a[i] and x <= b[i] and y >= c[i] and y <= c[i] + 1:\n            return True\n    for i in range(m):\n        if x >= d[i] and x <= d[i] + 1 and y >= e[i] and y <= f[i] + 1:\n            return True\n    return False\n\n\nans = 0\nfor i in range(-10 ** 9, 10 ** 9 + 1):\n    for j in range(-10 ** 9, 10 ** 9 + 1):\n        if check(i, j):\n            ans += 1\nprint(ans * 10 ** 12)\n\n-----Constraints-----\n - All values in input are integers between -10^9 and 10^9  (inclusive).\n - 1 \\leq N, M \\leq 1000\n - A_i < B_i\\ (1 \\leq i \\leq N)\n - E_j < F_j\\ (1 \\leq j \\leq M)\n - The point (0, 0) does not lie on any of the given segments.\n\n----", "\ndef main():\n    n, m = map(int, input().split())\n    a, b, c = [], [], []\n    d, e, f = [], [], []\n    for i in range(n):\n        a.append(int(input()))\n        b.append(int(input()))\n        c.append(int(input()))\n    for i in range(m):\n        d.append(int(input()))\n        e.append(int(input()))\n        f.append(int(input()))\n\n    ans = 0\n    for i in range(n):\n        for j in range(m):\n            if (a[i] <= d[j] <= b[i]) and (e[j] <= c[i] <= f[j]):\n                ans += (b[i] - a[i]) * (f[j] - e[j])\n\n    if ans == 0:\n        print(\"INF\")\n    else:\n        print(ans)\n\n\nif __name__ == \"__main__\":\n    main()", "#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int N = 1e3 + 10;\nint n, m, a[N], b[N], c[N], d[N], e[N], f[N];\nint main() {\n    ios::sync_with_stdio(false);\n    cin.tie(0);\n    cout.tie(0);\n    cin >> n >> m;\n    for (int i = 1; i <= n; i++) {\n        cin >> a[i] >> b[i] >> c[i];\n    }\n    for (int i = 1; i <= m; i++) {\n        cin >> d[i] >> e[i] >> f[i];\n    }\n    ll ans = 0;\n    for (int i = 1; i <= n; i++) {\n        for (int j = 1; j <= m; j++) {\n            ll x1 = a[i], y1 = b[i], x2 = c[i], y2 = c[i];\n            ll x3 = d[j], y3 = e[j], x4 = f[j], y4 = f[j];\n            if (x1 > x2) swap(x1, x2);\n            if (y1 > y2) swap(y1, y2);\n            if (x3 > x4) swap(x3, x4);\n            if (y3 > y4) swap(y3, y4);\n            if (x1 > x3 || (x1 == x3 && y1 > y3)) swap(x1, x3), swap(y1, y3);\n            if (x2 < x3 || (x2 == x3 && y2 < y3)) swap(x2, x3), swap(y2, y3);\n            if"], "rewards": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "train rewards": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "time": [24.44554567337036, 47.7019989490509, 69.88485550880432, 95.74529981613159, 122.17872905731201, 148.47670197486877, 175.19911336898804], "sample times": 7}