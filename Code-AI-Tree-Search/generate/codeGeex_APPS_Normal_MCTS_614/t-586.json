{"codes": ["\n#include<bits/stdc++.h>\nusing namespace std;\nconst int mod=998244353;\nint n,k;\nlong long ans;\nint main()\n{\n\tcin>>n>>k;\n\tif(n==1)\n\t{\n\t\tcout<<0;\n\t\treturn 0;\n\t}\n\tif(k==1)\n\t{\n\t\tcout<<1;\n\t\treturn 0;\n\t}\n\tif(k==n*n)\n\t{\n\t\tcout<<0;\n\t\treturn 0;\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=1;j<=n;j++)\n\t\t{\n\t\t\tfor(int l=1;l<=n;l++)\n\t\t\t{\n\t\t\t\tfor(int m=1;m<=n;m++)\n\t\t\t\t{\n\t\t\t\t\tif(i!=l&&j!=m)\n\t\t\t\t\t{\n\t\t\t\t\t\tans=(ans+1)%mod;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=1;j<=n;j++)\n\t\t{\n\t\t\tfor(int l=1;l<=n;l++)\n\t\t\t{\n\t\t\t\tfor(int m=1;m<=n;m++)\n\t\t\t\t{\n\t\t\t\t\tif(i!=l&&j!=m)\n\t\t\t\t\t{\n\t\t\t\t\t\tans=(ans+1)%mod;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tcout<<ans;\n\treturn 0;\n}\n```\n", "#include<bits/stdc++.h>\nusing namespace std;\nconst int mod=998244353;\nint n,k;\nlong long ans;\nint main()\n{\n\tcin>>n>>k;\n\tif(n==1)\n\t{\n\t\tcout<<0;\n\t\treturn 0;\n\t}\n\tif(k==1)\n\t{\n\t\tcout<<1;\n\t\treturn 0;\n\t}\n\tif(k==2)\n\t{\n\t\tcout<<2;\n\t\treturn 0;\n\t}\n\tif(k==3)\n\t{\n\t\tcout<<4;\n\t\treturn 0;\n\t}\n\tif(k==4)\n\t{\n\t\tcout<<8;\n\t\treturn 0;\n\t}\n\tif(k==5)\n\t{\n\t\tcout<<16;\n\t\treturn 0;\n\t}\n\tif(k==6)\n\t{\n\t\tcout<<32;\n\t\treturn 0;\n\t}\n\tif(k==7)\n\t{\n\t\tcout<<64;\n\t\treturn 0;\n\t}\n\tif(k==8)\n\t{\n\t\tcout<<128;\n\t\treturn 0;\n\t}\n\tif(k==9)\n\t{\n\t\tcout<<256;\n\t\treturn 0;\n\t}\n\tif(k==10)\n\t{\n\t\tcout<<512;\n\t\treturn 0;\n\t}\n\tif(k==11)\n\t{\n\t\tcout<<1024;\n\t\treturn 0;\n\t}\n\tif(k==12)\n\t{\n\t\tcout<<2048;\n\t\treturn 0;\n\t}\n\tif(k==13)\n\t{\n\t\tcout<<4096;\n\t\treturn 0;\n\t}\n\tif(k==14)\n\t{\n\t\tcout<<8192;\n\t\treturn 0;\n\t}\n\tif(k==15)\n\t{\n\t\tcout<<16384;\n\t\treturn 0;\n\t}\n\tif(k==16)\n\t{\n\t\tcout<<32768;\n\t\treturn", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```", "import sys\n\nn, k = map(int, sys.stdin.readline().split())\nans = 0\n\n\ndef check(board):\n    for i in range(n):\n        for j in range(n):\n            if board[i][j] == board[i][j + 1]:\n                return False\n            if board[i][j] == board[i + 1][j]:\n                return False\n    return True\n\n\ndef dfs(i, j):\n    global ans\n    if i == n:\n        if check(board):\n            ans += 1\n        return\n    if j == n:\n        dfs(i + 1, 0)\n        return\n    board[i][j] = 1\n    dfs(i, j + 1)\n    board[i][j] = 0\n    dfs(i, j + 1)\n\n\nboard = [[0] * n for _ in range(n)]\ndfs(0, 0)\nprint(ans % 998244353)", "\nimport sys\n\nn, k = map(int, sys.stdin.readline().split())\n\nans = 0\n\nfor i in range(1, n + 1):\n    for j in range(1, n + 1):\n        if i == 1 and j == 1:\n            ans = (ans + 1) % 998244353\n        elif i == n and j == n:\n            ans = (ans + 1) % 998244353\n        elif i == 1 and j == n:\n            ans = (ans + 1) % 998244353\n        elif i == n and j == 1:\n            ans = (ans + 1) % 998244353\n        elif i == 1:\n            ans = (ans + 1) % 998244353\n        elif j == 1:\n            ans = (ans + 1) % 998244353\n        elif i == n:\n            ans = (ans + 1) % 998244353\n        elif j == n:\n            ans = (ans + 1) % 998244353\n        else:\n            ans = (ans + 1) % 998244353\n\nfor i in range(1, n):\n    for j in range(1, n):\n        if i == 1 and j == 1:\n            ans = (ans + 1) % 998244353\n        elif i == n and j == n:\n            ans = (ans + 1) % 998244353\n        elif i == 1 and j == n:\n            ans = (ans + 1) % 998244353\n        elif i == n and j == 1:\n            ans = (ans + 1) % 998244353\n        elif i == 1:\n            ans = (ans + 1) % 998244353\n        elif j == 1:\n            ans = (ans + 1) % 998244353\n        elif i == n:\n            ans = (ans + 1) % 998", "#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int mod = 998244353;\nconst int maxn = 505;\nint n, k;\nll dp[maxn][maxn][maxn];\nint main() {\n    cin >> n >> k;\n    dp[1][1][1] = 1;\n    for (int i = 1; i <= n; i++) {\n        for (int j = 1; j <= n; j++) {\n            for (int l = 1; l <= k; l++) {\n                dp[i][j][l] = (dp[i - 1][j][l] + dp[i][j - 1][l] + dp[i][j][l - 1]) % mod;\n            }\n        }\n    }\n    ll ans = 0;\n    for (int i = 1; i <= n; i++) {\n        for (int j = 1; j <= n; j++) {\n            for (int l = 1; l <= k; l++) {\n                ans = (ans + dp[i][j][l]) % mod;\n            }\n        }\n    }\n    cout << ans << endl;\n    return 0;\n}\n```", "import math\nimport os\nimport random\nimport re\nimport sys\n\n\n\nif __name__ == '__main__':\n    fptr = open(os.environ['OUTPUT_PATH'], 'w')\n\n    nk = input().split()\n\n    n = int(nk[0])\n\n    k = int(nk[1])\n\n    result = 0\n\n    for n_itr in range(1, n + 1):\n        for k_itr in range(1, k + 1):\n            result += math.factorial(n) / (math.factorial(n - n_itr) * math.factorial(n_itr)) * math.factorial(k) / (math.factorial(k - k_itr) * math.factorial(k_itr))\n\n    result = result % 998244353\n\n    fptr.write(str(result) + '\\n')\n\n    fptr.close()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"], "rewards": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "train rewards": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "time": [24.741739988327026, 55.436036348342896, 60.046032667160034, 75.89267301559448, 111.1752233505249, 129.7522406578064, 160.58847165107727], "sample times": 7}