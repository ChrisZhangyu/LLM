{"codes": ["\nimport sys\n\nn = int(sys.stdin.readline())\na = list(map(int, sys.stdin.readline().split()))\nm = int(sys.stdin.readline())\nb = list(map(int, sys.stdin.readline().split()))\n\ndef check(a, b):\n    if len(a) != len(b):\n        return False\n\n    for i in range(len(a)):\n        if a[i] != b[i]:\n            return False\n\n    return True\n\n\ndef solve(a, b):\n    if check(a, b):\n        return len(a)\n\n    for i in range(len(a)):\n        for j in range(i + 1, len(a) + 1):\n            if sum(a[i:j]) == sum(b):\n                return max(solve(a[:i] + a[j:], b[:i] + b[j:]), len(a))\n\n    return -1\n\n\nprint(solve(a, b))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import sys\nimport math\n\nn = int(sys.stdin.readline())\na = list(map(int, sys.stdin.readline().split()))\nm = int(sys.stdin.readline())\nb = list(map(int, sys.stdin.readline().split()))\n\n\ndef check(a, b):\n    if len(a) != len(b):\n        return False\n    for i in range(len(a)):\n        if a[i] != b[i]:\n            return False\n    return True\n\n\ndef solve(a, b):\n    if check(a, b):\n        return len(a)\n    if len(a) == 0:\n        return len(b)\n    if len(b) == 0:\n        return len(a)\n    if a[0] == b[0]:\n        return solve(a[1:], b[1:])\n    if a[0] > b[0]:\n        return solve(a, b[1:])\n    if a[0] < b[0]:\n        return solve(a[1:], b)\n\n\nprint(solve(a, b))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\ndef check(a, b):\n    if len(a) != len(b):\n        return False\n    for i in range(len(a)):\n        if a[i] != b[i]:\n            return False\n    return True\n\n\ndef solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = int(input())\n    b = list(map(int, input().split()))\n    for i in range(1, n + 1):\n        for j in range(1, m + 1):\n            for k in range(0, n - i + 1):\n                for l in range(0, m - j + 1):\n                    if check(a[k : k + i], b[l : l + j]):\n                        return i + j\n    return -1\n\n\nif __name__ == \"__main__\":\n    print(solve())", "#include<bits/stdc++.h>\nusing namespace std;\nint n,m,a[300005],b[300005],c[300005],d[300005];\nint main()\n{\n    cin>>n;\n    for(int i=1;i<=n;i++)\n    {\n        cin>>a[i];\n    }\n    cin>>m;\n    for(int i=1;i<=m;i++)\n    {\n        cin>>b[i];\n    }\n    for(int i=1;i<=n;i++)\n    {\n        c[i]=c[i-1]+a[i];\n    }\n    for(int i=1;i<=m;i++)\n    {\n        d[i]=d[i-1]+b[i];\n    }\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=1;j<=m;j++)\n        {\n            if(c[i]==d[j])\n            {\n                cout<<i;\n                return 0;\n            }\n        }\n    }\n    cout<<-1;\n    return 0;\n}", "\ndef maxLength(A, B):\n    n = len(A)\n    m = len(B)\n    if n > m:\n        A, B = B, A\n        n, m = m, n\n    if n == 0:\n        return m\n    if m == 0:\n        return n\n    if A[0] == B[0]:\n        return max(maxLength(A[1:], B[1:]), maxLength(A, B[1:]))\n    else:\n        return max(maxLength(A[1:], B), maxLength(A, B[1:]))\n\nprint(maxLength(list(map(int, input().split())), list(map(int, input().split()))))\n\n\"\"\"\n\n\ndef maxLength(A, B):\n    n = len(A)\n    m = len(B)\n    if n > m:\n        A, B = B, A\n        n, m = m, n\n    if n == 0:\n        return m\n    if m == 0:\n        return n\n    if A[0] == B[0]:\n        return max(maxLength(A[1:], B[1:]), maxLength(A, B[1:]))\n    else:\n        return max(maxLength(A[1:], B), maxLength(A, B[1:]))\n\n\nprint(maxLength(list(map(int, input().split())), list(map(int, input().split()))))", "\nimport sys\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef read_ints():\n    return [int(x) for x in sys.stdin.readline().split()]\n\nn, m = read_ints()\nA = read_ints()\nm, B = read_ints()\nB = read_ints()\n\ndef solve(A, B):\n    n = len(A)\n    m = len(B)\n    if n > m:\n        A, B = B, A\n        n, m = m, n\n    if n == 0:\n        return m\n    if m == 0:\n        return n\n    if A[0] == B[0]:\n        return solve(A[1:], B[1:])\n    if A[0] > B[0]:\n        return solve(A, B[1:])\n    if A[0] < B[0]:\n        return solve(A[1:], B)\n\nprint(solve(A, B) if solve(A, B) > 0 else -1)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"], "rewards": [0.5714285714285714, 0.0, 0.10714285714285714, 0.0, 0.0, 0.0, 0.0], "train rewards": [0.39285714285714285, 0.0, 0.17857142857142858, 0.0, 0.0, 0.0, 0.0], "time": [22.90084457397461, 45.632863998413086, 68.43240690231323, 82.24560356140137, 100.17490673065186, 120.01714301109314, 142.71377515792847], "sample times": 7}