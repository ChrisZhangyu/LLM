{"codes": ["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import sys\n\n\ndef rotate_cube(cube):\n    new_cube = []\n    for i in range(len(cube[0])):\n        new_cube.append([])\n        for j in range(len(cube) - 1, -1, -1):\n            new_cube[i].append(cube[j][i])\n    return new_cube\n\n\ncube = []\nfor i in range(24):\n    cube.append(int(sys.stdin.readline().strip()))\n\nfor i in range(4):\n    cube = rotate_cube(cube)\n    for j in range(len(cube[0])):\n        if cube[j].count(cube[j][0]) != len(cube[j]):\n            break\n    else:\n        print(\"YES\")\n        sys.exit(0)\nprint(\"NO\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\ndef main():\n    cube = [int(i) for i in input().split()]\n    if cube[0] == cube[1] and cube[1] == cube[2] and cube[2] == cube[3] and cube[3] == cube[4] and cube[4] == cube[5] and cube[5] == cube[6] and cube[6] == cube[7] and cube[7] == cube[8] and cube[8] == cube[9] and cube[9] == cube[10] and cube[10] == cube[11] and cube[11] == cube[12] and cube[12] == cube[13] and cube[13] == cube[14] and cube[14] == cube[15] and cube[15] == cube[16] and cube[16] == cube[17] and cube[17] == cube[18] and cube[18] == cube[19] and cube[19] == cube[20] and cube[20] == cube[21] and cube[21] == cube[22] and cube[22] == cube[23] and cube[23] == cube[24]:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\n\nif __name__ == '__main__':\n    main()", "def main():\n    cube = [int(i) for i in input().split()]\n    if cube[0] == cube[1] == cube[2] == cube[3] == cube[4] == cube[5] == cube[6] == cube[7] == cube[8] == cube[9] == cube[10] == cube[11] == cube[12] == cube[13] == cube[14] == cube[15] == cube[16] == cube[17] == cube[18] == cube[19] == cube[20] == cube[21] == cube[22] == cube[23]:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\n\nif __name__ == '__main__':\n    main()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\nimport itertools\nimport sys\n\n\nclass Cube(object):\n    def __init__(self, cube):\n        self.cube = cube\n\n    def rotate(self, face, direction):\n        if direction == 'cw':\n            self.cube[face] = self.cube[face][-1:] + self.cube[face][:-1]\n        elif direction == 'ccw':\n            self.cube[face] = self.cube[face][1:] + self.cube[face][:1]\n\n    def solve(self):\n        for face in self.cube.keys():\n            for direction in ['cw', 'ccw']:\n                self.rotate(face, direction)\n                if self.is_solved():\n                    return True\n                self.rotate(face, 'cw' if direction == 'ccw' else 'ccw')\n        return False\n\n    def is_solved(self):\n        for face in self.cube.keys():\n            if len(set(self.cube[face])) != 1:\n                return False\n        return True\n\n    def __str__(self):\n        return str(self.cube)\n\n\nif __name__ == '__main__':\n    cube = {}\n    for i in range(1, 7):\n        cube[i] = list(itertools.repeat(i, 9))\n\n    for i in sys.stdin:\n        for j in range(1, 7):\n            cube[j] = list(map(int, i.split()))\n        if Cube(cube).solve():\n            print('YES')\n        else:\n            print('NO')\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\ndef check(cube):\n    for i in range(6):\n        if cube[i] != cube[i + 6] or cube[i] != cube[i + 12] or cube[i] != cube[i + 18]:\n            return False\n    for i in range(6):\n        if cube[i] != cube[i + 1] or cube[i] != cube[i + 2] or cube[i] != cube[i + 3]:\n            return False\n    for i in range(6):\n        if cube[i] != cube[i + 4] or cube[i] != cube[i + 5] or cube[i] != cube[i + 6]:\n            return False\n    for i in range(6):\n        if cube[i] != cube[i + 7] or cube[i] != cube[i + 8] or cube[i] != cube[i + 9]:\n            return False\n    for i in range(6):\n        if cube[i] != cube[i + 10] or cube[i] != cube[i + 11] or cube[i] != cube[i + 12]:\n            return False\n    for i in range(6):\n        if cube[i] != cube[i + 13] or cube[i] != cube[i + 14] or cube[i] != cube[i + 15]:\n            return False\n    for i in range(6):\n        if cube[i] != cube[i + 16] or cube[i] != cube[i + 17] or cube[i] != cube[i + 18]:\n            return False\n    for i in range(6):\n        if cube[i] != cube[i + 19] or cube[i] != cube[i + 20] or cube[i] != cube[i + 21]:\n            return False\n    for i in range(6):\n        if cube[i] != cube[i + ", "\nimport sys\n\nn = int(sys.stdin.readline().strip())\na = [int(x) for x in sys.stdin.readline().strip().split()]\n\ndef check(a):\n    for i in range(6):\n        if a[i] != a[i+6] or a[i] != a[i+12] or a[i] != a[i+18]:\n            return False\n    for i in range(6):\n        if a[i+1] != a[i+5] or a[i+1] != a[i+7] or a[i+1] != a[i+11]:\n            return False\n    for i in range(6):\n        if a[i+2] != a[i+4] or a[i+2] != a[i+8] or a[i+2] != a[i+10]:\n            return False\n    for i in range(6):\n        if a[i+3] != a[i+6] or a[i+3] != a[i+9] or a[i+3] != a[i+12]:\n            return False\n    for i in range(6):\n        if a[i+3] != a[i+6] or a[i+3] != a[i+9] or a[i+3] != a[i+12]:\n            return False\n    for i in range(6):\n        if a[i+3] != a[i+6] or a[i+3] != a[i+9] or a[i+3] != a[i+12]:\n            return False\n    for i in range(6):\n        if a[i+3] != a[i+6] or a[i+3] != a[i+9] or a[i+3] != a[i+12]:\n            return False\n    for i in range(6):\n        if a[i+3] != a[i+6] or a[i+3] != a[i+9] or a[i+3] != a[i+12]:\n            return False\n    for i in range(6):\n        if a[i+", "def check(cube):\n    for i in range(6):\n        if cube[i] != cube[i+6] or cube[i] != cube[i+12] or cube[i] != cube[i+18]:\n            return False\n    for i in range(6):\n        if cube[i] != cube[i+1] or cube[i] != cube[i+5] or cube[i] != cube[i+7]:\n            return False\n    for i in range(6):\n        if cube[i] != cube[i+2] or cube[i] != cube[i+4] or cube[i] != cube[i+8]:\n            return False\n    for i in range(6):\n        if cube[i] != cube[i+3] or cube[i] != cube[i+9] or cube[i] != cube[i+15]:\n            return False\n    for i in range(6):\n        if cube[i] != cube[i+10] or cube[i] != cube[i+11] or cube[i] != cube[i+12]:\n            return False\n    for i in range(6):\n        if cube[i] != cube[i+13] or cube[i] != cube[i+14] or cube[i] != cube[i+16]:\n            return False\n    for i in range(6):\n        if cube[i] != cube[i+17] or cube[i] != cube[i+18] or cube[i] != cube[i+19]:\n            return False\n    for i in range(6):\n        if cube[i] != cube[i+20] or cube[i] != cube[i+21] or cube[i] != cube[i+22]:\n            return False\n    for i in range(6):\n        if cube[i] != cube[i+23] or cube[i] != cube[i+24] or cube[i] !=", "\ndef solve_cube(cube):\n    for i in range(4):\n        for j in range(4):\n            for k in range(4):\n                for l in range(4):\n                    for m in range(4):\n                        for n in range(4):\n                            for o in range(4):\n                                for p in range(4):\n                                    for q in range(4):\n                                        for r in range(4):\n                                            for s in range(4):\n                                                for t in range(4):\n                                                    for u in range(4):\n                                                        for v in range(4):\n                                                            for w in range(4):\n                                                                for x in range(4):\n                                                                    for y in range(4):\n                                                                        for z in range(4):\n                                                                            for a in range(4):\n                                                                                for b in range(4):\n                                                                                    for c in range(4):\n                                                                                        for d in range(4):\n                                                                                            for e in range(4):\n                                                                                                for f in range(4):\n                                                                                                    for g in range(4):\n                                                                                                        for h in range(4):\n                                                                                                            for i in range(4):\n                                                                                                                for j in range(4):\n                                                                                                                    for k in range(4):\n                                                                                                                        for l in range(4):\n                                                                                                                            for m in range(4):\n                                                                                                                                for n in range(4):\n                                                                                                                                    for o in range(4):\n                                                                                                                                        for p in range(4):\n                                                                                                                                            for q in range(4):\n                                                                                                                                                for r in range(4):\n                                                                                                                                                    for s in range(4):\n                                                                                                                                                        for t in range(4):\n                                                                                                                                                            ", "import sys\n\ndef solve(cube):\n    for i in range(4):\n        for j in range(4):\n            for k in range(4):\n                if cube[i][j][k] != cube[(i + 1) % 4][j][k]:\n                    return False\n                if cube[i][j][k] != cube[i][(j + 1) % 4][k]:\n                    return False\n                if cube[i][j][k] != cube[i][j][(k + 1) % 4]:\n                    return False\n    return True\n\nif __name__ == '__main__':\n    cube = []\n    for i in range(4):\n        cube.append([])\n        for j in range(4):\n            cube[i].append([])\n            for k in range(4):\n                cube[i][j].append(int(sys.stdin.readline().strip()))\n\n    if solve(cube):\n        print('YES')\n    else:\n        print('NO')\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\n\ndef main():\n    cube = []\n    for i in range(24):\n        cube.append(int(input()))\n\n    for i in range(0, 24, 4):\n        if cube[i] != cube[i + 1] or cube[i] != cube[i + 2] or cube[i] != cube[i + 3]:\n            print(\"NO\")\n            return\n\n    for i in range(1, 24, 4):\n        if cube[i] != cube[i + 1] or cube[i] != cube[i + 2] or cube[i] != cube[i + 3]:\n            print(\"NO\")\n            return\n\n    for i in range(2, 24, 4):\n        if cube[i] != cube[i + 1] or cube[i] != cube[i + 2] or cube[i] != cube[i + 3]:\n            print(\"NO\")\n            return\n\n    for i in range(3, 24, 4):\n        if cube[i] != cube[i + 1] or cube[i] != cube[i + 2] or cube[i] != cube[i + 3]:\n            print(\"NO\")\n            return\n\n    print(\"YES\")\n\n\nif __name__ == \"__main__\":\n    main()"], "rewards": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "train rewards": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "time": [28.206568956375122, 56.32688617706299, 84.6220486164093, 113.61675596237183, 141.68718004226685, 169.83230447769165, 198.33390879631042, 227.12483596801758, 255.74417853355408, 284.51863503456116, 303.8608875274658], "sample times": 11}