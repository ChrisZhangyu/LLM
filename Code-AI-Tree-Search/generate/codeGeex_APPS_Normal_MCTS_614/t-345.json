{"codes": ["\n#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n    int n,m;\n    cin>>n>>m;\n    int a[m+1],b[m+1];\n    for(int i=1;i<=m;i++)\n    {\n        cin>>a[i]>>b[i];\n    }\n    int ans=0;\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=i+1;j<=n;j++)\n        {\n            int cnt=0;\n            for(int k=1;k<=m;k++)\n            {\n                if(a[k]==i&&b[k]==j||a[k]==j&&b[k]==i)\n                {\n                    cnt++;\n                }\n            }\n            ans=max(ans,cnt);\n        }\n    }\n    cout<<ans;\n    return 0;\n}\n```\n", "#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n    int n,m;\n    cin>>n>>m;\n    int a,b;\n    int ans=0;\n    for(int i=0;i<m;i++)\n    {\n        cin>>a>>b;\n        if(a>b)\n        {\n            swap(a,b);\n        }\n        ans+=b-a;\n    }\n    cout<<ans;\n    return 0;\n}\n```", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\nimport math\nimport os\nimport random\nimport re\nimport sys\n\n\n\nif __name__ == '__main__':\n    nm = input().split()\n\n    n = int(nm[0])\n\n    m = int(nm[1])\n\n    edges = []\n\n    for _ in range(m):\n        edges.append(list(map(int, input().rstrip().split())))\n\n    ans = 0\n\n    for i in range(m):\n        for j in range(i+1, m):\n            if edges[i][0] == edges[j][0] or edges[i][0] == edges[j][1] or edges[i][1] == edges[j][0] or edges[i][1] == edges[j][1]:\n                ans += 1\n            if edges[i][0] == edges[j][1] or edges[i][0] == edges[j][0] or edges[i][1] == edges[j][1] or edges[i][1] == edges", "import sys\n\nn, m = map(int, sys.stdin.readline().split())\nedges = []\nfor i in range(m):\n    a, b = map(int, sys.stdin.readline().split())\n    edges.append((a, b))\n\nans = 0\nfor i in range(1, 7):\n    for j in range(i + 1, 7):\n        if (i, j) in edges or (j, i) in edges:\n            ans += 1\n\nprint(ans)", "import math\nimport os\nimport random\nimport re\nimport sys\n\n\n\nif __name__ == '__main__':\n    nm = input().split()\n\n    n = int(nm[0])\n\n    m = int(nm[1])\n\n    edges = []\n\n    for _ in range(m):\n        edges.append(list(map(int, input().rstrip().split())))\n\n    ans = 0\n\n    for i in range(m):\n        for j in range(i+1, m):\n            if edges[i][0] == edges[j][0] or edges[i][0] == edges[j][1] or edges[i][1] == edges[j][0] or edges[i][1] == edges[j][1]:\n                ans += 1\n            if edges[i][0] == edges[j][1] or edges[i][0] == edges[j][0] or edges[i][1] == edges[j][1] or edges[i][1] == edges["], "rewards": [0.0, 0.0, 0.0, 0.0, 0.20689655172413793, 0.0], "train rewards": [0.0, 0.0, 0.0, 0.0, 0.6785714285714286, 0.0], "time": [13.758346319198608, 22.9947566986084, 27.693686485290527, 42.62173557281494, 52.49902892112732, 67.26073431968689], "sample times": 6}