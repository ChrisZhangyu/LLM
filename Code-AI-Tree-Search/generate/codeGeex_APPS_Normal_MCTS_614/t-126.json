{"codes": ["\nimport sys\n\nn = int(sys.stdin.readline().strip())\ns = sys.stdin.readline().strip()\n\nd = {}\n\nfor i in range(len(s)):\n    if s[i] in d:\n        d[s[i]].append(i)\n    else:\n        d[s[i]] = [i]\n\nfor i in range(len(s)):\n    for j in range(i + 1, len(s)):\n        if d[s[i]] == d[s[j]]:\n            print(\"NO\")\n            sys.exit()\n\nprint(\"YES\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import sys\n\nn = int(sys.stdin.readline().strip())\ns = sys.stdin.readline().strip()\n\nd = {}\n\nfor i in range(n):\n    d[s[i]] = i\n\nfor i in range(10):\n    for j in range(10):\n        for k in range(10):\n            for l in range(10):\n                for m in range(10):\n                    if i != j and i != k and i != l and i != m and j != k and j != l and j != m and k != l and k != m and l != m:\n                        if d[str(i)] == d[str(j)] + 3 and d[str(j)] == d[str(k)] + 3 and d[str(k)] == d[str(l)] + 3 and d[str(l)] == d[str(m)] + 3 and d[str(m)] == d[str(i)] + 3:\n                            print(\"YES\")\n                            sys.exit()\n\nprint(\"NO\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n```", "#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n\tint n;\n\tcin>>n;\n\tstring s;\n\tcin>>s;\n\tint a[10][10];\n\tfor(int i=0;i<10;i++)\n\t{\n\t\tfor(int j=0;j<10;j++)\n\t\t{\n\t\t\ta[i][j]=0;\n\t\t}\n\t}\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tfor(int j=0;j<n;j++)\n\t\t{\n\t\t\tif(s[i]==s[j])\n\t\t\t{\n\t\t\t\ta[i][j]=1;\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=0;i<10;i++)\n\t{\n\t\tfor(int j=i+1;j<10;j++)\n\t\t{\n\t\t\tfor(int k=0;k<n;k++)\n\t\t\t{\n\t\t\t\tif(a[i][k]!=a[j][k])\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(k==n-1)\n\t\t\t\t{\n\t\t\t\t\tcout<<\"NO\"<<endl;\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tcout<<\"YES\"<<endl;\n\treturn 0;\n}", "\ndef get_finger_movements(number):\n    finger_movements = []\n    for digit in number:\n        finger_movements.append(get_finger_movements_for_digit(digit))\n    return finger_movements\n\n\ndef get_finger_movements_for_digit(digit):\n    if digit == '0':\n        return [0, 0]\n    elif digit == '1':\n        return [0, 1]\n    elif digit == '2':\n        return [0, 2]\n    elif digit == '3':\n        return [0, 3]\n    elif digit == '4':\n        return [1, 0]\n    elif digit == '5':\n        return [1, 1]\n    elif digit == '6':\n        return [1, 2]\n    elif digit == '7':\n        return [1, 3]\n    elif digit == '8':\n        return [2, 0]\n    elif digit == '9':\n        return [2, 1]\n    else:\n        return [2, 2]", "\nimport re\n\nn = int(input())\n\ns = input()\n\ns = re.sub(r'[^0-9]', '', s)\n\nfor i in range(10000):\n    if re.sub(r'[^0-9]', '', str(i)) == s:\n        print('NO')\n        break\nelse:\n    print('YES')\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\n\ndef get_finger_movements(number):\n    finger_movements = []\n    for digit in number:\n        if digit == '0':\n            finger_movements.append([0, 0])\n        elif digit == '1':\n            finger_movements.append([0, 1])\n        elif digit == '2':\n            finger_movements.append([0, 2])\n        elif digit == '3':\n            finger_movements.append([0, 3])\n        elif digit == '4':\n            finger_movements.append([1, 0])\n        elif digit == '5':\n            finger_movements.append([1, 1])\n        elif digit == '6':\n            finger_movements.append([1, 2])\n        elif digit == '7':\n            finger_movements.append([1, 3])\n        elif digit == '8':\n            finger_movements.append([2, 0])\n        elif digit == '9':\n            finger_movements.append([2, 1])\n    return finger_movements\n\n\ndef get_finger_movements_for_number(number):\n    finger_movements = []\n    for digit in number:\n        if digit == '0':\n            finger_movements.append([0, 0])\n        elif digit == '1':\n            finger_movements.append([0, 1])\n        elif digit == '2':\n            finger_movements.append([0, 2])\n        elif digit == '3':\n            finger_movements.append([0, 3])\n        elif digit == '4':\n            finger_movements.append([1, 0])\n        elif digit == '5':\n            finger_movements.append([1, 1])\n        elif digit == '6':\n            finger_movements.append([1, 2])\n        elif digit == '7':\n            finger_movements.append([1, 3])\n        elif digit == '8':\n            finger_movements.append([2, 0])\n        elif digit == '9':\n            finger_movements.append([2, 1])\n    return finger_movements\n\n\ndef get_finger_movements_for_number(number):\n    finger_movements = []"], "rewards": [0.5319148936170213, 0.0, 0.0, 0.0, 0.0, 0.5319148936170213, 0.0], "train rewards": [0.43478260869565216, 0.0, 0.0, 0.0, 0.0, 0.4782608695652174, 0.0], "time": [32.3879337310791, 65.71116471290588, 70.3354320526123, 93.91472482681274, 115.30772948265076, 147.92395281791687, 181.0300657749176], "sample times": 7}