{"codes": ["\nimport sys\n\nn = int(sys.stdin.readline().strip())\nx = []\ny = []\nfor i in range(n):\n    line = sys.stdin.readline().strip().split()\n    x.append(int(line[1]))\n    if line[0] == '>=':\n        y.append(int(line[1]) + 1)\n    elif line[0] == '<=':\n        y.append(int(line[1]) - 1)\n    elif line[0] == '>':\n        y.append(int(line[1]) + 2)\n    elif line[0] == '<':\n        y.append(int(line[1]) - 2)\n\nfor i in range(len(y)):\n    if y[i] in x:\n        print(y[i])\n        break\nelse:\n    print('Impossible')\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import sys\n\nn = int(sys.stdin.readline().strip())\nx = []\ny = []\nfor i in range(n):\n    line = sys.stdin.readline().strip().split()\n    x.append(int(line[1]))\n    if line[0] == '>':\n        y.append(1)\n    elif line[0] == '<':\n        y.append(-1)\n    elif line[0] == '>=':\n        y.append(2)\n    elif line[0] == '<=':\n        y.append(-2)\n    else:\n        print('Error')\n        sys.exit(0)\n\nif y[0] == 1:\n    for i in range(1, n):\n        if y[i] != 1:\n            print('Impossible')\n            sys.exit(0)\n    print(x[0])\nelif y[0] == -1:\n    for i in range(1, n):\n        if y[i] != -1:\n            print('Impossible')\n            sys.exit(0)\n    print(-x[0])\nelif y[0] == 2:\n    for i in range(1, n):\n        if y[i] != 2:\n            print('Impossible')\n            sys.exit(0)\n    print(x[0] + 1)\nelif y[0] == -2:\n    for i in range(1, n):\n        if y[i] != -2:\n            print('Impossible')\n            sys.exit(0)\n    print(-x[0] - 1)\nelse:\n    print('Error')\n    sys.exit(0)", "#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <algorithm>\n#include <cstdlib>\n#include <string>\n#include <vector>\n#include <map>\n#include <set>\n#include <queue>\n#include <stack>\n#include <ctime>\n#include <cctype>\n#include <bitset>\n#include <sstream>\n#include <complex>\n#include <climits>\n#include <functional>\n#include <iomanip>\n#include <cassert>\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef vector<int> vi;\ntypedef vector<ll> vll;\ntypedef vector<ull> vull;\ntypedef vector<vi> vvi;\ntypedef vector<vll> vvll;\ntypedef vector<vull> vvull;\ntypedef vector<string> vs;\ntypedef vector<char> vc;\ntypedef vector<bool> vb;\ntypedef vector<double> vd;\ntypedef vector<long double> vld;\ntypedef vector<vector<int>> vvi;\ntypedef vector<vector<ll>> vvll;\ntypedef vector<vector<ull>> vvull;\ntypedef map<int, int> mii;\ntypedef map<ll, ll> mll;\ntypedef map<ull, ull> mull;\ntypedef map<string, int> msi;\ntypedef map<string, ll> msl;\ntypedef map<string, ull> msu;\ntypedef map<char, int> mci;\ntypedef map<char, ll> mcl;\ntypedef map<char, ull> mcu;\ntypedef map<bool, int> mbi;\ntypedef map<bool, ll> mbl;\ntyp", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\ndef get_input():\n    n = int(input())\n    questions = []\n    for i in range(n):\n        question, answer = input().split()\n        questions.append((question, answer))\n    return questions\n\n\ndef check_answer(question, answer):\n    if question == '>':\n        return answer == 'Y'\n    elif question == '<':\n        return answer == 'N'\n    elif question == '>=':\n        return answer == 'N'\n    elif question == '<=':\n        return answer == 'Y'\n\n\ndef get_answer(questions):\n    for question, answer in questions:\n        if not check_answer(question, answer):\n            return False\n    return True\n\n\ndef main():\n    questions = get_input()\n    if not get_answer(questions):\n        print('Impossible')\n    else:\n        for question, answer in questions:\n            if question == '>':\n                if answer == 'Y':\n                    print(answer)\n                    break\n            elif question == '<':\n                if answer == 'N':\n                    print(answer)\n                    break\n            elif question == '>=':\n                if answer == 'N':\n                    print(answer)\n                    break\n            elif question == '<=':\n                if answer == 'Y':\n                    print(answer)\n                    break\n\n\nif __name__ == '__main__':\n    main()", "import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    for i in range(n):\n        line = sys.stdin.readline().strip().split()\n        if line[1] == 'Y':\n            if line[0] == '>=':\n                print(int(line[2]) + 1)\n            elif line[0] == '<=':\n                print(int(line[2]) - 1)\n            elif line[0] == '>':\n                print(int(line[2]) + 2)\n            elif line[0] == '<':\n                print(int(line[2]) - 2)\n        else:\n            if line[0] == '>=':\n                print(int(line[2]) - 1)\n            elif line[0] == '<=':\n                print(int(line[2]) + 1)\n            elif line[0] == '>':\n                print(int(line[2]) - 2)\n            elif line[0] == '<':\n                print(int(line[2]) + 2)\n\nif __name__ == '__main__':\n    main()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\n\ndef get_input():\n    n = int(input())\n    questions = []\n    for i in range(n):\n        question, answer = input().split()\n        questions.append((question, answer))\n    return questions\n\n\ndef check_answer(question, answer):\n    if question == '>':\n        return answer == 'Y'\n    elif question == '<':\n        return answer == 'N'\n    elif question == '>=':\n        return answer == 'N'\n    elif question == '<=':\n        return answer == 'Y'\n\n\ndef get_answer(questions):\n    for question, answer in questions:\n        if not check_answer(question, answer):\n            return 'Impossible'\n    return 'Y'\n\n\nif __name__ == '__main__':\n    questions = get_input()\n    print(get_answer(questions))", "#!/usr/bin/env python3\n\nimport sys\n\nn = int(sys.stdin.readline().strip())\n\ndef check(x):\n    for i in range(n):\n        q, a = sys.stdin.readline().strip().split()\n        if q == '>':\n            if a == 'N':\n                return False\n        elif q == '<':\n            if a == 'Y':\n                return False\n        elif q == '>=':\n            if a == 'N':\n                return False\n        elif q == '<=':\n            if a == 'Y':\n                return False\n    return True\n\nfor i in range(-2000000000, 2000000000):\n    if check(i):\n        print(i)\n        break"], "rewards": [0.2, 0.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "train rewards": [0.034482758620689655, 0.034482758620689655, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "time": [25.541382551193237, 52.233513593673706, 78.77520418167114, 105.07633090019226, 124.88185048103333, 150.69600176811218, 165.23543429374695, 183.913152217865], "sample times": 8}