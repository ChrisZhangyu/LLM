{"codes": ["\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n#include <cstring>\n#include <string>\n#include <vector>\n#include <map>\n#include <set>\n#include <stdlib.h>\n#include <stack>\n#include <queue>\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef vector<int> vi;\ntypedef vector<ll> vll;\ntypedef vector<ull> vull;\ntypedef vector<vi> vvi;\ntypedef vector<vll> vvll;\ntypedef vector<vull> vvull;\ntypedef map<int, int> mii;\ntypedef map<ll, ll> mll;\ntypedef map<ull, ull> mull;\ntypedef map<string, int> msi;\ntypedef map<string, ll> msl;\ntypedef map<string, ull> msu;\ntypedef map<char, int> mci;\ntypedef map<char, ll> mcl;\ntypedef map<char, ull> mcu;\ntypedef set<int> si;\ntypedef set<ll> sl;\ntypedef set<ull> su;\ntypedef set<string> ss;\ntypedef set<char> sc;\ntypedef stack<int> sti;\ntypedef stack<ll> stl;\ntypedef stack<ull> stu;\ntypedef stack<string> sts;\ntypedef stack<char> stc;\ntypedef queue<int> qi;\ntypedef queue<ll> ql;\ntypedef queue<ull> qu;\ntypedef queue<string> qs;\ntypedef queue<char> qc;\nint main()\n{\n    ios::sync_with_stdio(false);\n    cin.tie(0);\n    cout.tie(0);\n    int n;\n    cin >> n;\n    vector<pair<int, int> > v(n);\n    for (int i = 0; i < n; i++)\n    {\n        cin >> v[i].first >> v[i].second;\n    }\n    sort(v.begin(), v.end());\n    for (int i = 0; i < n - 1; i++)\n    {\n        if (v[i].second > v[i + 1].second)\n        {\n            cout << \"Yes\" << endl;\n            return 0;\n        }\n    }\n    cout << \"No\" << endl;\n    return 0;\n}", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import sys\n\nn = int(sys.stdin.readline().strip())\npoints = []\n\nfor i in range(n):\n    x, y = map(int, sys.stdin.readline().strip().split())\n    points.append((x, y))\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if points[i][1] > points[j][1]:\n            points[i], points[j] = points[j], points[i]\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if points[i][0] > points[j][0]:\n            points[i], points[j] = points[j], points[i]\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if points[i][1] > points[j][1]:\n            points[i], points[j] = points[j], points[i]\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if points[i][0] > points[j][0]:\n            points[i], points[j] = points[j], points[i]\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if points[i][1] > points[j][1]:\n            points[i], points[j] = points[j], points[i]\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if points[i][0] > points[j][0]:\n            points[i], points[j] = points[j], points[i]\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if points[i][1] > points[j][1]:\n            points[i], points[j] = points[j], points[i]\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if points[i][0] > points[j][0]:\n            points[i], points[j] = points[j], points[i]\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if points[i][1] > points[j][1]:\n            points[i], points[j] = points[j], points[i]\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if points[i][0] > points[j][0]:\n            points[i], points[j] = points[j], points[i]\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if points[i][1] > points[j][1]:\n            points[i], points[j] =", "#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n    int n;\n    cin>>n;\n    int x[n],y[n];\n    for(int i=0;i<n;i++)\n    {\n        cin>>x[i]>>y[i];\n    }\n    for(int i=0;i<n;i++)\n    {\n        for(int j=0;j<n;j++)\n        {\n            if(i!=j)\n            {\n                if(x[i]*x[j]+y[i]*y[j]==0)\n                {\n                    cout<<\"No\"<<endl;\n                    return 0;\n                }\n            }\n        }\n    }\n    cout<<\"Yes\"<<endl;\n    return 0;\n}\n```", "\nimport sys\n\nn = int(sys.stdin.readline().strip())\n\npoints = []\n\nfor i in range(n):\n    x, y = map(int, sys.stdin.readline().strip().split())\n    points.append((x, y))\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if points[i][1] > points[j][1]:\n            points[i], points[j] = points[j], points[i]\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if points[i][0] > points[j][0]:\n            points[i], points[j] = points[j], points[i]\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if points[i][1] > points[j][1]:\n            points[i], points[j] = points[j], points[i]\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if points[i][0] > points[j][0]:\n            points[i], points[j] = points[j], points[i]\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if points[i][1] > points[j][1]:\n            points[i], points[j] = points[j], points[i]\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if points[i][0] > points[j][0]:\n            points[i], points[j] = points[j], points[i]\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if points[i][1] > points[j][1]:\n            points[i], points[j] = points[j], points[i]\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if points[i][0] > points[j][0]:\n            points[i], points[j] = points[j], points[i]\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if points[i][1] > points[j][1]:\n            points[i], points[j] = points[j], points[i]\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if points[i][0] > points[j][0]:\n            points[i], points[j] = points[j], points[i]\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if points[i][1] > points[j][1]:\n            points[i], points[j", "import math\nn = int(input())\nx = []\ny = []\nfor i in range(n):\n    x.append(int(input()))\nfor i in range(n):\n    y.append(int(input()))\nfor i in range(n):\n    if x[i] == 0:\n        if y[i] > 0:\n            print(\"Yes\")\n            break\n        else:\n            print(\"No\")\n            break\nfor i in range(n):\n    if y[i] == 0:\n        if x[i] > 0:\n            print(\"Yes\")\n            break\n        else:\n            print(\"No\")\n            break\nfor i in range(n):\n    if x[i] > 0:\n        if y[i] > 0:\n            print(\"Yes\")\n            break\n        else:\n            print(\"No\")\n            break\nfor i in range(n):\n    if y[i] > 0:\n        if x[i] > 0:\n            print(\"Yes\")\n            break\n        else:\n            print(\"No\")\n            break\nfor i in range(n):\n    if x[i] < 0:\n        if y[i] > 0:\n            print(\"Yes\")\n            break\n        else:\n            print(\"No\")\n            break\nfor i in range(n):\n    if y[i] < 0:\n        if x[i] > 0:\n            print(\"Yes\")\n            break\n        else:\n            print(\"No\")\n            break\nfor i in range(n):\n    if x[i] > 0:\n        if y[i] < 0:\n            print(\"Yes\")\n            break\n        else:\n            print(\"No\")\n            break\nfor i in range(n):\n    if y[i] > 0:\n        if x[i] < 0:\n            print(\"Yes\")\n            break\n        else:\n            print(\"No\")\n            break\nfor i in range(n):\n    if x[i] < 0:\n        if y[i] < 0:\n            print(\"Yes\")\n            break\n        else:\n            print(\"No\")\n            break\nfor i in range(n):\n    if y[i] < 0:\n        if x[i] < 0:\n            print(\"Yes\")\n            break\n        else:\n            print(\"No\")\n            break\nfor i in range(n):\n    if x[i] == 0:\n        if y[i] < 0:\n            print(\"Yes\")\n            break\n        else:\n            print(\"No\")\n            break\nfor i in range(n):\n    if y[i] == 0:\n        if x[i] < 0:\n            print(\"Yes\")\n            break\n        else:\n            print(\"No\")\n            break\nfor i in range(n):\n    if x[i] <", "\n\ndef main():\n    n = int(input())\n    x = []\n    y = []\n    for i in range(n):\n        x.append(int(input()))\n        y.append(int(input()))\n    for i in range(n):\n        for j in range(i + 1, n):\n            if x[i] * x[j] + y[i] * y[j] > 0:\n                print(\"Yes\")\n                return\n    print(\"No\")\n\n\nif __name__ == \"__main__\":\n    main()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"], "rewards": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "train rewards": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "time": [33.660022258758545, 69.90815496444702, 106.42850422859192, 118.47411036491394, 154.57125306129456, 190.72338318824768, 227.24864768981934], "sample times": 7}