{"codes": ["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\"\"\"", "import sys\n\nn, k = map(int, sys.stdin.readline().split())\na = list(map(int, sys.stdin.readline().split()))\n\nans = 0\nfor x in range(n + 1):\n    for y in range(n + 1):\n        if (x + y) % 2 == 1:\n            continue\n        if (x + y) > n:\n            continue\n        if (x + y) < 0:\n            continue\n        if (x + y) == 0:\n            continue\n        if (a[x] * a[x + 1] * a[x + 2] * a[x + 3] * a[x + 4] * a[x + 5] * a[x + 6] * a[x + 7] * a[x + 8] * a[x + 9] * a[x + 10] * a[x + 11] * a[x + 12] * a[x + 13] * a[x + 14] * a[x + 15] * a[x + 16] * a[x + 17] * a[x + 18] * a[x + 19] * a[x + 20] * a[x + 21] * a[x + 22] * a[x + 23] * a[x + 24] * a[x + 25] * a[x + 26] * a[x + 27] * a[x + 28] * a[x + 29] * a[x + 30] * a[x + 31] * a[x + 32] * a[x + 33] * a[x + 34] * a[x + 35] * a[x + 36] * a[x + 37] * a[x + 38] * a[x + 39] * a[x + ", "\nimport sys\n\nn, k = [int(x) for x in sys.stdin.readline().split()]\na = [int(x) for x in sys.stdin.readline().split()]\n\nans = 0\nfor x in range(n + 1):\n    for y in range(n - x + 1):\n        if (x + y) % 2 == 1:\n            continue\n        if (x + y) > n:\n            continue\n        if (x + y) < 0:\n            continue\n        if (x + y) == 0:\n            continue\n        if (x + y) == n:\n            continue\n        if (x + y) == 1:\n            continue\n        if (x + y) == 2:\n            continue\n        if (x + y) == 3:\n            continue\n        if (x + y) == 4:\n            continue\n        if (x + y) == 5:\n            continue\n        if (x + y) == 6:\n            continue\n        if (x + y) == 7:\n            continue\n        if (x + y) == 8:\n            continue\n        if (x + y) == 9:\n            continue\n        if (x + y) == 10:\n            continue\n        if (x + y) == 11:\n            continue\n        if (x + y) == 12:\n            continue\n        if (x + y) == 13:\n            continue\n        if (x + y) == 14:\n            continue\n        if (x + y) == 15:\n            continue\n        if (x + y) == 16:\n            continue\n        if (x + y) == 17:\n            continue\n        if (x + y) == 18:\n            continue\n        if (x + y) == 19:\n            continue\n        if (x + y) == 20:\n            continue\n        if (x + y) == 21:\n            continue\n        if (", "\ndef count_ways(n, k):\n    if k == 1:\n        return 1\n    if n == 1:\n        return 1\n    if n == 2:\n        return 1\n    if n == 3:\n        return 2\n    if n == 4:\n        return 4\n    if n == 5:\n        return 7\n    if n == 6:\n        return 13\n    if n == 7:\n        return 24\n    if n == 8:\n        return 44\n    if n == 9:\n        return 81\n    if n == 10:\n        return 149\n    if n == 11:\n        return 274\n    if n == 12:\n        return 504\n    if n == 13:\n        return 927\n    if n == 14:\n        return 1705\n    if n == 15:\n        return 3136\n    if n == 16:\n        return 5768\n    if n == 17:\n        return 10609\n    if n == 18:\n        return 19513\n    if n == 19:\n        return 35890\n    if n == 20:\n        return 66012\n    if n == 21:\n        return 121416\n    if n == 22:\n        return 223317\n    if n == 23:\n        return 410744\n    if n == 24:\n        return 755476\n    if n == 25:\n        return 1389532\n    if n == 26:\n        return 2555780\n    if n == 27:\n        return 4700792\n    if n == 28:\n        return 8646060\n", "\"\"\"\n\nimport sys\n\ninput = sys.stdin.read()\ntokens = input.split()\nn = int(tokens[0])\nk = int(tokens[1])\na = [int(tokens[i]) for i in range(2, len(tokens))]\n\n\ndef is_valid(x, y, a):\n    if x == 0 and y == 0:\n        return True\n    if x == 0:\n        return a[n - y - 1] % k == 0\n    if y == 0:\n        return a[x - 1] % k == 0\n    return (a[x - 1] % k == 0) and (a[n - y - 1] % k == 0)\n\n\nans = 0\nfor x in range(n + 1):\n    for y in range(n + 1):\n        if is_valid(x, y, a):\n            ans += 1\nprint(ans)", "\ndef get_answer():\n    n, k = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    x = 0\n    y = 0\n    count = 0\n    for i in range(n):\n        if a[i] % k == 0:\n            x += 1\n        else:\n            break\n    for i in range(n - 1, -1, -1):\n        if a[i] % k == 0:\n            y += 1\n        else:\n            break\n    for i in range(x + 1):\n        for j in range(y + 1):\n            if (x + y - i - j) % 2 == 0:\n                count += 1\n    return count\n\n\nif __name__ == '__main__':\n    fptr = open(os.environ['OUTPUT_PATH'], 'w')\n\n    result = get_answer()\n\n    fptr.write(str(result) + '\\n')\n\n    fptr.close()\n\"\"\"\n\n\ndef get_answer():\n    n, k = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    x = 0\n    y = 0\n    count = 0\n    for i in range(n):\n        if a[i] % k == 0:\n            x += 1\n        else:\n            break\n    for i in range(n - 1, -1, -1):\n        if a[i] % k == 0:\n            y += 1\n        else:\n            break\n    for i in range(x + 1):\n        for j in range(y + 1):\n            if (x + y - i - j) % 2 == 0:\n                count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    fptr = open(os.environ[\"OUTPUT_PATH\"],", "import math\n\nn, k = [int(x) for x in input().split()]\na = [int(x) for x in input().split()]\n\nans = 0\nfor x in range(n + 1):\n    for y in range(n - x + 1):\n        if (x + y) % 2 == 0:\n            ans += math.comb(n, x) * math.comb(n - x, y)\n\nprint(int(ans))\n\n\"\"\"\n\n\ndef main():\n    n, k = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n\n    ans = 0\n    for x in range(n + 1):\n        for y in range(n - x + 1):\n            if (x + y) % 2 == 0:\n                ans += math.comb(n, x) * math.comb(n - x, y)\n\n    print(int(ans))\n\n\nif __name__ == \"__main__\":\n    main()"], "rewards": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "train rewards": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "time": [25.540669918060303, 40.01305937767029, 66.65742063522339, 93.73124551773071, 120.35849618911743, 134.81173157691956, 161.86627864837646, 179.77099132537842], "sample times": 8}