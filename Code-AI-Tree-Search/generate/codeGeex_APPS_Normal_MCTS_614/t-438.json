{"codes": ["\nimport sys\n\nn = int(sys.stdin.readline())\nk = 1\nwhile n > 0:\n    n -= k\n    k += 1\nprint(k - 1)\nfor i in range(k - 1, 0, -1):\n    print(i, end=' ')", "\ndef main():\n    n = int(input())\n    if n == 1:\n        print(1)\n        print(1)\n    elif n == 2:\n        print(2)\n        print(1, 1)\n    else:\n        for i in range(2, n):\n            if n % i == 0:\n                print(i)\n                print(int(n / i), int(i))\n                break\n\n\nif __name__ == \"__main__\":\n    main()", "import sys\n\nn = int(sys.stdin.readline())\nk = 1\nwhile n > 0:\n    n -= k\n    k += 1\nprint(k - 1)\nfor i in range(k - 1):\n    print(i + 1, end=' ')", "def main():\n    n = int(input())\n    if n == 1:\n        print(1)\n        print(1)\n    elif n == 2:\n        print(2)\n        print(1, 1)\n    else:\n        for i in range(2, n):\n            if n % i == 0:\n                print(i)\n                print(n // i, i)\n                break\n\n\nif __name__ == '__main__':\n    main()\n\"\"\"\n\n\ndef main():\n    n = int(input())\n    if n == 1:\n        print(1)\n        print(1)\n    elif n == 2:\n        print(2)\n        print(1, 1)\n    else:\n        for i in range(2, n):\n            if n % i == 0:\n                print(i)\n                print(n // i, i)\n                break\n\n\nif __name__ == \"__main__\":\n    main()", "\n\n#!/usr/bin/env python3\n\nimport sys\n\nn = int(sys.stdin.readline())\n\nk = 1\nwhile n > 0:\n    n -= k\n    k += 1\n\nprint(k - 1)\nprint(*range(2, k))", "def get_solution(n):\n    if n == 1:\n        return 1, [1]\n    if n == 2:\n        return 2, [1, 1]\n    if n == 3:\n        return 2, [2, 1]\n    if n == 4:\n        return 3, [2, 2, 1]\n    if n == 5:\n        return 3, [3, 2, 1]\n    if n == 6:\n        return 4, [3, 3, 2, 1]\n    if n == 7:\n        return 4, [4, 3, 2, 1]\n    if n == 8:\n        return 5, [4, 3, 3, 2, 1]\n    if n == 9:\n        return 5, [5, 4, 3, 2, 1]\n    if n == 10:\n        return 6, [5, 4, 3, 3, 2, 1]\n    if n == 11:\n        return 6, [6, 5, 4, 3, 2, 1]\n    if n == 12:\n        return 7, [6, 5, 4, 3, 3, 2, 1]\n    if n == 13:\n        return 7, [7, 6, 5, 4, 3, 2, 1]\n    if n == 14:\n        return 8, [7, 6, 5, 4, 3, 3, 2, 1]\n    if n == 15:\n        return 8, [8, 7, 6, 5, 4, 3, 2, 1]\n    if n == 16:\n        return 9, [8, 7, 6, 5, 4, 3, 3, 2, 1]\n    if n == 17:\n        return 9, [9, 8, 7, 6, 5, 4, 3, 2, 1]\n    if n == 18:\n        return 10, [9, 8, 7, 6, 5, 4, 3, 3, 2, 1]\n    if n == 19:\n        return 10, [10, 9, 8, 7, 6, 5, 4, 3, 2, 1]\n    if n == 20:\n        return 11, [10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1]\n    if n == 21:\n        return 11, [11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1]\n    if n == 22:\n        return 12, [11, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1]\n    if n == 23:", "\ndef get_kids(candies):\n    kids = []\n    for i in range(1, candies + 1):\n        if candies % i == 0:\n            kids.append(i)\n    return len(kids)\n\n\nn = int(input())\nkids = get_kids(n)\nprint(kids)\n\nfor i in range(1, kids + 1):\n    print(i, end=\" \")\n\n\"\"\"\n\n\ndef get_kids(candies):\n    kids = []\n    for i in range(1, candies + 1):\n        if candies % i == 0:\n            kids.append(i)\n    return len(kids)\n\n\nn = int(input())\nkids = get_kids(n)\nprint(kids)\n\nfor i in range(1, kids + 1):\n    print(i, end=\" \")\n\n\"\"\"\n\n\ndef get_kids(candies):\n    kids = []\n    for i in range(1, candies + 1):\n        if candies % i == 0:\n            kids.append(i)\n    return len(kids)\n\n\nn = int(input())\nkids = get_kids(n)\nprint(kids)\n\nfor i in range(1, kids + 1):\n    print(i, end=\" \")\n\n\"\"\"\n\n\ndef get_kids(candies):\n    kids = []\n    for i in range(1, candies + 1):\n        if candies % i == 0:\n            kids.append(i)\n    return len(kids)\n\n\nn = int(input())\nkids = get_kids(n)\nprint(kids)\n\nfor i in range(1, kids + 1):\n    print(i, end=\" \")\n\n\"\"\"", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import math\nimport os\nimport random\nimport re\nimport sys\n\n\n\nif __name__ == '__main__':\n    n = int(input())\n    k = math.ceil(n/2)\n    print(k)\n    for i in range(k):\n        print(2*i+1, 2*i+2)"], "rewards": [0.24, 0.0, 0.24, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "train rewards": [0.2916666666666667, 0.0, 0.2916666666666667, 0.0, 0.041666666666666664, 0.0, 0.0, 0.0, 0.0], "time": [10.637433767318726, 23.781615257263184, 34.77875256538391, 48.24288821220398, 54.61452269554138, 95.04933404922485, 119.92360353469849, 160.27202653884888, 166.2707862854004], "sample times": 9}