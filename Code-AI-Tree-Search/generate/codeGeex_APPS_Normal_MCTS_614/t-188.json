{"codes": ["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import sys\n\nn, k = map(int, sys.stdin.readline().split())\na = list(map(int, sys.stdin.readline().split()))\n\nif sum(a) > 8 * n:\n    print(\"NO\")\nelse:\n    print(\"YES\")", "#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n\tint n,k;\n\tcin>>n>>k;\n\tint a[k];\n\tfor(int i=0;i<k;i++)\n\t{\n\t\tcin>>a[i];\n\t}\n\tint sum=0;\n\tfor(int i=0;i<k;i++)\n\t{\n\t\tsum+=a[i];\n\t}\n\tif(sum>8*n)\n\t{\n\t\tcout<<\"NO\";\n\t\treturn 0;\n\t}\n\tcout<<\"YES\";\n\treturn 0;\n}\n```", "\nimport sys\n\nn, k = map(int, sys.stdin.readline().split())\na = list(map(int, sys.stdin.readline().split()))\n\nif sum(a) > 8 * n:\n    print(\"NO\")\nelse:\n    print(\"YES\")", "\ndef solution(n, k, a):\n    if sum(a) > 8 * n:\n        return \"NO\"\n    if k == 1:\n        return \"YES\"\n    if n == 1:\n        return \"YES\"\n    if n == 2:\n        return \"YES\" if a[0] + a[1] <= 8 else \"NO\"\n    if n == 3:\n        return \"YES\" if a[0] + a[1] + a[2] <= 16 else \"NO\"\n    if n == 4:\n        return \"YES\" if a[0] + a[1] + a[2] + a[3] <= 24 else \"NO\"\n    if n == 5:\n        return \"YES\" if a[0] + a[1] + a[2] + a[3] + a[4] <= 32 else \"NO\"\n    if n == 6:\n        return \"YES\" if a[0] + a[1] + a[2] + a[3] + a[4] + a[5] <= 40 else \"NO\"\n    if n == 7:\n        return \"YES\" if a[0] + a[1] + a[2] + a[3] + a[4] + a[5] + a[6] <= 48 else \"NO\"\n    if n == 8:\n        return \"YES\" if a[0] + a[1] + a[2] + a[3] + a[4", "\ndef check(a):\n    for i in range(len(a)-1):\n        for j in range(i+1,len(a)):\n            if abs(a[i]-a[j])==1 or abs(a[i]-a[j])==7:\n                return False\n    return True\n\nn,k=map(int,input().split())\na=list(map(int,input().split()))\nif sum(a)>8*n:\n    print(\"NO\")\nelse:\n    if check(a):\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"], "rewards": [0.0, 0.8717948717948718, 0.0, 0.8717948717948718, 0.0, 0.5897435897435898], "train rewards": [0.0, 0.5641025641025641, 0.0, 0.5641025641025641, 0.0, 0.5128205128205128], "time": [7.122446298599243, 28.851792573928833, 40.18506455421448, 62.28493356704712, 84.65723156929016, 106.09074282646179], "sample times": 6}