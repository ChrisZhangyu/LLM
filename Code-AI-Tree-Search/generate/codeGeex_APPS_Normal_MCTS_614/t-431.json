{"codes": ["\nimport sys\n\nn, m = map(int, sys.stdin.readline().split())\nfloor = []\nfor i in range(n):\n    floor.append(list(map(int, sys.stdin.readline().rstrip())))\n\n\ndef turn_off_lights(floor):\n    for i in range(1, n):\n        for j in range(1, m + 1):\n            if floor[i][j] == 1:\n                floor[i][j] = 0\n                floor[i - 1][j] = 0\n                floor[i][j - 1] = 0\n                floor[i - 1][j - 1] = 0\n\n    return floor\n\n\ndef count_minutes(floor):\n    minutes = 0\n    for i in range(1, n):\n        for j in range(1, m + 1):\n            if floor[i][j] == 1:\n                minutes += 1\n                floor[i][j] = 0\n                floor[i - 1][j] = 0\n                floor[i][j - 1] = 0\n                floor[", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import sys\n\nn, m = map(int, sys.stdin.readline().split())\n\nlight = []\nfor i in range(n):\n    light.append(list(map(int, sys.stdin.readline().strip())))\n\n\ndef turn_off_lights(light):\n    for i in range(n):\n        for j in range(m):\n            if light[i][j + 1] == 1:\n                light[i][j + 1] = 0\n                if j + 2 < m + 1:\n                    light[i][j + 2] = 0\n                if i + 1 < n:\n                    light[i + 1][j + 1] = 0\n                    if j + 2 < m + 1:\n                        light[i + 1][j + 2] = 0\n                    if i + 2 < n:\n                        light[i + 2][j + 1] = 0\n                        if j + 2 < m + 1:\n                            light[i + 2][j + 2] = 0\n                        if i + 3 <", "\ndef main():\n    n, m = [int(x) for x in input().split()]\n    light = [[int(x) for x in input()] for i in range(n)]\n    \n    for i in range(n):\n        for j in range(m):\n            if light[i][j] == 1:\n                light[i][j] = 0\n            else:\n                light[i][j] = 1\n    \n    for i in range(n):\n        for j in range(m):\n            if light[i][j] == 1:\n                light[i][j] = 0\n            else:\n                light[i][j] = 1\n    \n    for i in range(n):\n        for j in range(m):\n            if light[i][j] == 1:\n                light[i][j] = 0\n            else:\n                light[i][j] = 1\n    \n    for i in range(n):\n        for j in range(m):\n            if light[i][j] == 1:\n                light[i][j] = 0\n            else:\n                light[i][", "#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n\tint n,m;\n\tcin>>n>>m;\n\tint a[n][m+2];\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tfor(int j=0;j<m+2;j++)\n\t\t{\n\t\t\tcin>>a[i][j];\n\t\t}\n\t}\n\tint ans=0;\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tfor(int j=1;j<m+1;j++)\n\t\t{\n\t\t\tif(a[i][j]==0)\n\t\t\t{\n\t\t\t\tans++;\n\t\t\t\tif(a[i][j-1]==1)\n\t\t\t\t{\n\t\t\t\t\tans++;\n\t\t\t\t}\n\t\t\t\tif(a[i][j+1]==1)\n\t\t\t\t{\n\t\t\t\t\tans++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tcout<<ans;\n", "\ndef min_time(n, m, floors):\n    \"\"\"\n    :type n: int\n    :type m: int\n    :type floors: List[List[int]]\n    :rtype: int\n    \"\"\"\n\n    if n == 1:\n        return 0\n\n    if n == 2:\n        return sum(floors[0]) + sum(floors[1])\n\n    for i in range(1, n):\n        for j in range(1, m + 1):\n            if floors[i][j] == 1:\n                floors[i][j] = 0\n                floors[i - 1][j] = floors[i - 1][j] + 1\n                floors[i][j - 1] = floors[i][j - 1] + 1\n                floors[i][j + 1] = floors[i][j + 1] + 1\n                floors[i - 1][j - 1] = floors[i - 1][j - 1] + 1\n                floors[i - 1][j + 1] = floors[i - 1][j + 1", "#include <bits/stdc++.h>\nusing namespace std;\n\nint main()\n{\n    int n,m;\n    cin>>n>>m;\n    int a[n][m+2];\n    for(int i=0;i<n;i++)\n    {\n        for(int j=0;j<m+2;j++)\n        {\n            cin>>a[i][j];\n        }\n    }\n    for(int i=0;i<n;i++)\n    {\n        for(int j=0;j<m+2;j++)\n        {\n            cout<<a[i][j]<<\" \";\n        }\n        cout<<endl;\n    }\n    return 0;\n}"], "rewards": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "train rewards": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "time": [17.628348112106323, 33.94167613983154, 50.03660798072815, 66.01540303230286, 82.05395936965942, 98.27392864227295, 114.29045391082764], "sample times": 7}