{"codes": ["\n#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n\tstring s;\n\tcin>>s;\n\tfor(int i=0;i<s.size();i++)\n\t{\n\t\tif(s[i]=='?')\n\t\t{\n\t\t\tfor(int j='A';j<='Z';j++)\n\t\t\t{\n\t\t\t\ts[i]=j;\n\t\t\t\tif(is_permutation(s.begin(),s.end()))\n\t\t\t\t{\n\t\t\t\t\tcout<<s<<endl;\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\ts[i]='?';\n\t\t\t}\n\t\t}\n\t}\n\tcout<<-1<<endl;\n\treturn 0;\n}\n```\n", "\n\n-----Input-----\n\nThe first and only line of the input contains a single string s (1 \u2264 |s| \u2264 50 000), the word that ZS the Coder remembers. Each character of the string is the uppercase letter of English alphabet ('A'-'Z') or is a question mark ('?'), where the question marks denotes the letters that ZS the Coder can't remember.\n\n\n-----Output-----\n\nIf there is no way to replace all the question marks with uppercase letters such that the resulting word is nice, then print  - 1 in the only line.\n\nOtherwise, print a string which denotes a possible nice word that ZS the Coder learned. This string should match the string from the input, except for the question marks replaced with uppercase English letters.\n\nIf there are multiple solutions, you may print any of them.\n\n\n-----Examples-----\nInput\nABC??FGHIJK???OPQR?TUVWXY?\n\nOutput\nABCDEFGHIJKLMNOPQRZTUVWXYS\nInput\nWELCOMETOCODEFORCESROUNDTHREEHUNDREDANDSEVENTYTWO\n\nOutput\n-1\nInput\n??????????????????????????\n\nOutput\nMNBVCXZLKJHGF", "import re\n\ns = input()\n\nfor i in range(len(s)):\n    if s[i] == '?':\n        for j in range(26):\n            s = s[:i] + chr(ord('A') + j) + s[i + 1:]\n            if re.search(r'[^A-Z]', s):\n                s = s[:i] + '?' + s[i + 1:]\n            else:\n                print(s)\n                exit(0)\n\nprint(-1)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import string\ns=input()\nfor i in range(len(s)):\n    if s[i]=='?':\n        for j in string.ascii_uppercase:\n            if j not in s[:i]+s[i+1:]:\n                s=s[:i]+j+s[i+1:]\n                print(s)\n                break\n        else:\n            print(-1)", "#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n\tstring s;\n\tcin>>s;\n\tfor(int i=0;i<s.size();i++)\n\t{\n\t\tif(s[i]=='?')\n\t\t{\n\t\t\tfor(int j='A';j<='Z';j++)\n\t\t\t{\n\t\t\t\ts[i]=j;\n\t\t\t\tif(is_permutation(s.begin(),s.end()))\n\t\t\t\t{\n\t\t\t\t\tcout<<s<<endl;\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\ts[i]='?';\n\t\t\t}\n\t\t}\n\t}\n\tcout<<-1<<endl;\n\treturn 0;\n}\n```\n", "\nimport re\n\ns = input()\n\nfor i in range(len(s)):\n    if s[i] == '?':\n        for j in range(26):\n            s = s[:i] + chr(ord('A') + j) + s[i + 1:]\n            print(s)\n            break\n    else:\n        print(s)", "import sys\n\ns = sys.stdin.readline().strip()\n\nif '?' not in s:\n    print(s)\nelse:\n    for i in range(26):\n        s = s.replace('?', chr(ord('A') + i), 1)\n        if '?' not in s:\n            print(s)\n            break", "\n\n\n\n```", "import string\n\ns = raw_input()\n\nfor i in range(len(s)):\n    if s[i] == '?':\n        for j in string.ascii_uppercase:\n            if j not in s[:i] and j not in s[i+1:]:\n                s = s[:i] + j + s[i+1:]\n                break\n\nif '?' in s:\n    print '-1'\nelse:\n    print s\n\n\"\"\""], "rewards": [0.0, 0.0, 0.68, 0.0, 0.0, 0.08, 0.08, 0.0, 0.0], "train rewards": [0.0, 0.0, 0.72, 0.2, 0.0, 0.0, 0.04, 0.0, 0.0], "time": [12.482400894165039, 29.84676432609558, 47.46541404724121, 55.19360136985779, 67.57726383209229, 75.09328937530518, 85.10753774642944, 103.05971574783325, 117.75868630409241], "sample times": 9}