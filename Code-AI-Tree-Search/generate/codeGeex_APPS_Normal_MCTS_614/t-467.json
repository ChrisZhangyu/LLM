{"codes": ["\n#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n    string s;\n    cin>>s;\n    for(int i=0;i<s.size();i++)\n    {\n        if(s[i]=='A')\n        {\n            cout<<\"YXWVUTGHIJKLM\";\n        }\n        else if(s[i]=='B')\n        {\n            cout<<\"ZABCDEFSRQPON\";\n        }\n        else if(s[i]=='C')\n        {\n            cout<<\"ZABCDEFSRQPON\";\n        }\n        else if(s[i]=='D')\n        {\n            cout<<\"ZABCDEFSRQPON\";\n        }\n        else if(s[i]=='E')\n        {\n            cout<<\"ZABCDEFSRQPON\";\n        }\n        else if(s[i]=='F')\n        {\n            cout<<\"ZABCDEFSRQPON\";\n        }\n        else if(s[i]=='G')\n        {\n            cout<<\"ZABCDEFSRQPON\";\n        }\n        else if(s[i]=='H')\n        {\n            cout<<\"ZABCDEFSRQPON\";\n        }\n        else if(s[i]=='I')\n        {\n            cout<<\"ZABCDEFSRQPON\";\n        }\n        else if(s[i]=='J')\n        {\n            cout<<\"ZABCDEFSRQPON\";\n        }\n        else if(s[i]=='K')\n        {\n            cout<<\"ZABCDEFSRQPON\";\n        }\n        else if(s[i]=='L')\n        {\n            cout<<\"ZABCDEFSRQPON\";\n        }\n        else if(s[i]=='M')\n        {\n            cout<<\"ZABCDEFSRQPON\";\n        }\n        else if(s[i", "import sys\n\ns = sys.stdin.readline().strip()\n\nif len(s) != 27:\n    print(\"Impossible\")\n    sys.exit(0)\n\ngrid = []\n\nfor i in range(2):\n    grid.append(sys.stdin.readline().strip())\n\nif len(grid[0]) != 13 or len(grid[1]) != 13:\n    print(\"Impossible\")\n    sys.exit(0)\n\nfor i in range(2):\n    for j in range(13):\n        if grid[i][j] not in s:\n            print(\"Impossible\")\n            sys.exit(0)\n\nfor i in range(13):\n    for j in range(2):\n        if grid[j][i] not in s:\n            print(\"Impossible\")\n            sys.exit(0)\n\nfor i in range(13):\n    for j in range(2):\n        if grid[j][i] not in s:\n            print(\"Impossible\")\n            sys.exit(0)\n\nfor i in range(13):\n    for j in range(2):\n        if grid[j][i] not in s:\n            print(\"Impossible\")\n            sys.exit(0)\n\nfor i in range(13):\n    for j in range(2):\n        if grid[j][i] not in s:\n            print(\"Impossible\")\n            sys.exit(0)\n\nfor i in range(13):\n    for j in range(2):\n        if grid[j][i] not in s:\n            print(\"Impossible\")\n            sys.exit(0)\n\nfor i in range(13):\n    for j in range(2):\n        if grid[j][i] not in s:\n            print(\"Impossible\")\n            sys.exit(0)\n\nfor i in range(13):\n    for j in range(2):\n        if grid[j][i] not in s:\n            print(\"Impossible\")\n            sys.exit(0)\n\nfor", "\nimport sys\n\ns = sys.stdin.readline().strip()\n\nif len(s) != 27:\n    print(\"Impossible\")\n    sys.exit(0)\n\ngrid = []\n\nfor i in range(2):\n    grid.append(sys.stdin.readline().strip())\n\nif len(grid[0]) != 13 or len(grid[1]) != 13:\n    print(\"Impossible\")\n    sys.exit(0)\n\nfor i in range(2):\n    for j in range(13):\n        if grid[i][j] not in s:\n            print(\"Impossible\")\n            sys.exit(0)\n\nfor i in range(13):\n    for j in range(2):\n        if grid[j][i] not in s:\n            print(\"Impossible\")\n            sys.exit(0)\n\nfor i in range(13):\n    for j in range(2):\n        if grid[j][i] not in s:\n            print(\"Impossible\")\n            sys.exit(0)\n\nfor i in range(13):\n    for j in range(2):\n        if grid[j][i] not in s:\n            print(\"Impossible\")\n            sys.exit(0)\n\nfor i in range(13):\n    for j in range(2):\n        if grid[j][i] not in s:\n            print(\"Impossible\")\n            sys.exit(0)\n\nfor i in range(13):\n    for j in range(2):\n        if grid[j][i] not in s:\n            print(\"Impossible\")\n            sys.exit(0)\n\nfor i in range(13):\n    for j in range(2):\n        if grid[j][i] not in s:\n            print(\"Impossible\")\n            sys.exit(0)\n\nfor i in range(13):\n    for j in range(2):\n        if grid[j][i] not in s:\n            print(\"Impossible\")\n            sys.exit(0)\n\n", "#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n\tstring s;\n\tcin>>s;\n\tint n=s.size();\n\tif(n!=27)\n\t{\n\t\tcout<<\"Impossible\";\n\t\treturn 0;\n\t}\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tif(s[i]=='A')\n\t\t{\n\t\t\ts[i]='B';\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tif(s[i]=='B')\n\t\t{\n\t\t\ts[i]='C';\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tif(s[i]=='C')\n\t\t{\n\t\t\ts[i]='D';\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tif(s[i]=='D')\n\t\t{\n\t\t\ts[i]='E';\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tif(s[i]=='E')\n\t\t{\n\t\t\ts[i]='F';\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tif(s[i]=='F')\n\t\t{\n\t\t\ts[i]='G';\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tif(s[i]=='G')\n\t\t{\n\t\t\ts[i]='H';\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor(int", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "#include <iostream>\n#include <string>\nusing namespace std;\nint main()\n{\n    string s;\n    cin >> s;\n    for (int i = 0; i < s.size(); i++)\n    {\n        if (s[i] == 'A')\n        {\n            cout << \"YXWVUTGHIJKLM\" << endl;\n        }\n        else if (s[i] == 'B')\n        {\n            cout << \"ZABCDEFSRQPON\" << endl;\n        }\n        else if (s[i] == 'C')\n        {\n            cout << \"ZABCDEFSRQPON\" << endl;\n        }\n        else if (s[i] == 'D')\n        {\n            cout << \"ZABCDEFSRQPON\" << endl;\n        }\n        else if (s[i] == 'E')\n        {\n            cout << \"ZABCDEFSRQPON\" << endl;\n        }\n        else if (s[i] == 'F')\n        {\n            cout << \"ZABCDEFSRQPON\" << endl;\n        }\n        else if (s[i] == 'G')\n        {\n            cout << \"ZABCDEFSRQPON\" << endl;\n        }\n        else if (s[i] == 'H')\n        {\n            cout << \"ZABCDEFSRQPON\" << endl;\n        }\n        else if (s[i] == 'I')\n        {\n            cout << \"ZABCDEFSRQPON\" << endl;\n        }\n        else if (s[i] == 'J')\n        {\n            cout << \"ZABCDEFSRQPON\" << endl;\n        }\n        else if (s[i] == 'K')\n        {\n            cout << \"ZABCDEFSRQPON\" << endl;\n        }\n        else if (s[i] == 'L')\n        {\n            cout << \"ZABCDEFSRQP"], "rewards": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "train rewards": [0.0, 0.0, 0.20833333333333334, 0.0, 0.0, 0.0], "time": [26.27856183052063, 53.70429253578186, 81.14228081703186, 108.36689138412476, 135.32509088516235, 162.55405974388123], "sample times": 6}