{"codes": ["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import sys\n\nn, m = map(int, sys.stdin.readline().split())\na = []\nfor i in range(n):\n    a.append(list(map(int, sys.stdin.readline().split())))\n\n\ndef mirror(a):\n    for i in range(n // 2):\n        for j in range(m):\n            a[i][j], a[n - i - 1][j] = a[n - i - 1][j], a[i][j]\n    return a\n\n\ndef check(a):\n    for i in range(n // 2):\n        for j in range(m):\n            if a[i][j] != a[n - i - 1][j]:\n                return False\n    return True\n\n\nans = 0\nwhile not check(a):\n    a = mirror(a)\n    ans += 1\n\nprint(ans)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\nimport sys\n\nn, m = map(int, sys.stdin.readline().split())\n\na = []\n\nfor i in range(n):\n    a.append(list(map(int, sys.stdin.readline().split())))\n\nans = n\n\nfor i in range(n // 2):\n    for j in range(m):\n        a[i][j] = a[n - i - 1][j]\n        a[n - i - 1][j] = a[n - i - 1][m - j - 1]\n        a[n - i - 1][m - j - 1] = a[i][m - j - 1]\n\nfor i in range(n):\n    for j in range(m):\n        if a[i][j] == 0:\n            ans -= 1\n\nprint(ans)", "#!/usr/bin/env python3\n\nimport sys\n\nn, m = map(int, sys.stdin.readline().split())\na = []\nfor i in range(n):\n    a.append(list(map(int, sys.stdin.readline().split())))\n\n\ndef mirror(a):\n    n = len(a)\n    m = len(a[0])\n    for i in range(n // 2):\n        for j in range(m):\n            a[i][j], a[n - i - 1][j] = a[n - i - 1][j], a[i][j]\n    return a\n\n\ndef check(a):\n    n = len(a)\n    m = len(a[0])\n    for i in range(n // 2):\n        for j in range(m):\n            if a[i][j] != a[n - i - 1][j]:\n                return False\n    return True\n\n\nans = 0\nwhile not check(a):\n    a = mirror(a)\n    ans += 1\n\nprint(ans)", "\nclass Solution(object):\n    def minRows(self, a):\n        \"\"\"\n        :type a: List[List[int]]\n        :rtype: int\n        \"\"\"\n        n = len(a)\n        m = len(a[0])\n        for i in range(n):\n            for j in range(m):\n                if a[i][j] == 0:\n                    a[i][j] = 1\n                else:\n                    a[i][j] = 0\n        for i in range(n):\n            for j in range(m):\n                if a[i][j] == 0:\n                    a[i][j] = 1\n                else:\n                    a[i][j] = 0\n        for i in range(n):\n            for j in range(m):\n                if a[i][j] == 0:\n                    a[i][j] = 1\n                else:\n                    a[i][j] = 0\n        for i in range(n):\n            for j in range(m):\n                if a[i][j] == 0:\n                    a[i][j] = 1\n                else:\n                    a[i][j] = 0\n        for i in range(n):\n            for j in range(m):\n                if a[i][j] == 0:\n                    a[i][j] = 1\n                else:\n                    a[i][j] = 0\n        for i in range(n):\n            for j in range(m):\n                if a[i][j] == 0:\n                    a[i][j] = 1\n                else:\n                    a[i][j] = 0\n        for i in range(n):\n            for j in range(m):\n                if a[i][j] == 0:\n                    a[i][j] = 1\n                else:\n                    a[i][j] = 0"], "rewards": [0.0, 0.0, 0.04, 0.0, 0.0], "train rewards": [0.0, 0.0, 0.04, 0.0, 0.0], "time": [5.150663375854492, 32.36675810813904, 55.55334544181824, 71.57949090003967, 106.38815259933472], "sample times": 5}