{"codes": ["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import math\nimport os\nimport random\nimport re\nimport sys\n\nif __name__ == '__main__':\n    first_multiple_input = input().rstrip().split()\n\n    m = int(first_multiple_input[0])\n\n    n = int(first_multiple_input[1])\n\n    second_multiple_input = input().rstrip().split()\n\n    r = int(second_multiple_input[0])\n\n    c = int(second_multiple_input[1])\n\n    first_matrix = []\n\n    for _ in range(m):\n        first_matrix_item = input()\n        first_matrix.append(first_matrix_item)\n\n    second_matrix = []\n\n    for _ in range(n):\n        second_matrix_item = input()\n        second_matrix.append(second_matrix_item)\n\n    result = []\n\n    for i in range(m):\n        for j in range(n):\n            if first_matrix[i][j] == 'X' and second_matrix[i][j] == 'X':\n                result.append('X')\n            elif first_matrix[i][j] == 'X' and second_matrix[i][j] == 'B':\n                result.append('B')\n            elif first_matrix[i][j] == 'X' and second_matrix[i][j] == 'C':\n                result.append('C')\n            elif first_matrix[i][j] == 'A' and second_matrix[i][j] == 'X':\n                result.append('X')\n            elif first_matrix[i][j] == 'A' and second_matrix[i][j] == 'B':\n                result.append('B')\n            elif first_matrix[i][j] == 'A' and second_matrix[i][j] == 'C':\n                result.append('C')\n            elif first_matrix[i][j] == 'B' and second_matrix[i][j] == 'X':\n                result.append('X')\n            elif first_matrix[i][j] == 'B' and second_matrix[i][j] == 'A':\n                result.append('A')\n            elif first_matrix[i][j] == 'B' and second_matrix", "#include<bits/stdc++.h>\nusing namespace std;\nint a[3][3],b[3][3];\nint main()\n{\n\tfor(int i=0;i<3;i++)\n\t{\n\t\tfor(int j=0;j<3;j++)\n\t\t{\n\t\t\tcin>>a[i][j];\n\t\t}\n\t}\n\tfor(int i=0;i<3;i++)\n\t{\n\t\tfor(int j=0;j<3;j++)\n\t\t{\n\t\t\tcin>>b[i][j];\n\t\t}\n\t}\n\tfor(int i=0;i<3;i++)\n\t{\n\t\tfor(int j=0;j<3;j++)\n\t\t{\n\t\t\tif(a[i][j]!=b[i][j])\n\t\t\t{\n\t\t\t\tcout<<\"NO\";\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n\tcout<<\"YES\";\n\treturn 0;\n}\n```", "\nimport numpy as np\nimport sys\n\n\ndef check(a, b):\n    for i in range(2):\n        for j in range(2):\n            if a[i][j] != b[i][j]:\n                return False\n    return True\n\n\nif __name__ == '__main__':\n    bessie = sys.stdin.readline().strip().split()\n    elsie = sys.stdin.readline().strip().split()\n    bessie = np.array(bessie).reshape(2, 2)\n    elsie = np.array(elsie).reshape(2, 2)\n    if check(bessie, elsie):\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import sys\n\n\ndef main():\n    bessie_puzzle = sys.stdin.readline().strip()\n    elsie_puzzle = sys.stdin.readline().strip()\n\n    if bessie_puzzle == elsie_puzzle:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\n\nif __name__ == '__main__':\n    main()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\ndef main():\n    bessie_puzzle = []\n    elsie_puzzle = []\n    for i in range(2):\n        bessie_puzzle.append(list(input()))\n    for i in range(2):\n        elsie_puzzle.append(list(input()))\n\n    for i in range(2):\n        for j in range(2):\n            if bessie_puzzle[i][j] == 'X' and elsie_puzzle[i][j] == 'X':\n                pass\n            elif bessie_puzzle[i][j] == 'X' and elsie_puzzle[i][j] != 'X':\n                bessie_puzzle[i][j] = elsie_puzzle[i][j]\n                elsie_puzzle[i][j] = 'X'\n            elif bessie_puzzle[i][j] != 'X' and elsie_puzzle[i][j] == 'X':\n                elsie_puzzle[i][j] = bessie_puzzle[i][j]\n                bessie_puzzle[i][j] = 'X'\n            elif bessie_puzzle[i][j] != 'X' and elsie_puzzle[i][j] != 'X':\n                if bessie_puzzle[i][j] == elsie_puzzle[i][j]:\n                    pass\n                elif bessie_puzzle[i][j] != elsie_puzzle[i][j]:\n                    bessie_puzzle[i][j], elsie_puzzle[i][j] = elsie_puzzle[i][j], bessie_puzzle[i][j]\n\n    for i in range(2):\n        for j in range(2):\n            if bessie_puzzle[i][j] != elsie_puzzle[i][j]:\n                return 'NO'\n    return 'YES'\n\n\nif __name__ == '__main__':\n    print(main())", "\nimport sys\nimport copy\n\n\nclass Puzzle(object):\n    def __init__(self):\n        self.puzzle = []\n        self.puzzle.append(sys.stdin.readline().strip())\n        self.puzzle.append(sys.stdin.readline().strip())\n        self.puzzle.append(sys.stdin.readline().strip())\n        self.puzzle.append(sys.stdin.readline().strip())\n\n        self.puzzle2 = []\n        self.puzzle2.append(sys.stdin.readline().strip())\n        self.puzzle2.append(sys.stdin.readline().strip())\n        self.puzzle2.append(sys.stdin.readline().strip())\n        self.puzzle2.append(sys.stdin.readline().strip())\n\n        self.puzzle3 = []\n        self.puzzle3.append(sys.stdin.readline().strip())\n        self.puzzle3.append(sys.stdin.readline().strip())\n        self.puzzle3.append(sys.stdin.readline().strip())\n        self.puzzle3.append(sys.stdin.readline().strip())\n\n        self.puzzle4 = []\n        self.puzzle4.append(sys.stdin.readline().strip())\n        self.puzzle4.append(sys.stdin.readline().strip())\n        self.puzzle4.append(sys.stdin.readline().strip())\n        self.puzzle4.append(sys.stdin.readline().strip())\n\n        self.puzzle5 = []\n        self.puzzle5.append(sys.stdin.readline().strip())\n        self.puzzle5.append(sys.stdin.readline().strip())\n        self.puzzle5.append(sys.stdin.readline().strip())\n        self.puzzle5.append(sys.stdin.readline().strip())\n\n        self.puzzle6 = []\n        self.puzzle6.append(sys.stdin.readline().strip())\n        self.puzzle6.append(sys.stdin.readline().strip())\n        self.puzzle6.append(sys.stdin.readline().strip())\n        ", "\n\ndef main():\n    bessie_puzzle = []\n    elsie_puzzle = []\n    for i in range(2):\n        bessie_puzzle.append(list(input()))\n    for i in range(2):\n        elsie_puzzle.append(list(input()))\n\n    for i in range(2):\n        for j in range(2):\n            if bessie_puzzle[i][j] == 'X' and elsie_puzzle[i][j] == 'X':\n                pass\n            elif bessie_puzzle[i][j] == 'X' and elsie_puzzle[i][j] != 'X':\n                bessie_puzzle[i][j] = elsie_puzzle[i][j]\n                elsie_puzzle[i][j] = 'X'\n            elif bessie_puzzle[i][j] != 'X' and elsie_puzzle[i][j] == 'X':\n                elsie_puzzle[i][j] = bessie_puzzle[i][j]\n                bessie_puzzle[i][j] = 'X'\n            elif bessie_puzzle[i][j] != 'X' and elsie_puzzle[i][j] != 'X':\n                if bessie_puzzle[i][j] != elsie_puzzle[i][j]:\n                    bessie_puzzle[i][j], elsie_puzzle[i][j] = elsie_puzzle[i][j], bessie_puzzle[i][j]\n\n    if bessie_puzzle == elsie_puzzle:\n        print('YES')\n    else:\n        print('NO')\n\n\nif __name__ == '__main__':\n    main()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"], "rewards": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "train rewards": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "time": [29.43397307395935, 59.35066819190979, 74.76663613319397, 104.51281762123108, 133.53846096992493, 163.92665028572083, 193.87411093711853, 223.54661774635315], "sample times": 8}