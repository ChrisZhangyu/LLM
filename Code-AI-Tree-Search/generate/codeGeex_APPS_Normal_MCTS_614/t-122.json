{"codes": ["\nimport sys\n\nn = int(sys.stdin.readline().strip())\na = list(map(int, sys.stdin.readline().strip().split()))\n\ndef check(a):\n    if sum(a[:len(a)//2]) == sum(a[len(a)//2:]):\n        return True\n    else:\n        return False\n\nfor i in range(n):\n    if check(a):\n        print(\"YES\")\n        break\n    else:\n        a.insert(i, a.pop(a.index(max(a))))\n        if check(a):\n            print(\"YES\")\n            break", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import sys\n\nn = int(sys.stdin.readline().strip())\na = list(map(int, sys.stdin.readline().strip().split()))\n\ndef check(a):\n    if sum(a[:len(a)//2]) == sum(a[len(a)//2:]):\n        return True\n    else:\n        return False\n\nfor i in range(n):\n    if check(a):\n        print(\"YES\")\n        break\n    else:\n        a.insert(i, a.pop(a.index(max(a))))\n        if check(a):\n            print(\"YES\")\n            break", "\ndef can_divide():\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = sum(a)\n    if s % 2 != 0:\n        return 'NO'\n    else:\n        s = s // 2\n        for i in range(n):\n            if a[i] > s:\n                return 'NO'\n            elif a[i] == s:\n                return 'YES'\n            else:\n                s -= a[i]\n        return 'NO'\n\n\nif __name__ == '__main__':\n    fptr = open(os.environ['OUTPUT_PATH'], 'w')\n\n    q = int(input())\n\n    for q_itr in range(q):\n        n = int(input())\n\n        arr = list(map(int, input().rstrip().split()))\n\n        result = can_divide()\n\n        fptr.write(result + '\\n')\n\n    fptr.close()", "#include<bits/stdc++.h>\nusing namespace std;\nint a[100005];\nint main()\n{\n    int n;\n    cin>>n;\n    for(int i=1;i<=n;i++)\n    {\n        cin>>a[i];\n    }\n    for(int i=1;i<=n;i++)\n    {\n        int s=0;\n        for(int j=i;j<=n;j++)\n        {\n            s+=a[j];\n        }\n        for(int j=i-1;j>=1;j--)\n        {\n            s-=a[j];\n        }\n        if(s==0)\n        {\n            cout<<\"YES\";\n            return 0;\n        }\n    }\n    cout<<\"NO\";\n    return 0;\n}", "\ndef check(a):\n    n = len(a)\n    if n == 1:\n        return True\n    if n == 2:\n        if a[0] == a[1]:\n            return True\n        else:\n            return False\n    if n == 3:\n        if a[0] == a[1] and a[1] == a[2]:\n            return True\n        else:\n            return False\n    if n == 4:\n        if a[0] == a[1] and a[1] == a[2] and a[2] == a[3]:\n            return True\n        else:\n            return False\n    if n == 5:\n        if a[0] == a[1] and a[1] == a[2] and a[2] == a[3] and a[3] == a[4]:\n            return True\n        else:\n            return False\n    if n == 6:\n        if a[0] == a[1] and a[1] == a[2] and a[2] == a[3] and a[3] == a[4] and a[4] == a[5]:\n            return True\n        else:\n            return False\n    if n == 7:\n        if a[0] == a[1] and a[1] == a[2] and a[2] == a[3] and a[3] == a[4] and a[4] == a[5] and a[5] == a[6]:\n            return True\n        else:\n            return False\n    if n == 8:\n        if a[0] == a[1] and a[1] == a[2] and a[2] == a[3] and a[3] == a[4] and a[4] == a[5] and a[5] == a[6] and a[6] == a[7]:\n            return True\n        else:\n            return False\n    if n == 9:\n        if a[0] == a[1] and a[1] == a[2] and a[2] == a[3] and a[3] == a[4] and a[4] == a[5] and a[5] == a[6] and a[6] == a[7] and a[7] == a[8]:\n            return True\n        else:\n            return False\n    if n == 10:\n        if a[0] == a[1] and a[1] == a[2] and a[2] == a[3] and a[3] == a[4] and a[4] == a[5] and a[5] == a[6]", "\n\ndef can_divide(a):\n    n = len(a)\n    s = sum(a)\n    if s % 2 != 0:\n        return False\n    s //= 2\n    for i in range(n):\n        if a[i] > s:\n            return False\n        s -= a[i]\n    return True\n\n\nif __name__ == '__main__':\n    n = int(input())\n    a = list(map(int, input().split()))\n    if can_divide(a):\n        print('YES')\n    else:\n        print('NO')\n\n\"\"\"\n\n\ndef can_divide(a):\n    n = len(a)\n    s = sum(a)\n    if s % 2 != 0:\n        return False\n    s //= 2\n    for i in range(n):\n        if a[i] > s:\n            return False\n        s -= a[i]\n    return True\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    a = list(map(int, input().split()))\n    if can_divide(a):\n        print(\"YES\")\n    else:\n        print(\"NO\")"], "rewards": [0.22916666666666666, 0.0, 0.22916666666666666, 0.0, 0.0, 0.0, 0.0], "train rewards": [0.1276595744680851, 0.0, 0.1276595744680851, 0.0, 0.0, 0.0, 0.0], "time": [14.20487117767334, 51.06751251220703, 64.43645596504211, 79.24481964111328, 93.36863017082214, 129.51368379592896, 147.06237506866455], "sample times": 7}