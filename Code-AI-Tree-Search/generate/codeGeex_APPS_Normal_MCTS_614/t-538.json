{"codes": ["\ndef is_palindrome(s):\n    return s == s[::-1]\n\ndef is_quasi_palindrome(x):\n    s = str(x)\n    if is_palindrome(s):\n        return True\n    else:\n        for i in range(1, len(s)):\n            if is_palindrome(s[:i] + s[i:]):\n                return True\n    return False\n\nif __name__ == '__main__':\n    x = int(input())\n    if is_quasi_palindrome(x):\n        print('YES')\n    else:\n        print('NO')\n\n\"\"\"\n\n\ndef is_palindrome(s):\n    return s == s[::-1]\n\n\ndef is_quasi_palindrome(x):\n    s = str(x)\n    if is_palindrome(s):\n        return True\n    else:\n        for i in range(1, len(s)):\n            if is_palindrome(s[:i] + s[i:]):\n                return True\n    return False\n\n\nif __name__ == \"__main__\":\n    x = int(input())\n    if is_quasi_palindrome(x):\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\n\"\"\"\n\n\ndef is_palindrome(s):\n    return s == s[::-1]\n\n\ndef is_quasi_palindrome(x):\n    s = str(x)\n    if is_palindrome(s):\n        return True\n    else:\n        for i in range(1, len(s)):\n            if is_palindrome(s[:i] + s[i:]):\n                return True\n    return False\n\n\nif __name__ == \"__main__\":\n    x = int(input())\n    if is_quasi_palindrome(x):\n        print(\"YES\")\n    else:\n        print(\"NO\")", "import math\n\ndef is_palindrome(n):\n    return str(n) == str(n)[::-1]\n\ndef is_quasi_palindromic(n):\n    return is_palindrome(n) or is_palindrome(int(str(n).zfill(math.ceil(math.log(n, 10)))))\n\nn = int(input())\nprint(\"YES\" if is_quasi_palindromic(n) else \"NO\")\nUse Standard Output format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "def is_quasi_palindromic(x):\n    x = str(x)\n    if x == x[::-1]:\n        return \"YES\"\n    else:\n        return \"NO\"", "\nimport sys\n\nx = int(sys.stdin.readline().strip())\n\nif str(x) == str(x)[::-1]:\n    print \"YES\"\nelse:\n    print \"NO\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import sys\n\nx = int(sys.stdin.readline().strip())\n\nif x < 10:\n    print(\"NO\")\nelif x == 11:\n    print(\"NO\")\nelif x == 101:\n    print(\"NO\")\nelif x == 111:\n    print(\"NO\")\nelif x == 1111:\n    print(\"NO\")\nelif x == 11111:\n    print(\"NO\")\nelif x == 111111:\n    print(\"NO\")\nelif x == 1111111:\n    print(\"NO\")\nelif x == 11111111:\n    print(\"NO\")\nelif x == 111111111:\n    print(\"NO\")\nelif x == 1111111111:\n    print(\"NO\")\nelif x == 11111111111:\n    print(\"NO\")\nelif x == 111111111111:\n    print(\"NO\")\nelif x == 1111111111111:\n    print(\"NO\")\nelif x == 11111111111111:\n    print(\"NO\")\nelif x == 111111111111111:\n    print(\"NO\")\nelif x == 1111111111111111:\n    print(\"NO\")\nelif x == 11111111111111111:\n    print(\"NO\")\nelif x == 111111111111111111:\n    print(\"NO\")\nelif x == 1111111111111111111:\n    print(\"NO\")\nelif x == 11111111111111111111:\n    print(\"NO\")\nelif x == 111111111111111111111:\n    print(\"NO\")\nelif x == 1111111111111111111111:\n    print(\"NO\")\nelif x == 11111111111111111111111:\n    print(\"NO\")\nelif x == 111111111111111111111111:\n    print(\"NO\")\nelif x == 1111111111111111111111111:\n    print(\"NO\")\nelif x == 11111111111111111111111111:\n    print(\"NO\")\nelif x == 111111111111111111111111111:\n    print(\"NO", "\n\ndef isPalindrome(s):\n    return s == s[::-1]\n\n\ndef isQuasiPalindromic(x):\n    s = str(x)\n    if isPalindrome(s):\n        return True\n    else:\n        for i in range(len(s)):\n            if isPalindrome(s[:i] + s[i:]):\n                return True\n    return False\n\n\nif __name__ == \"__main__\":\n    x = int(input())\n    print(\"YES\" if isQuasiPalindromic(x) else \"NO\")", "import string\n\ndef is_palindrome(s):\n    return s == s[::-1]\n\ndef is_quasi_palindromic(x):\n    s = str(x)\n    if is_palindrome(s):\n        return True\n    else:\n        for i in range(len(s)):\n            if is_palindrome(s[:i] + s[i+1:]):\n                return True\n    return False\n\nx = int(input())\nprint(\"YES\" if is_quasi_palindromic(x) else \"NO\")\nUse Standard Input format\n\"\"\"\n\n\ndef is_palindrome(s):\n    return s == s[::-1]\n\n\ndef is_quasi_palindromic(x):\n    s = str(x)\n    if is_palindrome(s):\n        return True\n    else:\n        for i in range(len(s)):\n            if is_palindrome(s[:i] + s[i + 1 :]):\n                return True\n    return False\n\n\nx = int(input())\nprint(\"YES\" if is_quasi_palindromic(x) else \"NO\")", "\nimport math\nimport os\nimport random\nimport re\nimport sys\n\nif __name__ == '__main__':\n    n = int(input())\n    n = str(n)\n    n = n[::-1]\n    if n == n[::-1]:\n        print(\"YES\")\n    else:\n        print(\"NO\")"], "rewards": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "train rewards": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "time": [25.222402334213257, 64.78981184959412, 72.10454297065735, 111.89284253120422, 151.10012698173523, 190.6277210712433, 203.6637318134308, 219.97569298744202, 230.47820734977722], "sample times": 9}