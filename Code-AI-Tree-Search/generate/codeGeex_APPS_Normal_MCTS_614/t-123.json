{"codes": ["\nimport sys\n\nn, k = map(int, sys.stdin.readline().split())\na = list(map(int, sys.stdin.readline().split()))\nb = list(map(int, sys.stdin.readline().split()))\n\nfor i in range(k):\n    a[a.index(0)] = b[i]\n\nif all(a[i] <= a[i + 1] for i in range(n - 1)):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "import sys\n\nn, k = map(int, sys.stdin.readline().split())\na = list(map(int, sys.stdin.readline().split()))\nb = list(map(int, sys.stdin.readline().split()))\n\nfor i in range(k):\n    a[a.index(0)] = b[i]\n\nif all(a[i] <= a[i + 1] for i in range(n - 1)):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<cmath>\n#include<cstdlib>\n#include<queue>\n#include<stack>\n#include<vector>\n#include<map>\n#include<set>\n#include<ctime>\n#include<cctype>\n#define INF 0x3f3f3f3f\n#define ll long long\n#define ull unsigned long long\n#define db double\n#define ms(a,b) memset(a,b,sizeof(a))\n#define mt(a,b) memset(a,b,sizeof(a)*sizeof(b))\n#define mst(a,b) memset(a,b,sizeof(a))\n#define sqr(x) ((x)*(x))\nusing namespace std;\nconst int maxn=100", "\ndef main():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    for i in range(k):\n        a[a.index(0)] = b[i]\n    print(\"Yes\" if all(a[i] <= a[i + 1] for i in range(len(a) - 1)) else \"No\")\n\n\nif __name__ == \"__main__\":\n    main()"], "rewards": [0.1276595744680851, 0.1276595744680851, 0.0, 0.0, 0.0], "train rewards": [0.1702127659574468, 0.1702127659574468, 0.0, 0.0, 0.0], "time": [13.449037075042725, 27.89988112449646, 42.27863621711731, 56.60707449913025, 70.97175669670105], "sample times": 5}