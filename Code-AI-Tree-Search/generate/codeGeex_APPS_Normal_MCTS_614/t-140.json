{"codes": ["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import sys\n\nn, m = map(int, sys.stdin.readline().split())\n\nx = []\ns = []\n\nfor i in range(n):\n    x.append(int(sys.stdin.readline().split()[0]))\n    s.append(int(sys.stdin.readline().split()[0]))\n\nans = 0\n\nfor i in range(1, m + 1):\n    for j in range(n):", "\nimport sys\n\nn, m = map(int, sys.stdin.readline().split())\n\nantennas = []\n\nfor i in range(n):\n    x, s = map(int, sys.stdin.readline().split())\n    antennas.append((x, s))\n\nanswer = 0\n\nfor i in range(1, m + 1):\n    covered = False\n\n    for x, s in antennas:\n        if", "#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n\tint n,m;\n\tcin>>n>>m;\n\tint ans=0;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint x,s;\n\t\tcin>>x>>s;\n\t\tif(x+s>m)\n\t\t{\n\t\t\tans+=(x+s-m);\n\t\t", "\n#include <iostream>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nint main()\n{\n    int n, m;\n    cin >> n >> m;\n    vector<pair<int, int>> antennas(n);\n    for (int i = 0; i < n; i++)\n    {\n        cin >> antennas[i].first >> antennas[i].second;\n    }\n    sort(antennas", "\n\ndef main():\n    n, m = map(int, input().split())\n    antennas = []\n    for i in range(n):\n        x, s = map(int, input().split())\n        antennas.append((x, s))\n    antennas.sort(key=lambda x: x[0])\n    # print(antennas)\n    cost = 0\n    for i in range(1, m + 1):\n        for j in range("], "rewards": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "train rewards": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "time": [4.301294565200806, 12.76686954498291, 21.075021028518677, 29.572782278060913, 37.90140652656555, 46.35169696807861], "sample times": 6}