{"codes": ["\n#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n# Problem: https://uva.onlinejudge.org/index.php?option=com_onlinejudge&Itemid=8&category=13&page=show_problem&problem=1017\n# Python 3.7.3\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    numbers = list(map(int, sys.stdin.readline().strip().split()))\n    if len(set(numbers)) == len(numbers):\n        print(-1)\n    else:\n        print(len(set(numbers)) - 1)\n        print(*sorted(set(numbers)))\n\nif __name__ == '__main__':\n    main()", "import sys\n\nn = int(sys.stdin.readline().strip())\nnumbers = [int(x) for x in sys.stdin.readline().strip().split()]\nnumbers.sort()\n\nif numbers[-1] - numbers[0] == numbers[1] - numbers[0] == numbers[2] - numbers[1] == numbers[3] - numbers[2] == numbers[4] - numbers[3] == numbers[5] - numbers[4] == numbers[6] - numbers[5] == numbers[7] - numbers[6] == numbers[8] - numbers[7] == numbers[9] - numbers[8] == numbers[10] - numbers[9] == numbers[11] - numbers[10] == numbers[12] - numbers[11] == numbers[13] - numbers[12] == numbers[14] - numbers[13] == numbers[15] - numbers[14] == numbers[16] - numbers[15] == numbers[17] - numbers[16] == numbers[18] - numbers[17] == numbers[19] - numbers[18] == numbers[20] - numbers[19] == numbers[21] - numbers[20] == numbers[22] - numbers[21] == numbers[23] - numbers[22] == numbers[24] - numbers[23] == numbers[25] - numbers[24] == numbers[26] - numbers[25] == numbers[27] - numbers[26] == numbers[28] - numbers[27] == numbers[29] - numbers[28] == numbers[30] - numbers[29] == numbers[31] - numbers[30] == numbers[32] - numbers[31] == numbers[33] - numbers[32] == numbers[34] - numbers[33] == numbers[35] - numbers[34] == numbers[36] - numbers[35] == numbers[37] - numbers[36] ==", "#include <iostream>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nint main()\n{\n    int n;\n    cin >> n;\n    vector<int> arr;\n    for (int i = 0; i < n; i++)\n    {\n        int a;\n        cin >> a;\n        arr.push_back(a);\n    }\n\n    sort(arr.begin(), arr.end());\n\n    for (int i = 1; i < n; i++)\n    {\n        if (arr[i] - arr[i - 1] != arr[i + 1] - arr[i])\n        {\n            cout << -1 << endl;\n            return 0;\n        }\n    }\n\n    cout << n << endl;\n    for (int i = 1; i < n; i++)\n    {\n        cout << arr[i] - arr[i - 1] - 1 << \" \";\n    }\n    cout << arr[n - 1] - arr[n - 2] - 1 << endl;\n\n    return 0;\n}", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\nimport sys\n\nn = int(sys.stdin.readline().strip())\na = [int(x) for x in sys.stdin.readline().strip().split()]\n\nif len(set(a)) < n:\n    print(-1)\nelse:\n    print(len(set(a)))\n    print(*sorted(set(a)), sep=\" \")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import math\nimport os\nimport random\nimport re\nimport sys\n\n\nif __name__ == '__main__':\n    n = int(input())\n    arr = list(map(int, input().rstrip().split()))\n    if len(set(arr)) < n:\n        print(-1)\n    else:\n        print(len(set(arr)))\n        print(' '.join(map(str, sorted(set(arr)))))\n\n\n-----Input-----\n\nThe first line contains integer n (1 \u2264 n \u2264 10^5) \u2014 the number of cards. The next line contains the sequence of integers \u2014 the numbers on Alexander's cards. The numbers are positive integers, each of them doesn't exceed 10^8.\n\n\n-----Output-----\n\nIf Arthur can write infinitely many distinct integers on the card, print on a single line -1.\n\nOtherwise, print on the first line the number of integers that suit you. In the second line, print the numbers in the increasing order. Note that the numbers in the answer can exceed 10^8 or even be negative (see test samples).\n\n\n-----Examples-----\nInput\n3\n4 1 7\n\nOutput\n2\n-2 10\n\nInput\n1\n10\n\nOutput\n-1\n\nInput\n4\n1 3 5 9\n\nOutput\n1\n7\n\nInput\n4\n4 3 4 5\n\nOutput\n0\n\nInput\n2\n2 4\n\nOutput\n3\n0 3 6\nUse Standard Input format", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n# Problem: https://uva.onlinejudge.org/index.php?option=com_onlinejudge&Itemid=8&category=13&page=show_problem&problem=1016\n# Total Accepted: 1000\n# Total Submission: 1000\n# Time Limit: 1000 ms\n# Memory Limit: 65536 KB\n\nimport sys\n\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    numbers = list(map(int, sys.stdin.readline().strip().split()))\n\n    if len(numbers) == n:\n        print(-1)\n        return\n\n    if len(numbers) == n + 1:\n        print(0)\n        return\n\n    if len(numbers) == n + 2:\n        print(1)\n        return\n\n    if len(numbers) == n + 3:\n        print(2)\n        return\n\n    if len(numbers) == n + 4:\n        print(3)\n        return\n\n    if len(numbers) == n + 5:\n        print(4)\n        return\n\n    if len(numbers) == n + 6:\n        print(5)\n        return\n\n    if len(numbers) == n + 7:\n        print(6)\n        return\n\n    if len(numbers) == n + 8:\n        print(7)\n        return\n\n    if len(numbers) == n + 9:\n        print(8)\n        return\n\n    if len(numbers) == n + 10:\n        print(9)\n        return\n\n    if len(numbers) == n + 11:\n        print(10)\n        return\n\n    if len(numbers) == n + 12:\n        print(11)\n        return\n\n    "], "rewards": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "train rewards": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "time": [12.20267128944397, 39.10798215866089, 55.41875243186951, 81.74374628067017, 108.88555955886841, 129.40482568740845, 156.19741797447205], "sample times": 7}