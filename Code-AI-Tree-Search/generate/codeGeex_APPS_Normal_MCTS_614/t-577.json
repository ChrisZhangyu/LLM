{"codes": ["\nimport sys\n\nn, k = map(int, sys.stdin.readline().split())\na = list(map(int, sys.stdin.readline().split()))\nb = list(map(int, sys.stdin.readline().split()))\n\nans = 0\nfor i in range(len(a)):\n    if a[i] >= k:\n        ans += a[i] // k\n        a[i] = a[i] % k\n    if b[i] >= k:\n        ans += b[i] // k\n        b[i] = b[i] % k\n\nfor i in range(len(a)):\n    if a[i] > 0:\n        ans += 1\n    if b[i] > 0:\n        ans += 1\n\nprint(ans)", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n    int n,k;\n    cin>>n>>k;\n    int a[n+1],b[n+1];\n    for(int i=1;i<=n;i++)\n    {\n        cin>>a[i]>>b[i];\n    }\n    int ans=0;\n    for(int i=1;i<=n;i++)\n    {\n        if(a[i]>=k)\n        {\n            ans+=a[i]/k;\n            a[i]%=k;\n        }\n        if(b[i]>=k)\n        {\n            ans+=b[i]/k;\n            b[i]%=k;\n        }\n    }\n    cout<<ans;\n    return 0;\n}", "import sys\n\nn, k = map(int, sys.stdin.readline().split())\n\nshrubs = []\nfor i in range(n):\n    shrubs.append(list(map(int, sys.stdin.readline().split())))\n\nans = 0\nfor i in range(n):\n    if sum(shrubs[i]) >= k:\n        ans += 1\n    else:\n        ans += sum(shrubs[i]) // k\n        if sum(shrubs[i]) % k != 0:\n            ans += 1\n\nprint(ans)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\ndef maxBaskets(n,k,a,b):\n    if n == 0:\n        return 0\n    if k == 0:\n        return 0\n    if n == 1:\n        if k >= a[0] and k >= b[0]:\n            return 1\n        else:\n            return 0\n    if k >= a[0] and k >= b[0]:\n        return 1 + maxBaskets(n-1,k-a[0],a[1:],b[1:])\n    else:\n        return maxBaskets(n-1,k,a[1:],b[1:])\nn,k = list(map(int,input().split()))\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\nprint(maxBaskets(n,k,a,b))\n\"\"\"\n\n\ndef maxBaskets(n, k, a, b):\n    if n == 0:\n        return 0\n    if k == 0:\n        return 0\n    if n == 1:\n        if k >= a[0] and k >= b[0]:\n            return 1\n        else:\n            return 0\n    if k >= a[0] and k >= b[0]:\n        return 1 + maxBaskets(n - 1, k - a[0], a[1:], b[1:])\n    else:\n        return maxBaskets(n - 1, k, a[1:], b[1:])\n\n\nn, k = list(map(int, input().split()))\na = list(map(int, input()."], "rewards": [0.047619047619047616, 0.0, 0.0, 0.19047619047619047, 0.0], "train rewards": [0.09523809523809523, 0.0, 0.0, 0.47619047619047616, 0.0], "time": [18.703282833099365, 40.921199798583984, 53.691429138183594, 76.252432346344, 98.85659885406494], "sample times": 5}