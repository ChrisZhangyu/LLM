{"codes": ["\n#!/usr/bin/env python3\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn, k = [int(x) for x in input().split()]\na = [int(x) for x in input().split()]\n\nif len(a) != k:\n    print(-1)\nelse:\n    g = a[0]\n    for i in range(1, k):\n        g = lcm(g, a[i])\n    print(g)", "#include <iostream>\n#include <cstdio>\n#include <cmath>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\nlong long n,k;\nlong long gcd(long long a,long long b)\n{\n    return b==0?a:gcd(b,a%b);\n}\nint main()\n{\n    scanf(\"%lld%lld\",&n,&k);\n    for(long long i=1;i<=sqrt(n);i++)\n    {\n        if(n%i==0)\n        {\n            long long j=n/i;\n            if(gcd(i,j)==1)\n            {\n                if(k==2)\n                {\n                    printf(\"%lld %lld\\n\",i,j);\n                    return 0;\n                }\n                else\n                {\n                    k--;\n                    printf(\"%lld \",i);\n                    printf(\"%lld \",j);\n                }\n            }\n        }\n    }\n    printf(\"-1\\n\");\n    return 0;\n}\n```", "\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\n\ndef lcm(a, b):\n    return a * b / gcd(a, b)\n\n\nn, k = map(int, input().split())\n\nif n < k:\n    print(-1)\nelse:\n    a = list(map(int, input().split()))\n    if len(a) != k:\n        print(-1)\n    else:\n        for i in range(k):\n            for j in range(i + 1, k):\n                if lcm(a[i], a[j]) == n:\n                    print(a[i], a[j], a[i] * a[j] / gcd(a[i], a[j]))\n                    break\n                elif lcm(a[j], a[i]) == n:\n                    print(a[j], a[i], a[j] * a[i] / gcd(a[j], a[i]))\n                    break", "import math\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\n\ndef lcm(a, b):\n    return a * b / gcd(a, b)\n\n\nn, k = map(int, input().split())\n\nif k == 1:\n    print(n)\nelse:\n    if n % k == 0:\n        print(n // k)\n        for i in range(k - 1):\n            print(n // k + 1)\n    else:\n        print(-1)\n\n\n-----Input-----\n\nThe first line consists of two numbers n and k (1 \u2264 n, k \u2264 10^10).\n\n\n-----Output-----\n\nIf the answer exists then output k numbers \u2014 resulting sequence. Otherwise output -1. If there are multiple answers, print any of them.\n\n\n-----Examples-----\nInput\n6 3\n\nOutput\n1 2 3\n\nInput\n8 2\n\nOutput\n2 6\n\nInput\n5 3\n\nOutput\n-1\nUse Standard Input format\n", "\nimport math\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return (a * b) // gcd(a, b)\n\nn, k = map(int, input().split())\n\nif n < k:\n    print(-1)\n    exit(0)\n\na = list(map(int, input().split()))\n\nif len(a) != k:\n    print(-1)\n    exit(0)\n\na.sort()\n\nfor i in range(1, len(a)):\n    a[i] = lcm(a[i - 1], a[i])\n\nprint(*a)\n\n\"\"\"\n\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\n\ndef lcm(a, b):\n    return (a * b) // gcd(a, b)\n\n\nn, k = map(int, input().split())\n\nif n < k:\n    print(-1)\n    exit(0)\n\na = list(map(int, input().split()))\n\nif len(a) != k:\n    print(-1)\n    exit(0)\n\na.sort()\n\nfor i in range(1, len(a)):\n    a[i] = lcm(a[i - 1], a[i])\n\nprint(*a)", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\n\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n#include <cstring>\n#include <string>\n#include <vector>\n#include <map>\n#include <set>\n#include <queue>\n#include <stack>\n#include <ctime>\n#include <cstdlib>\n#include <cctype>\n#include <sstream>\n#include <climits>\n#include <iomanip>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\ntypedef pair<ld, ld> pld;\ntypedef vector<int> vi;\ntypedef vector<ll> vll;\ntypedef vector<pii> vpii;\ntypedef vector<pll> vpll;\ntypedef vector<pld> vpld;\ntypedef map<int, int> mii;\ntypedef map<ll, ll> mll;\ntypedef map<char, int> mci;\ntypedef map<string, int> msi;\ntypedef map<pii, int> mpii;\ntypedef map<pll, int> mpll;\ntypedef map<pld, int> mpld;\ntypedef set<int> si;\ntypedef set<char> sc;\ntypedef set<string> ss;\ntypedef set<pii> spii;\ntypedef set<pll> spll;\ntypedef set<pld> spld;\ntypedef priority_queue<int, vector<int>, greater<int> > pqi;\ntypedef priority_queue<ll, vector<ll>, greater<ll> > pql;\ntypedef priority_queue<pii, vector<pii>, greater<pii> > pqpii;\ntypedef priority_queue<pll, vector<pll>, greater<pll> > pqpll;\ntypedef priority_queue<pld, vector<pld>, greater<pld> > pqpld;\n\nint main()\n{\n    ios::sync_with_stdio(false);\n    cin.tie(0);\n    int n, k;\n    cin >> n >> k;\n    if (n == 0)\n    {\n        cout << -1 << endl;\n        return 0;\n    }\n    if (n == 1)\n    {\n        cout << 1 << endl;\n        return 0;\n    }\n    if (n == 2)\n    {\n        cout << 2 << endl;\n        return 0;\n    }\n    if (n == 3)\n    {\n        cout << 3 << endl;\n        return 0;\n    }\n    if (n == 4)\n    {\n        cout << 4 << endl;\n        return 0;\n    }\n    if (n == 5)\n    {\n        cout << 6 << endl;\n        return 0;\n    }\n    if (n == 6)\n    {\n        cout << 9 << endl;\n        return 0;\n    }\n    ", "#!/usr/bin/env python3\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn, k = [int(x) for x in input().split()]\na = [int(x) for x in input().split()]\n\nif len(a) != k:\n    print(-1)\nelse:\n    g = a[0]\n    for i in range(1, len(a)):\n        g = lcm(g, a[i])\n    if n % g != 0:\n        print(-1)\n    else:\n        for i in range(len(a)):\n            a[i] = n // g // a[i]\n        print(*a)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"], "rewards": [0.0, 0.0, 0.49230769230769234, 0.0, 0.0, 0.0, 0.0, 0.0], "train rewards": [0.0, 0.0, 0.375, 0.0, 0.0, 0.0, 0.0, 0.0], "time": [10.368354320526123, 26.753053188323975, 42.120243310928345, 72.38783073425293, 91.99991631507874, 134.083101272583, 176.09050154685974, 217.81560635566711], "sample times": 8}