{"codes": ["\nimport sys\n\nw, h = [int(x) for x in sys.stdin.readline().split()]\nu1, d1 = [int(x) for x in sys.stdin.readline().split()]\nu2, d2 = [int(x) for x in sys.stdin.readline().split()]\n\nstones = [(u1, d1), (u2, d2)]\n\nwhile h > 0:\n    h += 1\n    for u, d in stones:\n        if h == d:\n            w -= u\n            if w < 0:\n                w = 0\n            break\n\nprint(w)", "import sys\n\nw, h = [int(x) for x in sys.stdin.readline().split()]\nu1, d1 = [int(x) for x in sys.stdin.readline().split()]\nu2, d2 = [int(x) for x in sys.stdin.readline().split()]\n\nstones = [(u1, d1), (u2, d2)]\n\nwhile h > 0:\n    h += 1\n    for u, d in stones:\n        if h == d:\n            w -= u\n    if w <= 0:\n        w = 0\n        break\n\nprint(w)", "class Snowball:\n    def __init__(self, weight, height, stone1, stone2):\n        self.weight = weight\n        self.height = height\n        self.stone1 = stone1\n        self.stone2 = stone2\n\n    def move(self):\n        while self.height > 0:\n            self.weight += self.height\n            if self.height == self.stone1[1]:\n                self.weight -= self.stone1[0]\n            elif self.height == self.stone2[1]:\n                self.weight -= self.stone2[0]\n            self.height -= 1\n\n    def get_weight(self):\n        self.move()\n        return self.weight", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```", "\ndef snowball(w, h, u1, d1, u2, d2):\n    if w == 0:\n        return 0\n    if h == 0:\n        return 0\n    if h == 1:\n        return 0\n    if h == 2:\n        return 0\n    if h == 3:\n        return 0\n    if h == 4:\n        return 0\n    if h == 5:\n        return 0\n    if h == 6:\n        return 0\n    if h == 7:\n        return 0\n    if h == 8:\n        return 0\n    if h == 9:\n        return 0\n    if h == 10:\n        return 0\n    if h == 11:\n        return 0\n    if h == 12:\n        return 0\n    if h == 13:\n        return 0\n    if h == 14:\n        return 0\n    if h == 15:\n        return 0\n", "class Solution(object):\n    def stoneMelting(self, w, h, u1, d1, u2, d2):\n        \"\"\"\n        :type w: int\n        :type h: int\n        :type u1: int\n        :type d1: int\n        :type u2: int\n        :type d2: int\n        :rtype: int\n        \"\"\"", "import math\n\nw, h = [int(x) for x in input().split()]\nu1, d1 = [int(x) for x in input().split()]\nu2, d2 = [int(x) for x in input().split()]\n\nwhile h > 0:\n    if h == d1:\n        w -= u1\n    elif h == d2:\n        w -= u2\n    h -= 1\n    w += math.ceil(h)\n\nprint(w)"], "rewards": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "train rewards": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "time": [15.160496950149536, 39.06190347671509, 63.0186231136322, 70.67491388320923, 85.47776651382446, 97.72971439361572, 112.48974537849426], "sample times": 7}