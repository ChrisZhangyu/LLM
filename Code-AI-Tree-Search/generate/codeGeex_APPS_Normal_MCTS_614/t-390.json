{"codes": ["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "n,a,b=map(int,input().split())\nc=list(map(int,input().split()))\nif c[0]==c[-1] and c[0]==0:\n    print(0)\nelif c[0]==c[-1] and c[0]==1:\n    print(-1)\nelif c[0]!=c[-1] and c[0]==0:\n    print(a+b)\nelif c[0]!=c[-1] and c[0]==1:\n    print(a+b)\nelif c[0]!=c[-1] and c[0]==2:\n    print(a+b)\n\"\"\"\n\nimport sys\n\nn, a, b = map(int, input().split())\nc = list(map(int, input().split()))\nif c[0] == c[-1] and c[0] == 0:\n    print(0)\nelif c[0] == c[-1] and c[0] == 1:\n    print(-1)\nelif c[0] != c[-1] and c[0] == 0:\n    print(a + b)\nelif c[0] != c[-1] and c[0] == 1:\n    print(a + b)\nelif c[0] != c[-1] and c[0] == 2:", "import sys\n\nn, a, b = map(int, sys.stdin.readline().split())\ndancers = list(map(int, sys.stdin.readline().split()))\n\nfor i in range(len(dancers)):\n    if dancers[i] == 2:\n        dancers[i] = 0 if i % 2 == 0 else 1\n\nfor i in range(len(dancers) // 2):\n    if dancers[i] != dancers[len(dancers) - i - 1]:\n        if dancers[i] == 0:\n            dancers[i] = 1\n            dancers[len(dancers) - i - 1] = 0\n        else:\n            dancers[i] = 0\n            dancers[len(dancers) - i - 1] = 1\n\nfor i in range(len(dancers)):\n    if dancers[i] == 0:\n        dancers[i] = a\n    elif dancers[i] == 1:\n        dancers[i] = b\n\nprint(sum(dancers))", "\nimport sys\n\nn, a, b = [int(x) for x in sys.stdin.readline().split()]\ns = [int(x) for x in sys.stdin.readline().split()]\nans = 0\n\nfor i in range(n):\n    if s[i] == 0:\n        ans += a\n    elif s[i] == 1:\n        ans += b\n\nfor i in range(n):\n    if s[i] == 0:\n        s[i] = 1\n    elif s[i] == 1:\n        s[i] = 0\n\nfor i in range(n):\n    if s[i] == 0:\n        ans += a\n    elif s[i] == 1:\n        ans += b\n\nif ans == 0:\n    print(-1)\nelse:\n    print(ans)", "\ndef solve(n, a, b, c):\n    if c[0] == c[-1] and c[0] == 0:\n        return a\n    if c[0] == c[-1] and c[0] == 1:\n        return b\n    if c[0] != c[-1] and c[0] == 0 and c[-1] == 1:\n        return a + b\n    if c[0] != c[-1] and c[0] == 1 and c[-1] == 0:\n        return a + b\n    if c[0] != c[-1] and c[0] == 0 and c[-1] == 2:\n        return a + b\n    if c[0] != c[-1] and c[0] == 2 and c[-1] == 0:\n        return a + b\n    if c[0] != c[-1] and c[0] == 1 and c[-1] == 2:\n        return a + b\n    if c[0] != c[-1] and c[0] == 2 and c[-1] == 1:\n        return a + b\n    if c[0] != c[-1] and c[0] == 2 and c[-1] == 2:\n        return a + b\n    if c[0] != c[-1] and c[0]", "\ndef get_palindrome(n, a, b):\n    if n == 1:\n        return a\n    if n == 2:\n        return min(a, b)\n    if n == 3:\n        return min(a, b, a + b)\n    if n == 4:\n        return min(a, b, a + b, a + b + a)\n    if n == 5:\n        return min(a, b, a + b, a + b + a, a + b + a + b)\n    if n == 6:\n        return min(a, b, a + b, a + b + a, a + b + a + b, a + b + a + b + a)\n    if n == 7:\n        return min(a, b, a + b, a + b + a, a + b + a + b, a + b + a + b + a, a + b + a + b + a + b)\n    if n == 8:\n        return min(a, b, a + b, a + b + a, a + b + a + b, a + b + a + b + a, a + b + a + b + a + b, a + b + a + b + a + b + a)\n    if n == 9:\n        return min(a, b, a + b, a + b +"], "rewards": [0.0, 0.0, 0.2222222222222222, 0.0, 0.0, 0.0], "train rewards": [0.0, 0.0, 0.038461538461538464, 0.038461538461538464, 0.0, 0.0], "time": [19.598238468170166, 38.40944027900696, 54.88675856590271, 73.69291543960571, 92.5336287021637, 111.02600288391113], "sample times": 6}