{"codes": ["\nimport sys\n\nn, m = [int(x) for x in sys.stdin.readline().split()]\nw = [int(x) for x in sys.stdin.readline().split()]\nl = [int(x) for x in sys.stdin.readline().split()]\nv = [int(x) for x in sys.stdin.readline().split()]\n\n\ndef check(w, l, v):\n    for i in range(m):\n        if sum(w[j] for j in range(i, n, m)) > v[i]:\n            return False\n    return True\n\n\nif check(w, l, v):\n    print(l[-1])\nelse:\n    print(-1)", "import sys\n\nn, m = [int(x) for x in sys.stdin.readline().split()]\nw = [int(x) for x in sys.stdin.readline().split()]\nl = [int(x) for x in sys.stdin.readline().split()]\nv = [int(x) for x in sys.stdin.readline().split()]\n\n\ndef check_collapse():\n    for i in range(1, m):\n        if sum(w[i - 1:i + 1]) > v[i]:\n            return False\n    return True\n\n\ndef min_dist():\n    for i in range(1, m):\n        if sum(w[i - 1:i + 1]) <= v[i]:\n            return l[i]\n    return 0\n\n\nif check_collapse():\n    print(min_dist())\nelse:\n    print(-1)", "#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n    int n,m;\n    cin>>n>>m;\n    int w[n+1];\n    int l[m+1];\n    int v[m+1];\n    for(int i=1;i<=n;i++)\n    {\n        cin>>w[i];\n    }\n    for(int i=1;i<=m;i++)\n    {\n        cin>>l[i];\n        cin>>v[i];\n    }\n    int d[n+1][m+1];\n    for(int i=0;i<=n;i++)\n    {\n        for(int j=0;j<=m;j++)\n        {\n            d[i][j]=-1;\n        }\n    }\n    d[0][0]=0;\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=1;j<=m;j++)\n        {\n            for(int k=0;k<i;k++)\n            {\n                if(d[k][j-1]==-1)\n                {\n                    continue;\n                }\n                if(d[i][j]==-1)\n                {\n                    d[i][j]=d[k][", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\ndef main():\n    n, m = [int(x) for x in input().split()]\n    w = [int(x) for x in input().split()]\n    l = [int(x) for x in input().split()]\n    v = [int(x) for x in input().split()]\n    for i in range(m):\n        if sum(w[i:i+2]) > v[i]:\n            print(-1)\n            return\n    print(l[m-1])\n\nif __name__ == \"__main__\":\n    main()", "import math\n\nn, m = [int(x) for x in input().split()]\nw = [int(x) for x in input().split()]\nl = [int(x) for x in input().split()]\nv = [int(x) for x in input().split()]\n\nfor i in range(m):\n    for j in range(i + 1, m):\n        if l[i] + l[j] > v[i] + v[j]:\n            print(-1)\n            exit(0)\n\nfor i in range(m):\n    for j in range(i + 1, m):\n        if l[i] + l[j] > v[i] + v[j]:\n            print(-1)\n            exit(0)\n\nfor i in range(m):\n    for j in range(i + 1, m):\n        if l[i] + l[j] > v[i] + v[j]:\n            print(-1)\n            exit(0)\n\nfor i in range(m):\n    for j in range(i + 1, m):\n        if l[i] + l[j] > v[i] + v[j]:\n            print(-1)\n            exit(0)\n\nfor i in range(m):\n    for j in range(i + 1, m):\n        if", "import sys\n\ndef main():\n    n, m = [int(x) for x in sys.stdin.readline().split()]\n    w = [int(x) for x in sys.stdin.readline().split()]\n    l = [int(x) for x in sys.stdin.readline().split()]\n    v = [int(x) for x in sys.stdin.readline().split()]\n\n    for i in range(m):\n        if sum(w[i:i+2]) > v[i]:\n            print(-1)\n            return\n    print(l[m-1])\n\nif __name__ == '__main__':\n    main()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"], "rewards": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "train rewards": [0.21875, 0.28125, 0.0, 0.0, 0.0, 0.0, 0.0], "time": [10.841991424560547, 24.454796075820923, 42.95746159553528, 61.16662073135376, 70.64424896240234, 89.16622352600098, 107.29899024963379], "sample times": 7}