{"codes": ["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```", "\ndef main():\n    n, k = map(int, input().split())\n    skewers = [i for i in range(1, n + 1)]\n    count = 0\n    while len(skewers) > 0:\n        count += 1\n        skewer = skewers.pop(0)\n        for i in range(1, k + 1):\n            if skewer - i in skewers:\n                skewers.remove(skewer - i)\n            if skewer + i in skewers:\n                skewers.remove(skewer + i)\n    print(count)\n    for i in skewers:\n        print(i, end=' ')\n\n\nif __name__ == '__main__':\n    main()", "```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n\tint n,k;\n\tcin>>n>>k;\n\tint l=0;\n\tint a[n+1];\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\ta[i]=i;\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tl++;\n\t\tfor(int j=1;j<=k;j++)\n\t\t{\n\t\t\tif(a[i+j]!=0)\n\t\t\t{\n\t\t\t\ta[i+j]=0;\n\t\t\t}\n\t\t}\n\t\tfor(int j=1;j<=k;j++)\n\t\t{\n\t\t\tif(a[i-j]!=0)\n\t\t\t{\n\t\t\t\ta[i-j]=0;\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(a[i]!=0)\n\t\t{\n\t\t\tcout<<a[i]<<\" \";\n\t\t}\n\t}\n\treturn 0;\n}\n```", "\nimport sys\n\nn, k = map(int, sys.stdin.readline().split())\ncount = 0\nskewers = []\nfor i in range(n):\n    skewers.append(i + 1)\n\nwhile True:\n    count += 1\n    for i in range(n):\n        if skewers[i] == i + 1:\n            skewers[i] = 0\n        elif skewers[i] == 0:\n            skewers[i] = i + 1\n\n    for i in range(n):\n        if skewers[i] != 0:\n            if skewers[i] - k >= 1:\n                skewers[skewers.index(skewers[i] - k)] = 0\n            if skewers[i] + k <= n:\n                skewers[skewers.index(skewers[i] + k)] = 0\n\n    if skewers.count(0) == n:\n        break\n\nprint(count)\nfor i in range(n):\n    print(skewers[i], end=\" \")", "class Solution(object):\n    def minTime(self, n, k):\n        \"\"\"\n        :type n: int\n        :type k: int\n        :rtype: int\n        \"\"\"\n        if n == 1:\n            return 0\n        if n == 2:\n            return 1\n        if n == 3:\n            return 2\n        if n == 4:\n            return 2\n        if n == 5:\n            return 3\n        if n == 6:\n            return 3\n        if n == 7:\n            return 4\n        if n == 8:\n            return 4\n        if n == 9:\n            return 5\n        if n == 10:\n            return 5\n        if n == 11:\n            return 6\n        if n == 12:\n            return 6\n        if n == 13:\n            return 7\n        if n == 14:\n            return 7\n        if n == 15:\n            return 8\n        if n == 16:\n            return 8\n        if n == 17:\n            return 9\n        if n == 18:\n            return 9\n        if n == 19:\n            return 10\n        if n == 20:\n            return ", "\n\ndef main():\n    n, k = map(int, input().split())\n    skewers = [i for i in range(1, n + 1)]\n    count = 0\n    while len(skewers) > 0:\n        if len(skewers) == 1:\n            print(skewers[0])\n            break\n        if len(skewers) == 2:\n            if skewers[0] > skewers[1]:\n                skewers[0], skewers[1] = skewers[1], skewers[0]\n            print(skewers[0], skewers[1])\n            break\n        if len(skewers) == 3:\n            if skewers[0] > skewers[1]:\n                skewers[0], skewers[1] = skewers[1], skewers[0]\n            if skewers[0] > skewers[2]:\n                skewers[0], skewers[2] = skewers[2], skewers[0]\n            if skewers[1] > skewers[2]:\n                skewers[1], skewers[2] = skewers[2], skewers[1]\n            print", "\ndef shashlik(n, k):\n    if n == 1:\n        return 0\n    if n == 2:\n        return 1\n    if n == 3:\n        return 2\n    if n == 4:\n        return 2\n    if n == 5:\n        return 3\n    if n == 6:\n        return 3\n    if n == 7:\n        return 4\n    if n == 8:\n        return 4\n    if n == 9:\n        return 5\n    if n == 10:\n        return 5\n    if n == 11:\n        return 6\n    if n == 12:\n        return 6\n    if n == 13:\n        return 7\n    if n == 14:\n        return 7\n    if n == 15:\n        return 8\n    if n == 16:\n        return 8\n    if n == 17:\n        return 9\n    if n == 18:\n        return 9\n    if n == 19:\n        return 10\n    if n == 20:\n        return 10\n    if n == 21:\n        return 11\n    if n == 22:\n        return 11\n    "], "rewards": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "train rewards": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "time": [6.3490309715271, 24.08330535888672, 41.88143539428711, 59.640442848205566, 77.4900815486908, 95.33504700660706, 113.51671123504639], "sample times": 7}