{"codes": ["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import sys\n\ndef main():\n    input = sys.stdin.readline()\n    input = input.strip()\n    input = input.split('|')\n    for i in range(len(input)):\n        input[i] = input[i].split('+')\n    for i in range(len(input)):\n        for j in range(len(input[i])):\n            input[i][j] = input[i][j].split('=')\n    for i in range(len(input)):\n        for j in range(len(input[i])):\n            for k in range(len(input[i][j])):\n                input[i][j][k] = input[i][j][k].split()\n    for i in range(len(input)):\n        for j in range(len(input[i])):\n            for k in range(len(input[i][j])):\n                for l in range(len(input[i][j][k])):\n                    input[i][j][k][l] = int(input[i][j][k][l])\n    for i in range(len(input)):\n        for j in range(len(input[i])):\n            for k in range(len(input[i][j])):\n                for l in range(len(input[i][j][k])):\n                    input[i][j][k][l] = str(input[i][j][k][l])\n    for i in range(len(input)):\n        for j in range(len(input[i])):\n            for k in range(len(input[i][j])):\n                input[i][j][k] = ''.join(input[i][j][k])\n", "def main():\n    expression = input()\n    if expression == \"Impossible\":\n        print(expression)\n    else:\n        for i in range(len(expression)):\n            if expression[i] == \"|\":\n                expression = expression[:i] + \"+\" + expression[i + 1 :]\n                print(expression)\n                break\n\n\nif __name__ == \"__main__\":\n    main()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\nimport sys\n\ndef main():\n    input = sys.stdin.readline()\n    input = input.strip()\n    input = input.split('|')\n\n    for i in range(len(input)):\n        input[i] = input[i].split('+')\n\n    for i in range(len(input)):\n        for j in range(len(input[i])):\n            input[i][j] = input[i][j].split('=')\n\n    for i in range(len(input)):\n        for j in range(len(input[i])):\n            for k in range(len(input[i][j])):\n                input[i][j][k] = input[i][j][k].split()\n\n    for i in range(len(input)):\n        for j in range(len(input[i])):\n            for k in range(len(input[i][j])):\n                for l in range(len(input[i][j][k])):\n                    input[i][j][k][l] = int(input[i][j][k][l])\n\n    for i in range(len(input)):\n        for j in range(len(input[i])):\n            for k in range(len(input[i][j])):\n                for l in range(len(input[i][j][k])):\n                    input[i][j][k][l] = int(input[i][j][k][l])\n\n    for i in range(len(input)):\n        for j in range(len(input[i])):\n            for k in range(len(input[i][j])):\n                for l in range(len(input[i][j][k])", "\ndef main():\n    expression = input()\n    if expression == \"Impossible\":\n        print(expression)\n    else:\n        for i in range(len(expression)):\n            if expression[i] == \"|\":\n                expression = expression[:i] + \"+\" + expression[i + 1 :]\n                print(expression)\n                break\n\n\nif __name__ == \"__main__\":\n    main()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import re\n\ndef main():\n    s = input()\n    s = re.sub(r'\\|', ' ', s)\n    s = re.sub(r'\\+', ' + ', s)\n    s = re.sub(r'\\=', ' = ', s)\n    s = re.sub(r'\\(', ' ( ', s)\n    s = re.sub(r'\\)', ' ) ', s)\n    s = re.sub(r'\\[', ' [ ', s)\n    s = re.sub(r'\\]', ' ] ', s)\n    s = re.sub(r'\\{', ' { ', s)\n    s = re.sub(r'\\}', ' } ', s)\n    s = re.sub(r'\\^', ' ^ ', s)\n    s = re.sub(r'\\*', ' * ', s)\n    s = re.sub(r'\\?', ' ? ', s)\n    s = re.sub(r'\\!', ' ! ', s)\n    s = re.sub(r'\\$', ' $ ', s)\n    s = re.sub(r'\\#', ' # ', s)\n    s = re.sub(r'\\%', ' % ', s)\n    s = re.sub(r'\\&', ' & ', s)\n    s = re.sub(r'\\'', ' \\' ', s)\n    s = re.sub(r'\\\"', ' \\\" ', s)\n    s = re.sub(r'\\<', ' < ', s)\n    s = re.sub(r'\\>', ' > ', s)\n    s = re.sub(r'\\~', ' ~ ', s)\n    s = re.sub(r'\\`', ' ` ', s", "def get_input():\n    return input()\n\n\ndef get_input():\n    return input()\n\n\ndef get_input():\n    return input()\n\n\ndef get_input():\n    return input()\n\n\ndef get_input():\n    return input()\n\n\ndef get_input():\n    return input()\n\n\ndef get_input():\n    return input()\n\n\ndef get_input():\n    return input()"], "rewards": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "train rewards": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "time": [21.565714120864868, 44.281633615493774, 67.14204859733582, 89.84967088699341, 112.26500749588013, 134.42485356330872, 141.49832391738892], "sample times": 7}