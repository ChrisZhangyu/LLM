{"codes": ["\nimport sys\n\nn, m = map(int, sys.stdin.readline().split())\n\nfriends = []\nfor i in range(n):\n    f = list(map(int, sys.stdin.readline().split()))\n    friends.append(f)\n\n", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import sys\n\nn, m = map(int, sys.stdin.readline().split())\n\nfriends = []\nfor i in range(n):\n    f = list(map(int, sys.stdin.readline().split()))\n    friends.append(f)\n\np", "def read_input():\n    n, m = map(int, input().split())\n    favorite_ingredients = []\n    for i in range(n):\n        favorite_ingredients.append(list(map(int, input().split())))\n    pizzas =", "\ndef read_input():\n    n, m = map(int, input().split())\n    favorite_ingredients = []\n    for i in range(n):\n        favorite_ingredients.append(list(map(int, input().split())))\n    pizzas", "def get_favorite_ingredients(friends):\n    favorite_ingredients = []\n    for friend in friends:\n        favorite_ingredients.append(friend.favorite_ingredients)\n    return favorite_ingredients\n\n\ndef get_", "\ndef get_favorite_ingredients(friends):\n    favorite_ingredients = []\n    for friend in friends:\n        favorite_ingredients.append(friend.favorite_ingredients)\n    return favorite_ingredients\n\n\ndef get", "\n\ndef read_input():\n    n, m = map(int, input().split())\n    friends = []\n    for i in range(n):\n        friends.append(list(map(int, input().split())))\n    pizzas = []\n    for i in range(", "def max_pizzas(friends, pizzas):\n    \"\"\"\n    :type friends: List[List[int]]\n    :type pizzas: List[List[int]]\n    :rtype: Tuple[int, int]\n    \"\"\"\n    friends = sorted(friends"], "rewards": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "train rewards": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "time": [5.787270784378052, 11.672979831695557, 17.61467671394348, 23.56638479232788, 29.459781885147095, 35.36551833152771, 41.20512866973877, 47.02982974052429, 52.88972067832947], "sample times": 9}